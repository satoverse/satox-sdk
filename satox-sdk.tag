<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.13.2" doxygen_gitid="26342b775ea25e6fefb53220926b20702c56fcb3">
  <compound kind="file">
    <name>asset_manager.hpp</name>
    <path>src/asset/include/satox/asset/</path>
    <filename>d6/d64/asset_2include_2satox_2asset_2asset__manager_8hpp.html</filename>
    <includes id="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" name="types.hpp" local="yes" import="no" module="no" objc="no">satox/asset/types.hpp</includes>
    <class kind="class">satox::asset::AssetManager</class>
    <namespace>satox</namespace>
    <namespace>satox::asset</namespace>
  </compound>
  <compound kind="file">
    <name>asset_manager.hpp</name>
    <path>src/core/include/satox/asset/</path>
    <filename>de/d94/core_2include_2satox_2asset_2asset__manager_8hpp.html</filename>
    <class kind="struct">satox::asset::Asset</class>
    <class kind="class">satox::asset::AssetManager</class>
    <class kind="struct">satox::asset::AssetManager::PerformanceConfig</class>
    <class kind="struct">satox::asset::AssetManager::ErrorRecoveryConfig</class>
    <class kind="struct">satox::asset::AssetManager::RecoveryOperation</class>
    <namespace>satox</namespace>
    <namespace>satox::asset</namespace>
  </compound>
  <compound kind="file">
    <name>asset_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>df/de1/core_2include_2satox_2core_2asset__manager_8hpp.html</filename>
    <class kind="class">satox::core::AssetManager</class>
    <class kind="struct">satox::core::AssetManager::AssetMetadata</class>
    <class kind="struct">satox::core::AssetManager::Asset</class>
    <class kind="struct">satox::core::AssetManager::AssetStats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>asset_manager.cpp</name>
    <path>src/asset/src/</path>
    <filename>d0/d1b/asset_2src_2asset__manager_8cpp.html</filename>
    <class kind="class">satox::asset::SimpleLogger</class>
    <namespace>satox</namespace>
    <namespace>satox::asset</namespace>
    <member kind="typedef">
      <type>nlohmann::json</type>
      <name>json</name>
      <anchorfile>d0/d1b/asset_2src_2asset__manager_8cpp.html</anchorfile>
      <anchor>ab701e3ac61a85b337ec5c1abaad6742d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>asset_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>d5/dae/core_2src_2asset__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>asset_manager_pybind.cpp</name>
    <path>src/asset/src/</path>
    <filename>d6/de4/asset__manager__pybind_8cpp.html</filename>
    <member kind="function">
      <type>AssetManager::AssetMetadata</type>
      <name>dict_to_metadata</name>
      <anchorfile>d6/de4/asset__manager__pybind_8cpp.html</anchorfile>
      <anchor>ae9302f4d0b969cfea7eae1ad56500e91</anchor>
      <arglist>(const py::dict &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>py::dict</type>
      <name>metadata_to_dict</name>
      <anchorfile>d6/de4/asset__manager__pybind_8cpp.html</anchorfile>
      <anchor>a10513f80bf029ef8a179cdfdcf526206</anchor>
      <arglist>(const AssetManager::AssetMetadata &amp;m)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PYBIND11_MODULE</name>
      <anchorfile>d6/de4/asset__manager__pybind_8cpp.html</anchorfile>
      <anchor>a32dcbe3116851f34f83c111a3cb5283f</anchor>
      <arglist>(satox_asset, m)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>block.hpp</name>
    <path>src/blockchain/include/satox/blockchain/</path>
    <filename>d9/db2/block_8hpp.html</filename>
    <class kind="class">satox::blockchain::Block</class>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>exceptions.hpp</name>
    <path>src/blockchain/include/satox/blockchain/</path>
    <filename>da/d49/exceptions_8hpp.html</filename>
    <class kind="class">satox::blockchain::BlockchainException</class>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>kawpow.hpp</name>
    <path>src/blockchain/include/satox/blockchain/</path>
    <filename>d8/d09/kawpow_8hpp.html</filename>
    <class kind="class">satox::blockchain::Kawpow</class>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>transaction.hpp</name>
    <path>src/blockchain/include/satox/blockchain/</path>
    <filename>d5/d61/transaction_8hpp.html</filename>
    <class kind="class">satox::blockchain::Transaction</class>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>block.cpp</name>
    <path>src/blockchain/src/</path>
    <filename>d9/d4d/block_8cpp.html</filename>
    <includes id="d9/db2/block_8hpp" name="block.hpp" local="yes" import="no" module="no" objc="no">satox/blockchain/block.hpp</includes>
    <includes id="d5/d61/transaction_8hpp" name="transaction.hpp" local="yes" import="no" module="no" objc="no">satox/blockchain/transaction.hpp</includes>
    <includes id="d8/d09/kawpow_8hpp" name="kawpow.hpp" local="yes" import="no" module="no" objc="no">satox/blockchain/kawpow.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>kawpow.cpp</name>
    <path>src/blockchain/src/</path>
    <filename>dd/dfe/kawpow_8cpp.html</filename>
    <includes id="d8/d09/kawpow_8hpp" name="kawpow.hpp" local="yes" import="no" module="no" objc="no">satox/blockchain/kawpow.hpp</includes>
    <includes id="dd/d5f/KeccakF-1600-reference_8h" name="KeccakF-1600-reference.h" local="yes" import="no" module="no" objc="no">KeccakF-1600-reference.h</includes>
    <includes id="d3/d38/KeccakSponge_8h" name="KeccakSponge.h" local="yes" import="no" module="no" objc="no">KeccakSponge.h</includes>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>KeccakF-1600-reference.h</name>
    <path>src/blockchain/third_party/keccak/include/</path>
    <filename>dd/d5f/KeccakF-1600-reference_8h.html</filename>
    <class kind="struct">KeccakF_1600_State</class>
    <member kind="define">
      <type>#define</type>
      <name>KECCAK_F_1600_WIDTH</name>
      <anchorfile>dd/d5f/KeccakF-1600-reference_8h.html</anchorfile>
      <anchor>a9c8200dc64a2a58465effe64906575ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KECCAK_F_1600_LANES</name>
      <anchorfile>dd/d5f/KeccakF-1600-reference_8h.html</anchorfile>
      <anchor>a05840663491384d69ce560288e97b964</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KECCAK_F_1600_ROUNDS</name>
      <anchorfile>dd/d5f/KeccakF-1600-reference_8h.html</anchorfile>
      <anchor>a87e45964f29d7e6abe11dd535e6ee02d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakF_1600_Initialize</name>
      <anchorfile>dd/d5f/KeccakF-1600-reference_8h.html</anchorfile>
      <anchor>a1e3d2ba7d471ef2885905c4d7169e36d</anchor>
      <arglist>(KeccakF_1600_State *state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakF_1600_StateXORBytes</name>
      <anchorfile>dd/d5f/KeccakF-1600-reference_8h.html</anchorfile>
      <anchor>a96070b6810568d955671ccc769c72c71</anchor>
      <arglist>(KeccakF_1600_State *state, const unsigned char *data, unsigned int offset, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakF_1600_StateExtractBytes</name>
      <anchorfile>dd/d5f/KeccakF-1600-reference_8h.html</anchorfile>
      <anchor>a2501119969421f4a9f0ee78cd55445b8</anchor>
      <arglist>(const KeccakF_1600_State *state, unsigned char *data, unsigned int offset, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakF_1600_StatePermute</name>
      <anchorfile>dd/d5f/KeccakF-1600-reference_8h.html</anchorfile>
      <anchor>a9579edfff1790be29cfb33c55d0026f4</anchor>
      <arglist>(KeccakF_1600_State *state)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KeccakSponge.h</name>
    <path>src/blockchain/third_party/keccak/include/</path>
    <filename>d3/d38/KeccakSponge_8h.html</filename>
    <includes id="dd/d5f/KeccakF-1600-reference_8h" name="KeccakF-1600-reference.h" local="yes" import="no" module="no" objc="no">KeccakF-1600-reference.h</includes>
    <class kind="struct">KeccakSponge</class>
    <member kind="define">
      <type>#define</type>
      <name>KECCAK_SPONGE_BITRATE</name>
      <anchorfile>d3/d38/KeccakSponge_8h.html</anchorfile>
      <anchor>a9453260c58289abc77246d18c12fa59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KECCAK_SPONGE_CAPACITY</name>
      <anchorfile>d3/d38/KeccakSponge_8h.html</anchorfile>
      <anchor>a48e5b08283b1fb9d77c8be2915bba6d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KECCAK_SPONGE_BLOCKSIZE</name>
      <anchorfile>d3/d38/KeccakSponge_8h.html</anchorfile>
      <anchor>a2f4007db3cbf9465e51a2b66261f7603</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakSponge_Initialize</name>
      <anchorfile>d3/d38/KeccakSponge_8h.html</anchorfile>
      <anchor>afab45db0378700afd04e6a5b9a0f73a0</anchor>
      <arglist>(KeccakSponge *sponge, unsigned int rate, unsigned int capacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakSponge_Absorb</name>
      <anchorfile>d3/d38/KeccakSponge_8h.html</anchorfile>
      <anchor>a0dea0ec27e252be914996a10848e9d10</anchor>
      <arglist>(KeccakSponge *sponge, const unsigned char *data, unsigned int dataByteLen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakSponge_Squeeze</name>
      <anchorfile>d3/d38/KeccakSponge_8h.html</anchorfile>
      <anchor>affa225cf50299bad7641318082b78500</anchor>
      <arglist>(KeccakSponge *sponge, unsigned char *data, unsigned int dataByteLen)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KeccakF-1600-reference.c</name>
    <path>src/blockchain/third_party/keccak/src/</path>
    <filename>d8/de8/KeccakF-1600-reference_8c.html</filename>
    <includes id="dd/d5f/KeccakF-1600-reference_8h" name="KeccakF-1600-reference.h" local="yes" import="no" module="no" objc="no">KeccakF-1600-reference.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ROL64</name>
      <anchorfile>d8/de8/KeccakF-1600-reference_8c.html</anchorfile>
      <anchor>aa7c83a952d8f32c4828a95910f5d2f60</anchor>
      <arglist>(a, offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakF_1600_Initialize</name>
      <anchorfile>d8/de8/KeccakF-1600-reference_8c.html</anchorfile>
      <anchor>a1e3d2ba7d471ef2885905c4d7169e36d</anchor>
      <arglist>(KeccakF_1600_State *state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakF_1600_StateXORBytes</name>
      <anchorfile>d8/de8/KeccakF-1600-reference_8c.html</anchorfile>
      <anchor>a96070b6810568d955671ccc769c72c71</anchor>
      <arglist>(KeccakF_1600_State *state, const unsigned char *data, unsigned int offset, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakF_1600_StateExtractBytes</name>
      <anchorfile>d8/de8/KeccakF-1600-reference_8c.html</anchorfile>
      <anchor>a2501119969421f4a9f0ee78cd55445b8</anchor>
      <arglist>(const KeccakF_1600_State *state, unsigned char *data, unsigned int offset, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakF_1600_StatePermute</name>
      <anchorfile>d8/de8/KeccakF-1600-reference_8c.html</anchorfile>
      <anchor>a9579edfff1790be29cfb33c55d0026f4</anchor>
      <arglist>(KeccakF_1600_State *state)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const uint64_t</type>
      <name>KeccakF_RoundConstants</name>
      <anchorfile>d8/de8/KeccakF-1600-reference_8c.html</anchorfile>
      <anchor>a199fa981773d755650ae45cf6f3dd7b3</anchor>
      <arglist>[KECCAK_F_1600_ROUNDS]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KeccakSponge.c</name>
    <path>src/blockchain/third_party/keccak/src/</path>
    <filename>d9/db3/KeccakSponge_8c.html</filename>
    <includes id="d3/d38/KeccakSponge_8h" name="KeccakSponge.h" local="yes" import="no" module="no" objc="no">KeccakSponge.h</includes>
    <member kind="function">
      <type>void</type>
      <name>KeccakSponge_Initialize</name>
      <anchorfile>d9/db3/KeccakSponge_8c.html</anchorfile>
      <anchor>afab45db0378700afd04e6a5b9a0f73a0</anchor>
      <arglist>(KeccakSponge *sponge, unsigned int rate, unsigned int capacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakSponge_Absorb</name>
      <anchorfile>d9/db3/KeccakSponge_8c.html</anchorfile>
      <anchor>a0dea0ec27e252be914996a10848e9d10</anchor>
      <arglist>(KeccakSponge *sponge, const unsigned char *data, unsigned int dataByteLen)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KeccakSponge_Squeeze</name>
      <anchorfile>d9/db3/KeccakSponge_8c.html</anchorfile>
      <anchor>affa225cf50299bad7641318082b78500</anchor>
      <arglist>(KeccakSponge *sponge, unsigned char *data, unsigned int dataByteLen)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>aws_config.cpp</name>
    <path>src/core/cloud/</path>
    <filename>d9/da1/aws__config_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>azure_config.cpp</name>
    <path>src/core/cloud/</path>
    <filename>d3/dd1/azure__config_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>firebase_config.cpp</name>
    <path>src/core/cloud/</path>
    <filename>db/d31/firebase__config_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>google_cloud_config.cpp</name>
    <path>src/core/cloud/</path>
    <filename>d5/d3a/google__cloud__config_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>supabase_config.cpp</name>
    <path>src/core/cloud/</path>
    <filename>d0/d28/supabase__config_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>blockchain.hpp</name>
    <path>src/core/include/satox/blockchain/</path>
    <filename>da/dfb/blockchain_8hpp.html</filename>
    <class kind="class">satox::blockchain::Blockchain</class>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>api_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>dd/d5d/api__manager_8hpp.html</filename>
    <class kind="class">satox::core::APIManager</class>
    <class kind="struct">satox::core::APIManager::Config</class>
    <class kind="struct">satox::core::APIManager::Request</class>
    <class kind="struct">satox::core::APIManager::Response</class>
    <class kind="struct">satox::core::APIManager::WebSocketMessage</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>asset.h</name>
    <path>src/core/include/satox/core/</path>
    <filename>d3/d3e/asset_8h.html</filename>
    <class kind="struct">satox::core::Asset</class>
    <class kind="class">satox::core::AssetManager</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>blockchain.h</name>
    <path>src/core/include/satox/core/</path>
    <filename>de/d65/blockchain_8h.html</filename>
    <includes id="d1/da1/network__interface_8h" name="network_interface.h" local="yes" import="no" module="no" objc="no">network_interface.h</includes>
    <class kind="struct">satox::core::Block</class>
    <class kind="struct">satox::core::ChainState</class>
    <class kind="class">satox::core::BlockchainManager</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>blockchain_manager.hpp</name>
    <path>src/blockchain/include/satox/blockchain/</path>
    <filename>d8/dd1/blockchain_2include_2satox_2blockchain_2blockchain__manager_8hpp.html</filename>
    <includes id="de/de2/blockchain_2include_2satox_2blockchain_2types_8hpp" name="types.hpp" local="yes" import="no" module="no" objc="no">satox/blockchain/types.hpp</includes>
    <class kind="class">satox::blockchain::BlockchainManager</class>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>blockchain_manager.hpp</name>
    <path>src/core/include/satox/blockchain/</path>
    <filename>dc/d77/core_2include_2satox_2blockchain_2blockchain__manager_8hpp.html</filename>
    <class kind="struct">satox::blockchain::BlockchainConfig</class>
    <class kind="struct">satox::blockchain::BlockInfo</class>
    <class kind="struct">satox::blockchain::TransactionInfo</class>
    <class kind="struct">satox::blockchain::MiningInfo</class>
    <class kind="struct">satox::blockchain::BlockchainStatistics</class>
    <class kind="struct">satox::blockchain::CacheConfig</class>
    <class kind="struct">satox::blockchain::ConnectionPoolConfig</class>
    <class kind="struct">satox::blockchain::BatchConfig</class>
    <class kind="struct">satox::blockchain::ErrorRecoveryConfig</class>
    <class kind="struct">satox::blockchain::RecoveryOperation</class>
    <class kind="class">satox::blockchain::LRUCache</class>
    <class kind="class">satox::blockchain::BlockchainManager</class>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>blockchain_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>da/da6/core_2include_2satox_2core_2blockchain__manager_8hpp.html</filename>
    <includes id="dd/d27/core_2include_2satox_2core_2types_8hpp" name="types.hpp" local="yes" import="no" module="no" objc="no">types.hpp</includes>
    <includes id="d7/d8e/logging__manager_8hpp" name="logging_manager.hpp" local="yes" import="no" module="no" objc="no">logging_manager.hpp</includes>
    <class kind="class">satox::core::BlockchainManager</class>
    <class kind="struct">satox::core::BlockchainManager::Block</class>
    <class kind="struct">satox::core::BlockchainManager::Transaction</class>
    <class kind="struct">satox::core::BlockchainManager::Config</class>
    <class kind="struct">satox::core::BlockchainManager::Stats</class>
    <class kind="struct">satox::core::BlockchainManager::BlockchainInfo</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>cache_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d1/dea/cache__manager_8hpp.html</filename>
    <class kind="class">satox::core::CacheManager</class>
    <class kind="struct">satox::core::CacheManager::CacheEntry</class>
    <class kind="struct">satox::core::CacheManager::CacheStats</class>
    <class kind="struct">satox::core::CacheManager::CacheConfig</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>cloud_monitoring.hpp</name>
    <path>src/core/include/satox/core/cloud/</path>
    <filename>d3/d7b/cloud__monitoring_8hpp.html</filename>
    <class kind="struct">satox::core::CloudMetrics</class>
    <class kind="struct">satox::core::CloudLogEntry</class>
    <class kind="struct">satox::core::CloudMonitoringConfig</class>
    <class kind="class">satox::core::CloudMonitoring</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>firebase_config.hpp</name>
    <path>src/core/include/satox/core/cloud/</path>
    <filename>d3/d4b/firebase__config_8hpp.html</filename>
    <class kind="struct">satox::core::FirebaseConfig</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>firebase_manager.hpp</name>
    <path>src/core/include/satox/core/cloud/</path>
    <filename>d8/d06/firebase__manager_8hpp.html</filename>
    <includes id="d3/d4b/firebase__config_8hpp" name="firebase_config.hpp" local="yes" import="no" module="no" objc="no">firebase_config.hpp</includes>
    <class kind="class">satox::core::FirebaseManager</class>
    <class kind="class">satox::core::FirebaseManager::Firestore</class>
    <class kind="class">satox::core::FirebaseManager::RealtimeDatabase</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>supabase_config.hpp</name>
    <path>src/core/include/satox/core/cloud/</path>
    <filename>d5/d9c/supabase__config_8hpp.html</filename>
    <class kind="struct">satox::core::SupabaseConfig</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>supabase_manager.hpp</name>
    <path>src/core/include/satox/core/cloud/</path>
    <filename>da/d7d/supabase__manager_8hpp.html</filename>
    <includes id="d5/d9c/supabase__config_8hpp" name="supabase_config.hpp" local="yes" import="no" module="no" objc="no">supabase_config.hpp</includes>
    <class kind="class">satox::core::SupabaseManager</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>config_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>da/d5f/config__manager_8hpp.html</filename>
    <includes id="dd/d27/core_2include_2satox_2core_2types_8hpp" name="types.hpp" local="yes" import="no" module="no" objc="no">types.hpp</includes>
    <class kind="class">satox::core::ConfigManager</class>
    <class kind="struct">satox::core::ConfigManager::ConfigValue</class>
    <class kind="struct">satox::core::ConfigManager::ConfigSection</class>
    <class kind="struct">satox::core::ConfigManager::Stats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>core_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d6/dcd/core__manager_8hpp.html</filename>
    <class kind="struct">satox::core::CoreConfig</class>
    <class kind="struct">satox::core::CoreStats</class>
    <class kind="struct">satox::core::ComponentStatus</class>
    <class kind="struct">satox::core::SystemInfo</class>
    <class kind="class">satox::core::CoreManager</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>database_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d6/dc5/core_2include_2satox_2core_2database__manager_8hpp.html</filename>
    <includes id="dd/d27/core_2include_2satox_2core_2types_8hpp" name="types.hpp" local="yes" import="no" module="no" objc="no">types.hpp</includes>
    <class kind="class">satox::core::DatabaseManager</class>
    <class kind="struct">satox::core::DatabaseManager::DatabaseConfig</class>
    <class kind="struct">satox::core::DatabaseManager::QueryResult</class>
    <class kind="struct">satox::core::DatabaseManager::Transaction</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>database_manager.hpp</name>
    <path>src/database/include/satox/database/</path>
    <filename>dc/d21/database_2include_2satox_2database_2database__manager_8hpp.html</filename>
    <includes id="dc/d57/database_2include_2satox_2database_2types_8hpp" name="types.hpp" local="yes" import="no" module="no" objc="no">types.hpp</includes>
    <includes id="d9/dba/database_2include_2satox_2database_2error_8hpp" name="error.hpp" local="yes" import="no" module="no" objc="no">error.hpp</includes>
    <class kind="class">satox::database::DatabaseManager</class>
    <namespace>satox</namespace>
    <namespace>satox::database</namespace>
  </compound>
  <compound kind="file">
    <name>event_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>df/d3c/event__manager_8hpp.html</filename>
    <class kind="class">satox::core::EventManager</class>
    <class kind="struct">satox::core::EventManager::Event</class>
    <class kind="struct">satox::core::EventManager::Subscription</class>
    <class kind="struct">satox::core::EventManager::EventStats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>ipfs_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>db/d5f/core_2include_2satox_2core_2ipfs__manager_8hpp.html</filename>
    <class kind="class">satox::core::IPFSManager</class>
    <class kind="struct">satox::core::IPFSManager::ContentInfo</class>
    <class kind="struct">satox::core::IPFSManager::NodeInfo</class>
    <class kind="struct">satox::core::IPFSManager::IPFSStats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>ipfs_manager.hpp</name>
    <path>src/core/include/satox/ipfs/</path>
    <filename>d2/da0/core_2include_2satox_2ipfs_2ipfs__manager_8hpp.html</filename>
    <class kind="struct">satox::ipfs::IPFSConfig</class>
    <class kind="struct">satox::ipfs::IPFSContent</class>
    <class kind="class">satox::ipfs::IPFSManager</class>
    <class kind="struct">satox::ipfs::IPFSManager::IPFSStatistics</class>
    <namespace>satox</namespace>
    <namespace>satox::ipfs</namespace>
  </compound>
  <compound kind="file">
    <name>ipfs_manager.hpp</name>
    <path>src/ipfs/include/satox/ipfs/</path>
    <filename>d4/dd5/ipfs_2include_2satox_2ipfs_2ipfs__manager_8hpp.html</filename>
    <class kind="struct">satox::ipfs::Config</class>
    <class kind="class">satox::ipfs::IPFSManager</class>
    <namespace>satox</namespace>
    <namespace>satox::ipfs</namespace>
  </compound>
  <compound kind="file">
    <name>logging_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d7/d8e/logging__manager_8hpp.html</filename>
    <class kind="class">satox::core::LoggingManager</class>
    <class kind="struct">satox::core::LoggingManager::LogEntry</class>
    <class kind="struct">satox::core::LoggingManager::LogConfig</class>
    <class kind="struct">satox::core::LoggingManager::LogStats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>merkle_tree.h</name>
    <path>src/core/include/satox/core/</path>
    <filename>d3/db3/merkle__tree_8h.html</filename>
    <class kind="class">satox::core::MerkleTree</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>message_handler.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>dc/d84/message__handler_8hpp.html</filename>
    <includes id="d1/da1/network__interface_8h" name="network_interface.h" local="yes" import="no" module="no" objc="no">network_interface.h</includes>
    <class kind="class">satox::core::MessageHandler</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>network_config.h</name>
    <path>src/core/include/satox/core/</path>
    <filename>db/d02/network__config_8h.html</filename>
    <class kind="struct">satox::core::NetworkConfig</class>
    <class kind="class">satox::core::NetworkConfigManager</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>network_interface.h</name>
    <path>src/core/include/satox/core/</path>
    <filename>d1/da1/network__interface_8h.html</filename>
    <class kind="struct">satox::core::NetworkMessage</class>
    <class kind="struct">satox::core::NetworkResponse</class>
    <class kind="class">satox::core::NetworkInterface</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>network_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>df/d11/core_2include_2satox_2core_2network__manager_8hpp.html</filename>
    <class kind="class">satox::core::NetworkManager</class>
    <class kind="struct">satox::core::NetworkManager::ConnectionInfo</class>
    <class kind="struct">satox::core::NetworkManager::NetworkStats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>network_manager.hpp</name>
    <path>src/core/include/satox/network/</path>
    <filename>df/d31/core_2include_2satox_2network_2network__manager_8hpp.html</filename>
    <class kind="class">satox::network::NetworkManager</class>
    <namespace>satox</namespace>
    <namespace>satox::network</namespace>
  </compound>
  <compound kind="file">
    <name>network_manager.hpp</name>
    <path>src/network/include/satox/network/</path>
    <filename>d8/de5/network_2include_2satox_2network_2network__manager_8hpp.html</filename>
    <includes id="d8/d1a/letsencrypt__manager_8hpp" name="letsencrypt_manager.hpp" local="yes" import="no" module="no" objc="no">letsencrypt_manager.hpp</includes>
    <class kind="class">satox::network::NetworkManager</class>
    <class kind="struct">satox::network::NetworkManager::SecurityConfig</class>
    <class kind="struct">satox::network::NetworkManager::NetworkConfig</class>
    <class kind="struct">satox::network::NetworkManager::NetworkStats</class>
    <class kind="struct">satox::network::NetworkManager::RPCRequest</class>
    <class kind="struct">satox::network::NetworkManager::RPCResponse</class>
    <namespace>satox</namespace>
    <namespace>satox::network</namespace>
  </compound>
  <compound kind="file">
    <name>nft.h</name>
    <path>src/core/include/satox/core/</path>
    <filename>df/d9a/nft_8h.html</filename>
    <class kind="struct">satox::core::NFTMetadata</class>
    <class kind="struct">satox::core::NFT</class>
    <class kind="class">satox::core::NFTManager</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>nft_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d8/d02/core_2include_2satox_2core_2nft__manager_8hpp.html</filename>
    <class kind="class">satox::core::NFTManager</class>
    <class kind="struct">satox::core::NFTManager::NFTMetadata</class>
    <class kind="struct">satox::core::NFTManager::NFT</class>
    <class kind="struct">satox::core::NFTManager::NFTStats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>nft_manager.hpp</name>
    <path>src/nft/include/satox/nft/</path>
    <filename>de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp.html</filename>
    <class kind="struct">satox::nft::NFTError</class>
    <class kind="class">satox::nft::NFTManager</class>
    <class kind="struct">satox::nft::NFTManager::NFTMetadata</class>
    <class kind="struct">satox::nft::NFTManager::NFT</class>
    <class kind="struct">satox::nft::NFTManager::OwnershipRecord</class>
    <class kind="struct">satox::nft::NFTManager::CacheEntry</class>
    <class kind="struct">satox::nft::NFTManager::NFTEvent</class>
    <class kind="struct">satox::nft::NFTManager::Error</class>
    <class kind="class">satox::nft::NFTManager::NFTEventListener</class>
    <class kind="class">satox::nft::NFTManager::ErrorHandler</class>
    <class kind="struct">satox::nft::NFTManager::ErrorHandler::ErrorRecord</class>
    <namespace>satox</namespace>
    <namespace>satox::nft</namespace>
  </compound>
  <compound kind="file">
    <name>performance_optimization.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>dd/d4c/performance__optimization_8hpp.html</filename>
    <class kind="class">satox::core::PerformanceOptimization</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>plugin_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d4/db8/plugin__manager_8hpp.html</filename>
    <class kind="class">satox::core::PluginManager</class>
    <class kind="struct">satox::core::PluginManager::PluginInfo</class>
    <class kind="struct">satox::core::PluginManager::PluginConfig</class>
    <class kind="class">satox::core::PluginManager::IPlugin</class>
    <class kind="class">satox::core::PluginManager::IPluginFactory</class>
    <class kind="struct">satox::core::PluginManager::PluginStats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>proof_of_work.h</name>
    <path>src/core/include/satox/core/</path>
    <filename>d7/de2/proof__of__work_8h.html</filename>
    <class kind="class">satox::core::ProofOfWork</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>quantum.h</name>
    <path>src/core/include/satox/core/</path>
    <filename>d8/d4b/quantum_8h.html</filename>
    <class kind="class">satox::core::QuantumManager</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>quantum_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>da/d06/quantum__manager_8hpp.html</filename>
    <class kind="class">satox::core::QuantumManager</class>
    <class kind="struct">satox::core::QuantumManager::QuantumKeyPair</class>
    <class kind="struct">satox::core::QuantumManager::QuantumSignature</class>
    <class kind="struct">satox::core::QuantumManager::QuantumEncryption</class>
    <class kind="struct">satox::core::QuantumManager::AlgorithmInfo</class>
    <class kind="struct">satox::core::QuantumManager::QuantumStats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>satox_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d2/d03/satox__manager_8hpp.html</filename>
    <class kind="class">satox::core::IShutdownable</class>
    <class kind="class">satox::core::SatoxManager</class>
    <class kind="struct">satox::core::SatoxManager::SystemInfo</class>
    <class kind="struct">satox::core::SatoxManager::SystemStats</class>
    <class kind="struct">satox::core::SatoxManager::Stats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>security_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d2/ddb/core_2include_2satox_2core_2security__manager_8hpp.html</filename>
    <class kind="class">satox::core::SecurityManager</class>
    <class kind="struct">satox::core::SecurityManager::SecurityConfig</class>
    <class kind="struct">satox::core::SecurityManager::SecurityStats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>security_manager.hpp</name>
    <path>src/security/include/satox/security/</path>
    <filename>d0/d9f/security_2include_2satox_2security_2security__manager_8hpp.html</filename>
    <includes id="df/ddb/input__validator_8hpp" name="input_validator.hpp" local="yes" import="no" module="no" objc="no">satox/security/input_validator.hpp</includes>
    <includes id="d9/dd7/security_2include_2satox_2security_2rate__limiter_8hpp" name="rate_limiter.hpp" local="yes" import="no" module="no" objc="no">satox/security/rate_limiter.hpp</includes>
    <class kind="struct">satox::security::SecurityConfig</class>
    <class kind="struct">satox::security::SecurityStats</class>
    <class kind="struct">satox::security::SecurityResult</class>
    <class kind="class">satox::security::SecurityManager</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
  </compound>
  <compound kind="file">
    <name>transaction.h</name>
    <path>src/core/include/satox/core/</path>
    <filename>d0/db6/transaction_8h.html</filename>
    <class kind="struct">satox::core::Transaction</class>
    <class kind="class">satox::core::TransactionManager</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>transaction_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d4/d73/core_2include_2satox_2core_2transaction__manager_8hpp.html</filename>
    <includes id="dd/d27/core_2include_2satox_2core_2types_8hpp" name="types.hpp" local="yes" import="no" module="no" objc="no">types.hpp</includes>
    <class kind="class">satox::core::TransactionManager</class>
    <class kind="struct">satox::core::TransactionManager::Config</class>
    <class kind="struct">satox::core::TransactionManager::UTXO</class>
    <class kind="struct">satox::core::TransactionManager::Input</class>
    <class kind="struct">satox::core::TransactionManager::Output</class>
    <class kind="struct">satox::core::TransactionManager::Transaction</class>
    <class kind="struct">satox::core::TransactionManager::FeeEstimate</class>
    <class kind="struct">satox::core::TransactionManager::TransactionStats</class>
    <class kind="struct">satox::core::TransactionManager::Stats</class>
    <class kind="struct">satox::core::TransactionManager::PerformanceConfig</class>
    <class kind="struct">satox::core::TransactionManager::ErrorRecoveryConfig</class>
    <class kind="struct">satox::core::TransactionManager::RecoveryOperation</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>transaction_manager.hpp</name>
    <path>src/database/include/satox/database/</path>
    <filename>dc/d31/database_2include_2satox_2database_2transaction__manager_8hpp.html</filename>
    <includes id="d3/d16/connection__pool_8hpp" name="connection_pool.hpp" local="yes" import="no" module="no" objc="no">satox/database/connection_pool.hpp</includes>
    <class kind="class">satox::database::TransactionManager</class>
    <class kind="struct">satox::database::TransactionManager::TransactionConfig</class>
    <class kind="struct">satox::database::TransactionManager::TransactionStats</class>
    <namespace>satox</namespace>
    <namespace>satox::database</namespace>
  </compound>
  <compound kind="file">
    <name>api_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>db/d08/api__manager_8cpp.html</filename>
    <class kind="class">satox::core::APIManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>asset.cpp</name>
    <path>src/core/src/</path>
    <filename>d9/d61/asset_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>blockchain.cpp</name>
    <path>src/core/src/</path>
    <filename>d1/d76/blockchain_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>blockchain_manager.cpp</name>
    <path>src/blockchain/src/</path>
    <filename>db/d14/blockchain_2src_2blockchain__manager_8cpp.html</filename>
    <includes id="d9/db2/block_8hpp" name="block.hpp" local="yes" import="no" module="no" objc="no">satox/blockchain/block.hpp</includes>
    <includes id="d5/d61/transaction_8hpp" name="transaction.hpp" local="yes" import="no" module="no" objc="no">satox/blockchain/transaction.hpp</includes>
    <includes id="de/de2/blockchain_2include_2satox_2blockchain_2types_8hpp" name="types.hpp" local="yes" import="no" module="no" objc="no">satox/blockchain/types.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>blockchain_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>d7/d20/core_2src_2blockchain__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>blockchain_manager_impl.cpp</name>
    <path>src/core/src/</path>
    <filename>d3/d4d/blockchain__manager__impl_8cpp.html</filename>
  </compound>
  <compound kind="file">
    <name>cache_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>dd/d71/cache__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>aws_manager.cpp</name>
    <path>src/core/cloud/</path>
    <filename>db/d52/cloud_2aws__manager_8cpp.html</filename>
    <class kind="class">satox::core::cloud::AWSManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>aws_manager.cpp</name>
    <path>src/core/src/cloud/</path>
    <filename>d6/d76/src_2cloud_2aws__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>azure_manager.cpp</name>
    <path>src/core/cloud/</path>
    <filename>d3/db5/cloud_2azure__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>azure_manager.cpp</name>
    <path>src/core/src/cloud/</path>
    <filename>d8/d89/src_2cloud_2azure__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>cloud_monitoring.cpp</name>
    <path>src/core/src/cloud/</path>
    <filename>df/d5d/cloud__monitoring_8cpp.html</filename>
    <includes id="d3/d7b/cloud__monitoring_8hpp" name="cloud_monitoring.hpp" local="yes" import="no" module="no" objc="no">satox/core/cloud/cloud_monitoring.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>firebase_manager.cpp</name>
    <path>src/core/cloud/</path>
    <filename>d4/d77/cloud_2firebase__manager_8cpp.html</filename>
    <class kind="class">satox::core::cloud::FirebaseManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>firebase_manager.cpp</name>
    <path>src/core/src/cloud/</path>
    <filename>d2/d14/src_2cloud_2firebase__manager_8cpp.html</filename>
    <class kind="struct">satox::core::FirebaseConnection</class>
    <class kind="struct">satox::core::FirebaseManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>google_cloud_manager.cpp</name>
    <path>src/core/cloud/</path>
    <filename>d6/dc6/cloud_2google__cloud__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>google_cloud_manager.cpp</name>
    <path>src/core/src/cloud/</path>
    <filename>db/dd5/src_2cloud_2google__cloud__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>supabase_manager.cpp</name>
    <path>src/core/cloud/</path>
    <filename>d7/d7b/cloud_2supabase__manager_8cpp.html</filename>
    <class kind="class">satox::core::cloud::SupabaseManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::core::cloud</namespace>
  </compound>
  <compound kind="file">
    <name>supabase_manager.cpp</name>
    <path>src/core/src/cloud/</path>
    <filename>df/d03/src_2cloud_2supabase__manager_8cpp.html</filename>
    <class kind="struct">satox::core::SupabaseConnection</class>
    <class kind="struct">satox::core::SupabaseManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>config_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>df/d27/config__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>core_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>d2/d5f/core__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>database_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>df/dda/core_2src_2database__manager_8cpp.html</filename>
    <class kind="struct">satox::core::DatabaseConnection</class>
    <class kind="class">satox::core::DatabaseManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
    <member kind="enumeration">
      <type></type>
      <name>DatabaseType</name>
      <anchorfile>df/dda/core_2src_2database__manager_8cpp.html</anchorfile>
      <anchor>a625a69373d4a274ab6ed5a5fd2b0c51d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>database_manager.cpp</name>
    <path>src/database/src/</path>
    <filename>d7/d7a/database_2src_2database__manager_8cpp.html</filename>
    <includes id="dc/d21/database_2include_2satox_2database_2database__manager_8hpp" name="database_manager.hpp" local="yes" import="no" module="no" objc="no">satox/database/database_manager.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::database</namespace>
  </compound>
  <compound kind="file">
    <name>event_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>d0/d5d/event__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>ipfs_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>d7/db7/core_2src_2ipfs__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>ipfs_manager.cpp</name>
    <path>src/ipfs/src/</path>
    <filename>de/d7d/ipfs_2src_2ipfs__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::ipfs</namespace>
  </compound>
  <compound kind="file">
    <name>logging_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>d0/dfb/logging__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>merkle_tree.cpp</name>
    <path>src/core/src/</path>
    <filename>dc/d03/merkle__tree_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>message_handler.cpp</name>
    <path>src/core/src/</path>
    <filename>d4/ddb/message__handler_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>network_config.cpp</name>
    <path>src/core/src/</path>
    <filename>d7/dac/network__config_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>network_interface.cpp</name>
    <path>src/core/src/</path>
    <filename>df/d85/network__interface_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>network_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>db/dd3/core_2src_2network__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>network_manager.cpp</name>
    <path>src/network/src/</path>
    <filename>dd/d55/network_2src_2network__manager_8cpp.html</filename>
    <class kind="class">satox::network::NetworkManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::network</namespace>
  </compound>
  <compound kind="file">
    <name>nft.cpp</name>
    <path>src/core/src/</path>
    <filename>de/d4f/nft_8cpp.html</filename>
    <includes id="df/d9a/nft_8h" name="nft.h" local="yes" import="no" module="no" objc="no">nft.h</includes>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>nft_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>dd/d1d/core_2src_2nft__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>nft_manager.cpp</name>
    <path>src/nft/src/</path>
    <filename>d5/d80/nft_2src_2nft__manager_8cpp.html</filename>
    <includes id="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" name="nft_manager.hpp" local="yes" import="no" module="no" objc="no">satox/nft/nft_manager.hpp</includes>
    <class kind="class">satox::nft::NFTManager::Impl</class>
    <class kind="class">satox::nft::NFTManager::PerformanceOptimizer</class>
    <namespace>satox</namespace>
    <namespace>satox::nft</namespace>
  </compound>
  <compound kind="file">
    <name>performance_optimization.cpp</name>
    <path>src/core/src/</path>
    <filename>d9/d3e/performance__optimization_8cpp.html</filename>
    <includes id="dd/d4c/performance__optimization_8hpp" name="performance_optimization.hpp" local="yes" import="no" module="no" objc="no">performance_optimization.hpp</includes>
    <class kind="class">satox::core::PerformanceOptimization::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>plugin_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>df/d0a/plugin__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>proof_of_work.cpp</name>
    <path>src/core/src/</path>
    <filename>df/d35/proof__of__work_8cpp.html</filename>
    <includes id="d7/de2/proof__of__work_8h" name="proof_of_work.h" local="yes" import="no" module="no" objc="no">proof_of_work.h</includes>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>quantum.cpp</name>
    <path>src/core/src/</path>
    <filename>db/de1/quantum_8cpp.html</filename>
    <includes id="d8/d4b/quantum_8h" name="quantum.h" local="yes" import="no" module="no" objc="no">quantum.h</includes>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>quantum_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>da/db8/quantum__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>satox_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>da/d8f/satox__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>security_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>d6/d1c/core_2src_2security__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>security_manager.cpp</name>
    <path>src/security/</path>
    <filename>d2/d58/security_2security__manager_8cpp.html</filename>
    <includes id="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" name="security_manager.hpp" local="yes" import="no" module="no" objc="no">security/security_manager.hpp</includes>
    <includes id="dd/d9d/security_2pqc_2hybrid_8hpp" name="hybrid.hpp" local="yes" import="no" module="no" objc="no">security/pqc/hybrid.hpp</includes>
    <includes id="dd/dc1/security_2include_2security_2pqc_2key__manager_8hpp" name="key_manager.hpp" local="yes" import="no" module="no" objc="no">security/pqc/key_manager.hpp</includes>
    <class kind="class">satox::security::SecurityManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
  </compound>
  <compound kind="file">
    <name>security_manager.cpp</name>
    <path>src/security/src/</path>
    <filename>d0/d4f/security_2src_2security__manager_8cpp.html</filename>
    <includes id="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" name="security_manager.hpp" local="yes" import="no" module="no" objc="no">satox/security/security_manager.hpp</includes>
    <includes id="df/ddb/input__validator_8hpp" name="input_validator.hpp" local="yes" import="no" module="no" objc="no">satox/security/input_validator.hpp</includes>
    <includes id="d9/dd7/security_2include_2satox_2security_2rate__limiter_8hpp" name="rate_limiter.hpp" local="yes" import="no" module="no" objc="no">satox/security/rate_limiter.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
  </compound>
  <compound kind="file">
    <name>transaction.cpp</name>
    <path>src/blockchain/src/</path>
    <filename>db/da9/blockchain_2src_2transaction_8cpp.html</filename>
    <includes id="d5/d61/transaction_8hpp" name="transaction.hpp" local="yes" import="no" module="no" objc="no">satox/blockchain/transaction.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>transaction.cpp</name>
    <path>src/core/src/</path>
    <filename>d3/ddc/core_2src_2transaction_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>transaction_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>d1/d14/transaction__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>connection_pool.hpp</name>
    <path>src/database/include/satox/database/</path>
    <filename>d3/d16/connection__pool_8hpp.html</filename>
    <class kind="class">satox::database::ConnectionPool</class>
    <class kind="struct">satox::database::ConnectionPool::ConnectionConfig</class>
    <class kind="struct">satox::database::ConnectionPool::ConnectionStats</class>
    <namespace>satox</namespace>
    <namespace>satox::database</namespace>
  </compound>
  <compound kind="file">
    <name>data_models.hpp</name>
    <path>src/database/include/satox/database/</path>
    <filename>dc/d84/data__models_8hpp.html</filename>
    <class kind="class">satox::database::DataModel</class>
    <class kind="class">satox::database::Block</class>
    <class kind="class">satox::database::Transaction</class>
    <class kind="class">satox::database::Asset</class>
    <class kind="class">satox::database::NFT</class>
    <class kind="class">satox::database::Wallet</class>
    <class kind="class">satox::database::IPFSFile</class>
    <namespace>satox</namespace>
    <namespace>satox::database</namespace>
  </compound>
  <compound kind="file">
    <name>migration_manager.hpp</name>
    <path>src/database/include/satox/database/</path>
    <filename>d1/dd1/migration__manager_8hpp.html</filename>
    <includes id="d3/d16/connection__pool_8hpp" name="connection_pool.hpp" local="yes" import="no" module="no" objc="no">satox/database/connection_pool.hpp</includes>
    <includes id="dc/d31/database_2include_2satox_2database_2transaction__manager_8hpp" name="transaction_manager.hpp" local="yes" import="no" module="no" objc="no">satox/database/transaction_manager.hpp</includes>
    <class kind="class">satox::database::MigrationManager</class>
    <class kind="struct">satox::database::MigrationManager::MigrationConfig</class>
    <class kind="struct">satox::database::MigrationManager::MigrationInfo</class>
    <class kind="struct">satox::database::MigrationManager::MigrationStats</class>
    <namespace>satox</namespace>
    <namespace>satox::database</namespace>
  </compound>
  <compound kind="file">
    <name>query_optimizer.hpp</name>
    <path>src/database/include/satox/database/</path>
    <filename>d7/d5d/query__optimizer_8hpp.html</filename>
    <class kind="class">satox::database::QueryOptimizer</class>
    <class kind="struct">satox::database::QueryOptimizer::QueryPlan</class>
    <class kind="struct">satox::database::QueryOptimizer::IndexInfo</class>
    <class kind="struct">satox::database::QueryOptimizer::TableStats</class>
    <namespace>satox</namespace>
    <namespace>satox::database</namespace>
  </compound>
  <compound kind="file">
    <name>content_distribution.hpp</name>
    <path>src/ipfs/include/satox/ipfs/</path>
    <filename>dc/d18/content__distribution_8hpp.html</filename>
    <class kind="class">satox::ipfs::ContentDistribution</class>
    <class kind="struct">satox::ipfs::ContentDistribution::DistributionStatus</class>
    <class kind="struct">satox::ipfs::ContentDistribution::Error</class>
    <namespace>satox</namespace>
    <namespace>satox::ipfs</namespace>
  </compound>
  <compound kind="file">
    <name>content_storage.hpp</name>
    <path>src/ipfs/include/satox/ipfs/</path>
    <filename>de/dcb/content__storage_8hpp.html</filename>
    <class kind="class">satox::ipfs::ContentStorage</class>
    <class kind="struct">satox::ipfs::ContentStorage::ContentInfo</class>
    <class kind="struct">satox::ipfs::ContentStorage::Error</class>
    <namespace>satox</namespace>
    <namespace>satox::ipfs</namespace>
  </compound>
  <compound kind="file">
    <name>content_distribution.cpp</name>
    <path>src/ipfs/src/</path>
    <filename>d4/d94/content__distribution_8cpp.html</filename>
    <includes id="dc/d18/content__distribution_8hpp" name="content_distribution.hpp" local="yes" import="no" module="no" objc="no">satox/ipfs/content_distribution.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::ipfs</namespace>
  </compound>
  <compound kind="file">
    <name>content_storage.cpp</name>
    <path>src/ipfs/src/</path>
    <filename>d7/d19/content__storage_8cpp.html</filename>
    <includes id="de/dcb/content__storage_8hpp" name="content_storage.hpp" local="yes" import="no" module="no" objc="no">satox/ipfs/content_storage.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::ipfs</namespace>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>src/</path>
    <filename>df/d0a/main_8cpp.html</filename>
    <member kind="function">
      <type>void</type>
      <name>signal_handler</name>
      <anchorfile>df/d0a/main_8cpp.html</anchorfile>
      <anchor>a3b527c56ed133ee6815bfbc625e757af</anchor>
      <arglist>(int signal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>df/d0a/main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>volatile bool</type>
      <name>running</name>
      <anchorfile>df/d0a/main_8cpp.html</anchorfile>
      <anchor>a7c10027ca174fc9d529796f04aca6bd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>certificate_revocation.hpp</name>
    <path>src/network/include/satox/network/</path>
    <filename>d9/dce/certificate__revocation_8hpp.html</filename>
    <class kind="class">satox::network::CertificateRevocation</class>
    <class kind="struct">satox::network::CertificateRevocation::RevocationConfig</class>
    <class kind="struct">satox::network::CertificateRevocation::RevocationStatus</class>
    <namespace>satox</namespace>
    <namespace>satox::network</namespace>
  </compound>
  <compound kind="file">
    <name>letsencrypt_manager.hpp</name>
    <path>src/network/include/satox/network/</path>
    <filename>d8/d1a/letsencrypt__manager_8hpp.html</filename>
    <class kind="class">satox::network::LetsEncryptManager</class>
    <class kind="struct">satox::network::LetsEncryptManager::Config</class>
    <class kind="struct">satox::network::LetsEncryptManager::Certificate</class>
    <namespace>satox</namespace>
    <namespace>satox::network</namespace>
  </compound>
  <compound kind="file">
    <name>certificate_revocation.cpp</name>
    <path>src/network/src/</path>
    <filename>dc/dc3/certificate__revocation_8cpp.html</filename>
    <includes id="d9/dce/certificate__revocation_8hpp" name="certificate_revocation.hpp" local="yes" import="no" module="no" objc="no">satox/network/certificate_revocation.hpp</includes>
    <class kind="class">satox::network::CertificateRevocation::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::network</namespace>
  </compound>
  <compound kind="file">
    <name>letsencrypt_manager.cpp</name>
    <path>src/network/src/</path>
    <filename>d3/d14/letsencrypt__manager_8cpp.html</filename>
    <class kind="class">satox::network::LetsEncryptManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::network</namespace>
  </compound>
  <compound kind="file">
    <name>p2p_protocol.cpp</name>
    <path>src/network/src/</path>
    <filename>d9/db5/p2p__protocol_8cpp.html</filename>
    <includes id="da/d86/p2p__protocol_8hpp" name="p2p_protocol.hpp" local="yes" import="no" module="no" objc="no">p2p_protocol.hpp</includes>
    <namespace>satox</namespace>
  </compound>
  <compound kind="file">
    <name>p2p_protocol.hpp</name>
    <path>src/network/src/</path>
    <filename>da/d86/p2p__protocol_8hpp.html</filename>
    <class kind="struct">satox::P2PMessageHeader</class>
    <class kind="struct">satox::P2PMessage</class>
    <class kind="struct">satox::VersionMessage</class>
    <class kind="struct">satox::InvVector</class>
    <class kind="struct">satox::BlockHeader</class>
    <class kind="struct">satox::Transaction</class>
    <class kind="struct">satox::TxIn</class>
    <class kind="struct">satox::TxOut</class>
    <class kind="struct">satox::OutPoint</class>
    <namespace>satox</namespace>
  </compound>
  <compound kind="file">
    <name>rpc_handlers.cpp</name>
    <path>src/network/src/</path>
    <filename>dc/dbf/rpc__handlers_8cpp.html</filename>
    <includes id="d0/de4/rpc__handlers_8hpp" name="rpc_handlers.hpp" local="yes" import="no" module="no" objc="no">rpc_handlers.hpp</includes>
    <namespace>satox</namespace>
  </compound>
  <compound kind="file">
    <name>rpc_handlers.hpp</name>
    <path>src/network/src/</path>
    <filename>d0/de4/rpc__handlers_8hpp.html</filename>
    <class kind="class">satox::RPCManager</class>
    <namespace>satox</namespace>
  </compound>
  <compound kind="file">
    <name>database_connection.hpp</name>
    <path>src/nft/include/satox/nft/</path>
    <filename>d0/d63/database__connection_8hpp.html</filename>
    <class kind="class">satox::nft::DatabaseConnection</class>
    <class kind="struct">satox::nft::DatabaseConnection::Config</class>
    <class kind="struct">satox::nft::DatabaseConnection::QueryResult</class>
    <namespace>satox</namespace>
    <namespace>satox::nft</namespace>
  </compound>
  <compound kind="file">
    <name>nft_storage.hpp</name>
    <path>src/nft/include/satox/nft/</path>
    <filename>d2/d1c/nft__storage_8hpp.html</filename>
    <includes id="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" name="nft_manager.hpp" local="yes" import="no" module="no" objc="no">satox/nft/nft_manager.hpp</includes>
    <class kind="class">satox::nft::NFTStorage</class>
    <class kind="struct">satox::nft::NFTStorage::Error</class>
    <namespace>satox</namespace>
    <namespace>satox::nft</namespace>
  </compound>
  <compound kind="file">
    <name>nft_validator.hpp</name>
    <path>src/nft/include/satox/nft/</path>
    <filename>d6/dc5/nft__validator_8hpp.html</filename>
    <includes id="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" name="nft_manager.hpp" local="yes" import="no" module="no" objc="no">satox/nft/nft_manager.hpp</includes>
    <class kind="class">satox::nft::NFTValidator</class>
    <class kind="struct">satox::nft::NFTValidator::ValidationResult</class>
    <class kind="struct">satox::nft::NFTValidator::Error</class>
    <namespace>satox</namespace>
    <namespace>satox::nft</namespace>
  </compound>
  <compound kind="file">
    <name>nft_manager_optimized.cpp</name>
    <path>src/nft/src/</path>
    <filename>de/db3/nft__manager__optimized_8cpp.html</filename>
    <class kind="class">satox::ThreadPool</class>
    <class kind="class">satox::IPFSClient</class>
    <class kind="class">satox::NFT</class>
    <class kind="class">satox::NFTEventListener</class>
    <class kind="class">satox::NFTManager</class>
    <namespace>satox</namespace>
  </compound>
  <compound kind="file">
    <name>nft_storage.cpp</name>
    <path>src/nft/src/</path>
    <filename>d4/d8c/nft__storage_8cpp.html</filename>
    <includes id="d2/d1c/nft__storage_8hpp" name="nft_storage.hpp" local="yes" import="no" module="no" objc="no">satox/nft/nft_storage.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::nft</namespace>
  </compound>
  <compound kind="file">
    <name>nft_validator.cpp</name>
    <path>src/nft/src/</path>
    <filename>d5/dd9/nft__validator_8cpp.html</filename>
    <includes id="d6/dc5/nft__validator_8hpp" name="nft_validator.hpp" local="yes" import="no" module="no" objc="no">satox/nft/nft_validator.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::nft</namespace>
  </compound>
  <compound kind="file">
    <name>rpc_proxy_manager.cpp</name>
    <path>src/rpc_proxy/</path>
    <filename>d2/de9/rpc__proxy__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::rpc_proxy</namespace>
  </compound>
  <compound kind="file">
    <name>utils.cpp</name>
    <path>src/rpc_proxy/</path>
    <filename>de/d06/utils_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::rpc_proxy</namespace>
  </compound>
  <compound kind="file">
    <name>satox_sdk.cpp</name>
    <path>src/</path>
    <filename>d0/df1/satox__sdk_8cpp.html</filename>
    <namespace>satox</namespace>
  </compound>
  <compound kind="file">
    <name>satox_sdk_c.cpp</name>
    <path>src/</path>
    <filename>dd/deb/satox__sdk__c_8cpp.html</filename>
    <includes id="dc/d21/database_2include_2satox_2database_2database__manager_8hpp" name="database_manager.hpp" local="yes" import="no" module="no" objc="no">satox/database/database_manager.hpp</includes>
    <includes id="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" name="security_manager.hpp" local="yes" import="no" module="no" objc="no">satox/security/security_manager.hpp</includes>
    <includes id="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" name="nft_manager.hpp" local="yes" import="no" module="no" objc="no">satox/nft/nft_manager.hpp</includes>
    <member kind="function">
      <type>char *</type>
      <name>string_to_c_string</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a78aebb34729a67740349e6384ae6cb94</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>json_to_c_string</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a12fec068a72dfd482056414565efcf40</anchor>
      <arglist>(const json &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_sdk_initialize</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ae1343a49cf5c6b40999230f858aa6486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>satox_sdk_shutdown</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>abadfe77456ac3638d3723ba00d7c3f21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>satox_sdk_get_version</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ad80f49135ff2a4054710448cd7140cf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>satox_security_manager_create</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a004dad2272532774ebf3821f8c3b9020</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>satox_security_manager_destroy</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ab7c96d1fc10306dbf58cf26387612a4e</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_security_manager_generate_keypair</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a5022cd99d69329335abd45f888b55b00</anchor>
      <arglist>(void *handle, char **public_key, char **private_key)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_security_manager_sign_data</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>abc094429788d2a2053abb73708809b66</anchor>
      <arglist>(void *handle, const char *data, const char *private_key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_security_manager_verify_signature</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a9795de3fef39d5f46f5b1e54df6706c6</anchor>
      <arglist>(void *handle, const char *data, const char *signature, const char *public_key)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_security_manager_sha256</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>adb6ac90d10b479392036bcc4e662b385</anchor>
      <arglist>(void *handle, const char *data)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_security_manager_encrypt_data</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a14ba8815f415492a519d155f6994809f</anchor>
      <arglist>(void *handle, const char *data, const char *public_key)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_security_manager_decrypt_data</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>aa8ccff6068bb256f4edb0e3da414ff2f</anchor>
      <arglist>(void *handle, const char *encrypted_data, const char *private_key)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>satox_database_manager_create</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a6624d815757db0a326f68bbe3b48ac60</anchor>
      <arglist>(const char *config_json)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>satox_database_manager_destroy</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ad523821d4327889f48f903bfe1933e20</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_database_manager_create_database</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a6fe38bb29bff13ac74b987dbfbc782f0</anchor>
      <arglist>(void *handle, const char *name)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_database_manager_list_databases</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a5c563e34dd062f2ea0864a485c4e8697</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>satox_asset_manager_create</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>aaa14fd52d8fd5cc0ca88d7decc556fc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>satox_asset_manager_destroy</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ac2a8136439426046c2414cd7effe4134</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_asset_manager_create_asset</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a570e963c5efbc80219e936bc48623601</anchor>
      <arglist>(void *handle, const char *name, const char *symbol)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_asset_manager_get_asset_info</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a79db5cbfabc0e3a41304f98b09f28c5b</anchor>
      <arglist>(void *handle, const char *asset_id)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>satox_nft_manager_create</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a4edc8aba54a1bf9e3e7e4864c75e5740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>satox_nft_manager_destroy</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a04dfda3739381df5dfb7dd7cedb0163e</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_nft_manager_create_nft</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a5b53cbbf009c79909efb1fdaf016ca42</anchor>
      <arglist>(void *handle, const char *asset_id, const char *metadata_json, const char *owner_address)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_nft_manager_get_nft_info</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a04bcf47732d1e8e99ccb2f084ced556c</anchor>
      <arglist>(void *handle, const char *nft_id)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>satox_blockchain_manager_create</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ad5f871c9beed736813522c3e469f390f</anchor>
      <arglist>(const char *config_json)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>satox_blockchain_manager_destroy</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ae645745ac03c0feb39c07b04f46a675b</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_blockchain_manager_get_block_height</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a9c512ce2ba147bb055cb196eedd96093</anchor>
      <arglist>(void *handle, unsigned long long *height)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_blockchain_manager_get_block_info</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a49f966a0aa1818001affffbbd3ac6be5</anchor>
      <arglist>(void *handle, const char *hash)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_blockchain_manager_get_transaction_info</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a87f8836c5ebc5543e19d25a3b206b27d</anchor>
      <arglist>(void *handle, const char *txid)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_blockchain_manager_get_best_block_hash</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>af146bebc814f08d1703595475e574280</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_blockchain_manager_get_block_hash</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a7a8b1d56c98639954b75d7294c1e47c6</anchor>
      <arglist>(void *handle, unsigned long long height)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_asset_manager_transfer_asset</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a156398b089260294617f8fcff7c53a31</anchor>
      <arglist>(void *handle, const char *asset_id, const char *from_address, const char *to_address, unsigned long long amount)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_asset_manager_get_asset_balance</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>acd1ba6cbe61bb0d96d845fed057abaa3</anchor>
      <arglist>(void *handle, const char *asset_id, const char *address, unsigned long long *balance)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_asset_manager_reissue_asset</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a1f22a08c3a3820d8c790ffb123ad5a61</anchor>
      <arglist>(void *handle, const char *asset_id, const char *owner_address, unsigned long long amount)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_asset_manager_burn_asset</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a7ba030f24e48f9d91ac5148659d90d4d</anchor>
      <arglist>(void *handle, const char *asset_id, const char *owner_address, unsigned long long amount)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>satox_network_manager_create</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>aed75a4361f15782432b4de24bf7b2445</anchor>
      <arglist>(const char *config_json)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>satox_network_manager_destroy</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a0535a7ad8a8b7e54e87753d325280666</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_network_manager_start</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a290a94ba010b34399ad9f85b3e4076a3</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_network_manager_stop</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>af77da003f661c2df255ebb9c63ae1344</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_network_manager_get_peers</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ad5990de38701feadd8297ed785d1b3c6</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_network_manager_get_stats</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>aea7c326d5d8b1db5c9c661ddbe9f1a5b</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_network_manager_add_peer</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ab4e6105e766963a7f0b49df981242687</anchor>
      <arglist>(void *handle, const char *address, unsigned short port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_network_manager_remove_peer</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>adb0f2003fcc949bbe9d6378b8a41c4a7</anchor>
      <arglist>(void *handle, const char *address, unsigned short port)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_network_manager_send_message</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a6a17fc1319ad145e8ffd906cdebc3305</anchor>
      <arglist>(void *handle, const char *address, unsigned short port, const char *message)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_nft_manager_transfer_nft</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a05f667eff9e5fc2e4ba0ba7a9af91a20</anchor>
      <arglist>(void *handle, const char *nft_id, const char *from_address, const char *to_address)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_nft_manager_get_nfts_by_owner</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a518d0410225cb654171fb450977071ab</anchor>
      <arglist>(void *handle, const char *address)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_nft_manager_update_metadata</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a34ddb102c053c7b72878ea70f5ddba12</anchor>
      <arglist>(void *handle, const char *nft_id, const char *metadata_json, const char *owner_address)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>satox_ipfs_manager_create</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>aa8d85ed313fcfb12fbec7fb619c90b23</anchor>
      <arglist>(const char *config_json)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>satox_ipfs_manager_destroy</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>af3f1e971271b099fdb8c88404270193d</anchor>
      <arglist>(void *handle)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_ipfs_manager_upload_file</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a9b8331c457e018dfc8acf54ed8ffe0d1</anchor>
      <arglist>(void *handle, const char *file_path)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_ipfs_manager_upload_data</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a230d9077890254ece33751f7c9ae1470</anchor>
      <arglist>(void *handle, const unsigned char *data, unsigned long long size, const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_ipfs_manager_download_file</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a3c9d56cbb6a05ea7b904f1b67137c2ac</anchor>
      <arglist>(void *handle, const char *hash, const char *output_path)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_ipfs_manager_get_file_info</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a8a17485b2a3e5bd0f4a013246cbeafba</anchor>
      <arglist>(void *handle, const char *hash)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_ipfs_manager_pin_file</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ab0ac62f272d739959cf6ed98d8658bb5</anchor>
      <arglist>(void *handle, const char *hash)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>satox_ipfs_manager_unpin_file</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>ac9b1dd03b6b0a305e6edca1ccd2d29b4</anchor>
      <arglist>(void *handle, const char *hash)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>satox_ipfs_manager_get_gateway_url</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>a47ef298740e638a46d8f53aa5459ffd0</anchor>
      <arglist>(void *handle, const char *hash)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>sdk_initialized</name>
      <anchorfile>dd/deb/satox__sdk__c_8cpp.html</anchorfile>
      <anchor>acf7b5c64f399e208e640affbee740571</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>input_validator.hpp</name>
    <path>src/security/include/satox/security/</path>
    <filename>df/ddb/input__validator_8hpp.html</filename>
    <class kind="class">satox::security::InputValidator</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
  </compound>
  <compound kind="file">
    <name>rate_limiter.hpp</name>
    <path>src/network/src/</path>
    <filename>d2/d0e/network_2src_2rate__limiter_8hpp.html</filename>
    <class kind="class">satox::RateLimiter</class>
    <namespace>satox</namespace>
  </compound>
  <compound kind="file">
    <name>rate_limiter.hpp</name>
    <path>src/security/include/satox/security/</path>
    <filename>d9/dd7/security_2include_2satox_2security_2rate__limiter_8hpp.html</filename>
    <class kind="class">satox::security::RateLimiter</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
  </compound>
  <compound kind="file">
    <name>hybrid.hpp</name>
    <path>src/security/include/satox/security/pqc/pqc/</path>
    <filename>d3/dc4/satox_2security_2pqc_2pqc_2hybrid_8hpp.html</filename>
    <includes id="df/d78/satox_2security_2pqc_2pqc_2ml__kem_8hpp" name="ml_kem.hpp" local="yes" import="no" module="no" objc="no">ml_kem.hpp</includes>
    <includes id="df/d82/satox_2security_2pqc_2pqc_2ml__dsa_8hpp" name="ml_dsa.hpp" local="yes" import="no" module="no" objc="no">ml_dsa.hpp</includes>
    <class kind="class">satox::security::pqc::HybridCrypto</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>hybrid.hpp</name>
    <path>src/security/include/security/pqc/</path>
    <filename>dd/d9d/security_2pqc_2hybrid_8hpp.html</filename>
    <includes id="db/d50/security_2pqc_2ml__kem_8hpp" name="ml_kem.hpp" local="yes" import="no" module="no" objc="no">ml_kem.hpp</includes>
    <includes id="df/d72/security_2pqc_2ml__dsa_8hpp" name="ml_dsa.hpp" local="yes" import="no" module="no" objc="no">ml_dsa.hpp</includes>
    <class kind="class">satox::security::pqc::HybridCrypto</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>ml_dsa.hpp</name>
    <path>src/security/include/satox/security/pqc/pqc/</path>
    <filename>df/d82/satox_2security_2pqc_2pqc_2ml__dsa_8hpp.html</filename>
    <class kind="class">satox::security::pqc::MLDSA</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>ml_dsa.hpp</name>
    <path>src/security/include/security/pqc/</path>
    <filename>df/d72/security_2pqc_2ml__dsa_8hpp.html</filename>
    <class kind="class">satox::security::pqc::MLDSA</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>ml_kem.hpp</name>
    <path>src/security/include/satox/security/pqc/pqc/</path>
    <filename>df/d78/satox_2security_2pqc_2pqc_2ml__kem_8hpp.html</filename>
    <class kind="class">satox::security::pqc::MLKEM</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>ml_kem.hpp</name>
    <path>src/security/include/security/pqc/</path>
    <filename>db/d50/security_2pqc_2ml__kem_8hpp.html</filename>
    <class kind="class">satox::security::pqc::MLKEM</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>security_monitor.cpp</name>
    <path>src/security/monitoring/</path>
    <filename>d1/d4c/security__monitor_8cpp.html</filename>
    <includes id="dd/dc3/security__monitor_8hpp" name="security_monitor.hpp" local="yes" import="no" module="no" objc="no">security/monitoring/security_monitor.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::monitoring</namespace>
  </compound>
  <compound kind="file">
    <name>security_monitor.hpp</name>
    <path>src/security/monitoring/</path>
    <filename>dd/dc3/security__monitor_8hpp.html</filename>
    <class kind="class">satox::security::monitoring::SecurityMonitor</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::monitoring</namespace>
  </compound>
  <compound kind="file">
    <name>hybrid.cpp</name>
    <path>src/security/pqc/</path>
    <filename>d9/dcc/pqc_2hybrid_8cpp.html</filename>
    <includes id="dd/d9d/security_2pqc_2hybrid_8hpp" name="hybrid.hpp" local="yes" import="no" module="no" objc="no">security/pqc/hybrid.hpp</includes>
    <includes id="db/d50/security_2pqc_2ml__kem_8hpp" name="ml_kem.hpp" local="yes" import="no" module="no" objc="no">security/pqc/ml_kem.hpp</includes>
    <includes id="df/d72/security_2pqc_2ml__dsa_8hpp" name="ml_dsa.hpp" local="yes" import="no" module="no" objc="no">security/pqc/ml_dsa.hpp</includes>
    <class kind="class">satox::security::pqc::HybridCrypto::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>hybrid.cpp</name>
    <path>src/security/src/</path>
    <filename>d7/dda/src_2hybrid_8cpp.html</filename>
    <includes id="dd/d9d/security_2pqc_2hybrid_8hpp" name="hybrid.hpp" local="yes" import="no" module="no" objc="no">security/pqc/hybrid.hpp</includes>
    <includes id="db/d50/security_2pqc_2ml__kem_8hpp" name="ml_kem.hpp" local="yes" import="no" module="no" objc="no">security/pqc/ml_kem.hpp</includes>
    <includes id="df/d72/security_2pqc_2ml__dsa_8hpp" name="ml_dsa.hpp" local="yes" import="no" module="no" objc="no">security/pqc/ml_dsa.hpp</includes>
    <class kind="class">satox::security::pqc::HybridCrypto::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>ml_dsa.cpp</name>
    <path>src/security/pqc/</path>
    <filename>d5/d2c/pqc_2ml__dsa_8cpp.html</filename>
    <includes id="df/d72/security_2pqc_2ml__dsa_8hpp" name="ml_dsa.hpp" local="yes" import="no" module="no" objc="no">security/pqc/ml_dsa.hpp</includes>
    <class kind="class">satox::security::pqc::MLDSA::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>ml_dsa.cpp</name>
    <path>src/security/src/</path>
    <filename>d8/d58/src_2ml__dsa_8cpp.html</filename>
    <includes id="df/d72/security_2pqc_2ml__dsa_8hpp" name="ml_dsa.hpp" local="yes" import="no" module="no" objc="no">security/pqc/ml_dsa.hpp</includes>
    <class kind="class">satox::security::pqc::MLDSA::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>ml_kem.cpp</name>
    <path>src/security/pqc/</path>
    <filename>d1/d58/pqc_2ml__kem_8cpp.html</filename>
    <includes id="db/d50/security_2pqc_2ml__kem_8hpp" name="ml_kem.hpp" local="yes" import="no" module="no" objc="no">security/pqc/ml_kem.hpp</includes>
    <class kind="class">satox::security::pqc::MLKEM::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>ml_kem.cpp</name>
    <path>src/security/src/</path>
    <filename>d9/d29/src_2ml__kem_8cpp.html</filename>
    <includes id="db/d50/security_2pqc_2ml__kem_8hpp" name="ml_kem.hpp" local="yes" import="no" module="no" objc="no">security/pqc/ml_kem.hpp</includes>
    <class kind="class">satox::security::pqc::MLKEM::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>input_validator.cpp</name>
    <path>src/security/src/</path>
    <filename>da/d0a/input__validator_8cpp.html</filename>
    <includes id="df/ddb/input__validator_8hpp" name="input_validator.hpp" local="yes" import="no" module="no" objc="no">satox/security/input_validator.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
  </compound>
  <compound kind="file">
    <name>rate_limiter.cpp</name>
    <path>src/network/src/</path>
    <filename>de/dc5/network_2src_2rate__limiter_8cpp.html</filename>
    <includes id="d2/d0e/network_2src_2rate__limiter_8hpp" name="rate_limiter.hpp" local="yes" import="no" module="no" objc="no">rate_limiter.hpp</includes>
    <namespace>satox</namespace>
  </compound>
  <compound kind="file">
    <name>rate_limiter.cpp</name>
    <path>src/security/src/</path>
    <filename>db/d33/security_2src_2rate__limiter_8cpp.html</filename>
    <includes id="d9/dd7/security_2include_2satox_2security_2rate__limiter_8hpp" name="rate_limiter.hpp" local="yes" import="no" module="no" objc="no">satox/security/rate_limiter.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
  </compound>
  <compound kind="file">
    <name>address_manager.hpp</name>
    <path>src/wallet/include/satox/wallet/</path>
    <filename>d7/d40/address__manager_8hpp.html</filename>
    <class kind="class">satox::wallet::AddressManager</class>
    <class kind="struct">satox::wallet::AddressManager::AddressInfo</class>
    <class kind="struct">satox::wallet::AddressManager::Error</class>
    <namespace>satox</namespace>
    <namespace>satox::wallet</namespace>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>src/asset/include/satox/asset/</path>
    <filename>dd/dca/asset_2include_2satox_2asset_2error_8hpp.html</filename>
    <class kind="class">satox::asset::AssetException</class>
    <class kind="class">satox::asset::AssetInitializationException</class>
    <class kind="class">satox::asset::AssetOperationException</class>
    <namespace>satox</namespace>
    <namespace>satox::asset</namespace>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>src/blockchain/include/satox/blockchain/</path>
    <filename>df/d27/blockchain_2include_2satox_2blockchain_2error_8hpp.html</filename>
    <class kind="class">satox::blockchain::BlockchainException</class>
    <class kind="class">satox::blockchain::BlockchainInitializationException</class>
    <class kind="class">satox::blockchain::BlockchainOperationException</class>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d7/dab/core_2include_2satox_2core_2error_8hpp.html</filename>
    <class kind="class">satox::core::CoreException</class>
    <class kind="class">satox::core::CoreInitializationException</class>
    <class kind="class">satox::core::CoreOperationException</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>src/database/include/satox/database/</path>
    <filename>d9/dba/database_2include_2satox_2database_2error_8hpp.html</filename>
    <class kind="class">satox::database::DatabaseException</class>
    <class kind="class">satox::database::DatabaseInitializationException</class>
    <class kind="class">satox::database::DatabaseOperationException</class>
    <namespace>satox</namespace>
    <namespace>satox::database</namespace>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>src/ipfs/include/satox/ipfs/</path>
    <filename>db/de4/ipfs_2include_2satox_2ipfs_2error_8hpp.html</filename>
    <class kind="class">satox::ipfs::IpfsException</class>
    <class kind="class">satox::ipfs::IpfsInitializationException</class>
    <class kind="class">satox::ipfs::IpfsOperationException</class>
    <namespace>satox</namespace>
    <namespace>satox::ipfs</namespace>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>src/network/include/satox/network/</path>
    <filename>d1/d15/network_2include_2satox_2network_2error_8hpp.html</filename>
    <class kind="class">satox::network::NetworkException</class>
    <class kind="class">satox::network::NetworkInitializationException</class>
    <class kind="class">satox::network::NetworkOperationException</class>
    <namespace>satox</namespace>
    <namespace>satox::network</namespace>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>src/nft/include/satox/nft/</path>
    <filename>dd/dd9/nft_2include_2satox_2nft_2error_8hpp.html</filename>
    <class kind="class">satox::nft::NftException</class>
    <class kind="class">satox::nft::NftInitializationException</class>
    <class kind="class">satox::nft::NftOperationException</class>
    <namespace>satox</namespace>
    <namespace>satox::nft</namespace>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>src/security/include/satox/security/</path>
    <filename>d3/dda/security_2include_2satox_2security_2error_8hpp.html</filename>
    <class kind="class">satox::security::SecurityException</class>
    <class kind="class">satox::security::SecurityInitializationException</class>
    <class kind="class">satox::security::PQCException</class>
    <class kind="class">satox::security::ValidationException</class>
    <class kind="class">satox::security::RateLimitException</class>
    <class kind="class">satox::security::SecurityViolationException</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
  </compound>
  <compound kind="file">
    <name>error.hpp</name>
    <path>src/wallet/include/satox/wallet/</path>
    <filename>d0/ddf/wallet_2include_2satox_2wallet_2error_8hpp.html</filename>
    <class kind="class">satox::wallet::WalletException</class>
    <class kind="class">satox::wallet::WalletInitializationException</class>
    <class kind="class">satox::wallet::WalletOperationException</class>
    <namespace>satox</namespace>
    <namespace>satox::wallet</namespace>
  </compound>
  <compound kind="file">
    <name>key_manager.hpp</name>
    <path>src/security/include/satox/security/pqc/pqc/</path>
    <filename>dc/d66/security_2include_2satox_2security_2pqc_2pqc_2key__manager_8hpp.html</filename>
    <includes id="df/d78/satox_2security_2pqc_2pqc_2ml__kem_8hpp" name="ml_kem.hpp" local="yes" import="no" module="no" objc="no">ml_kem.hpp</includes>
    <includes id="df/d82/satox_2security_2pqc_2pqc_2ml__dsa_8hpp" name="ml_dsa.hpp" local="yes" import="no" module="no" objc="no">ml_dsa.hpp</includes>
    <includes id="d3/dc4/satox_2security_2pqc_2pqc_2hybrid_8hpp" name="hybrid.hpp" local="yes" import="no" module="no" objc="no">hybrid.hpp</includes>
    <class kind="struct">satox::security::pqc::KeyMetadata</class>
    <class kind="class">satox::security::pqc::KeyManager</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>key_manager.hpp</name>
    <path>src/security/include/security/pqc/</path>
    <filename>dd/dc1/security_2include_2security_2pqc_2key__manager_8hpp.html</filename>
    <includes id="db/d50/security_2pqc_2ml__kem_8hpp" name="ml_kem.hpp" local="yes" import="no" module="no" objc="no">ml_kem.hpp</includes>
    <includes id="df/d72/security_2pqc_2ml__dsa_8hpp" name="ml_dsa.hpp" local="yes" import="no" module="no" objc="no">ml_dsa.hpp</includes>
    <includes id="dd/d9d/security_2pqc_2hybrid_8hpp" name="hybrid.hpp" local="yes" import="no" module="no" objc="no">hybrid.hpp</includes>
    <class kind="struct">satox::security::pqc::KeyMetadata</class>
    <class kind="class">satox::security::pqc::KeyManager</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>key_manager.hpp</name>
    <path>src/wallet/include/satox/wallet/</path>
    <filename>d1/d65/wallet_2include_2satox_2wallet_2key__manager_8hpp.html</filename>
    <class kind="class">satox::wallet::KeyManager</class>
    <class kind="struct">satox::wallet::KeyManager::KeyPair</class>
    <namespace>satox</namespace>
    <namespace>satox::wallet</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>src/asset/include/satox/asset/</path>
    <filename>d1/d2e/asset_2include_2satox_2asset_2types_8hpp.html</filename>
    <class kind="struct">satox::asset::Version</class>
    <class kind="struct">satox::asset::AssetConfig</class>
    <class kind="struct">satox::asset::AssetStats</class>
    <class kind="struct">satox::asset::AssetResult</class>
    <class kind="struct">satox::asset::AssetCreationRequest</class>
    <class kind="struct">satox::asset::AssetTransferRequest</class>
    <class kind="struct">satox::asset::AssetReissueRequest</class>
    <class kind="struct">satox::asset::AssetBurnRequest</class>
    <class kind="struct">satox::asset::AssetMetadata</class>
    <class kind="struct">satox::asset::AssetVerificationResult</class>
    <namespace>satox</namespace>
    <namespace>satox::asset</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>src/blockchain/include/satox/blockchain/</path>
    <filename>de/de2/blockchain_2include_2satox_2blockchain_2types_8hpp.html</filename>
    <class kind="struct">satox::blockchain::Version</class>
    <class kind="struct">satox::blockchain::NetworkConfig</class>
    <class kind="struct">satox::blockchain::BlockchainConfig</class>
    <class kind="struct">satox::blockchain::BlockchainStats</class>
    <class kind="struct">satox::blockchain::BlockchainResult</class>
    <class kind="struct">satox::blockchain::BlockchainHealth</class>
    <namespace>satox</namespace>
    <namespace>satox::blockchain</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>dd/d27/core_2include_2satox_2core_2types_8hpp.html</filename>
    <class kind="struct">satox::core::Version</class>
    <class kind="struct">satox::core::CoreComponentStats</class>
    <class kind="struct">satox::core::CoreResult</class>
    <class kind="struct">satox::core::CoreHealth</class>
    <class kind="struct">satox::core::Input</class>
    <class kind="struct">satox::core::Output</class>
    <class kind="struct">satox::core::OsSystemInfo</class>
    <class kind="struct">satox::core::ConfigValue</class>
    <class kind="struct">satox::core::ConfigSection</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>src/database/include/satox/database/</path>
    <filename>dc/d57/database_2include_2satox_2database_2types_8hpp.html</filename>
    <class kind="struct">satox::database::Version</class>
    <class kind="struct">satox::database::DatabaseConfig</class>
    <class kind="struct">satox::database::DatabaseStats</class>
    <class kind="struct">satox::database::DatabaseResult</class>
    <class kind="struct">satox::database::DatabaseHealth</class>
    <class kind="struct">satox::database::TableData</class>
    <class kind="struct">satox::database::DatabaseData</class>
    <namespace>satox</namespace>
    <namespace>satox::database</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>src/ipfs/include/satox/ipfs/</path>
    <filename>d8/d5d/ipfs_2include_2satox_2ipfs_2types_8hpp.html</filename>
    <class kind="struct">satox::ipfs::Version</class>
    <class kind="struct">satox::ipfs::IpfsConfig</class>
    <class kind="struct">satox::ipfs::IpfsStats</class>
    <class kind="struct">satox::ipfs::IpfsResult</class>
    <class kind="struct">satox::ipfs::IpfsHealth</class>
    <namespace>satox</namespace>
    <namespace>satox::ipfs</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>src/network/include/satox/network/</path>
    <filename>db/d96/network_2include_2satox_2network_2types_8hpp.html</filename>
    <class kind="struct">satox::network::Version</class>
    <class kind="struct">satox::network::NetworkConfig</class>
    <class kind="struct">satox::network::NetworkStats</class>
    <class kind="struct">satox::network::NetworkResult</class>
    <class kind="struct">satox::network::NetworkHealth</class>
    <namespace>satox</namespace>
    <namespace>satox::network</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>src/nft/include/satox/nft/</path>
    <filename>d5/de2/nft_2include_2satox_2nft_2types_8hpp.html</filename>
    <class kind="struct">satox::nft::Version</class>
    <class kind="struct">satox::nft::NftConfig</class>
    <class kind="struct">satox::nft::NftStats</class>
    <class kind="struct">satox::nft::NftResult</class>
    <class kind="struct">satox::nft::NftHealth</class>
    <namespace>satox</namespace>
    <namespace>satox::nft</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>src/security/include/satox/security/</path>
    <filename>db/df6/security_2include_2satox_2security_2types_8hpp.html</filename>
    <class kind="struct">satox::security::Version</class>
    <class kind="struct">satox::security::RateLimitConfig</class>
    <class kind="struct">satox::security::SecurityEvent</class>
    <class kind="struct">satox::security::PQCKeyInfo</class>
    <class kind="struct">satox::security::ValidationResult</class>
    <class kind="struct">satox::security::RateLimitStatus</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
  </compound>
  <compound kind="file">
    <name>types.hpp</name>
    <path>src/wallet/include/satox/wallet/</path>
    <filename>d2/d3c/wallet_2include_2satox_2wallet_2types_8hpp.html</filename>
    <class kind="struct">satox::wallet::Version</class>
    <class kind="struct">satox::wallet::WalletConfig</class>
    <class kind="struct">satox::wallet::WalletStats</class>
    <class kind="struct">satox::wallet::WalletResult</class>
    <class kind="struct">satox::wallet::WalletHealth</class>
    <namespace>satox</namespace>
    <namespace>satox::wallet</namespace>
  </compound>
  <compound kind="file">
    <name>wallet_manager.hpp</name>
    <path>src/core/include/satox/core/</path>
    <filename>d1/d62/core_2include_2satox_2core_2wallet__manager_8hpp.html</filename>
    <class kind="class">satox::core::WalletManager</class>
    <class kind="struct">satox::core::WalletManager::WalletInfo</class>
    <class kind="struct">satox::core::WalletManager::TransactionInfo</class>
    <class kind="struct">satox::core::WalletManager::WalletStats</class>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>wallet_manager.hpp</name>
    <path>src/core/include/satox/wallet/</path>
    <filename>df/d6e/core_2include_2satox_2wallet_2wallet__manager_8hpp.html</filename>
    <class kind="struct">satox::wallet::WalletConfig</class>
    <class kind="struct">satox::wallet::WalletInfo</class>
    <class kind="struct">satox::wallet::AddressInfo</class>
    <class kind="struct">satox::wallet::TransactionInfo</class>
    <class kind="struct">satox::wallet::WalletStatistics</class>
    <class kind="class">satox::wallet::WalletManager</class>
    <namespace>satox</namespace>
    <namespace>satox::wallet</namespace>
  </compound>
  <compound kind="file">
    <name>wallet_manager.hpp</name>
    <path>src/wallet/include/satox/wallet/</path>
    <filename>d6/df3/wallet_2include_2satox_2wallet_2wallet__manager_8hpp.html</filename>
    <class kind="class">satox::wallet::WalletManager</class>
    <class kind="struct">satox::wallet::WalletManager::Wallet</class>
    <class kind="struct">satox::wallet::WalletManager::KeyPair</class>
    <class kind="struct">satox::wallet::WalletManager::HardwareWallet</class>
    <class kind="struct">satox::wallet::WalletManager::MultisigTransaction</class>
    <class kind="struct">satox::wallet::WalletManager::Asset</class>
    <class kind="struct">satox::wallet::WalletManager::IPFSData</class>
    <namespace>satox</namespace>
    <namespace>satox::wallet</namespace>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>src/asset/</path>
    <filename>dc/d61/asset_2README_8md.html</filename>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>src/blockchain/</path>
    <filename>d0/d21/blockchain_2README_8md.html</filename>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>src/core/</path>
    <filename>dd/dad/core_2README_8md.html</filename>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>src/database/</path>
    <filename>d5/d05/database_2README_8md.html</filename>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>src/ipfs/</path>
    <filename>d8/d8f/ipfs_2README_8md.html</filename>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>src/network/</path>
    <filename>d4/d9c/network_2README_8md.html</filename>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>src/nft/</path>
    <filename>df/d64/nft_2README_8md.html</filename>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>src/rpc_proxy/</path>
    <filename>d3/dc0/rpc__proxy_2README_8md.html</filename>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>src/security/</path>
    <filename>d5/df8/security_2README_8md.html</filename>
  </compound>
  <compound kind="file">
    <name>README.md</name>
    <path>src/wallet/</path>
    <filename>d7/d1b/wallet_2README_8md.html</filename>
  </compound>
  <compound kind="file">
    <name>address_manager.cpp</name>
    <path>src/wallet/src/</path>
    <filename>df/d17/address__manager_8cpp.html</filename>
    <includes id="d7/d40/address__manager_8hpp" name="address_manager.hpp" local="yes" import="no" module="no" objc="no">satox/wallet/address_manager.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::wallet</namespace>
  </compound>
  <compound kind="file">
    <name>key_manager.cpp</name>
    <path>src/</path>
    <filename>dd/d59/key__manager_8cpp.html</filename>
  </compound>
  <compound kind="file">
    <name>key_manager.cpp</name>
    <path>src/security/pqc/</path>
    <filename>d7/dca/security_2pqc_2key__manager_8cpp.html</filename>
    <includes id="dd/dc1/security_2include_2security_2pqc_2key__manager_8hpp" name="key_manager.hpp" local="yes" import="no" module="no" objc="no">security/pqc/key_manager.hpp</includes>
    <includes id="dd/d9d/security_2pqc_2hybrid_8hpp" name="hybrid.hpp" local="yes" import="no" module="no" objc="no">security/pqc/hybrid.hpp</includes>
    <class kind="class">satox::security::pqc::KeyManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>key_manager.cpp</name>
    <path>src/security/src/</path>
    <filename>dc/da4/security_2src_2key__manager_8cpp.html</filename>
    <includes id="dd/dc1/security_2include_2security_2pqc_2key__manager_8hpp" name="key_manager.hpp" local="yes" import="no" module="no" objc="no">security/pqc/key_manager.hpp</includes>
    <includes id="dd/d9d/security_2pqc_2hybrid_8hpp" name="hybrid.hpp" local="yes" import="no" module="no" objc="no">security/pqc/hybrid.hpp</includes>
    <class kind="class">satox::security::pqc::KeyManager::Impl</class>
    <namespace>satox</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::security::pqc</namespace>
  </compound>
  <compound kind="file">
    <name>key_manager.cpp</name>
    <path>src/wallet/src/</path>
    <filename>d7/d67/wallet_2src_2key__manager_8cpp.html</filename>
    <includes id="d1/d65/wallet_2include_2satox_2wallet_2key__manager_8hpp" name="key_manager.hpp" local="yes" import="no" module="no" objc="no">satox/wallet/key_manager.hpp</includes>
    <includes id="d7/d40/address__manager_8hpp" name="address_manager.hpp" local="yes" import="no" module="no" objc="no">satox/wallet/address_manager.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::wallet</namespace>
  </compound>
  <compound kind="file">
    <name>wallet_manager.cpp</name>
    <path>src/core/src/</path>
    <filename>dc/d13/core_2src_2wallet__manager_8cpp.html</filename>
    <namespace>satox</namespace>
    <namespace>satox::core</namespace>
  </compound>
  <compound kind="file">
    <name>wallet_manager.cpp</name>
    <path>src/wallet/src/</path>
    <filename>db/d1c/wallet_2src_2wallet__manager_8cpp.html</filename>
    <includes id="d1/d65/wallet_2include_2satox_2wallet_2key__manager_8hpp" name="key_manager.hpp" local="yes" import="no" module="no" objc="no">satox/wallet/key_manager.hpp</includes>
    <includes id="d7/d40/address__manager_8hpp" name="address_manager.hpp" local="yes" import="no" module="no" objc="no">satox/wallet/address_manager.hpp</includes>
    <namespace>satox</namespace>
    <namespace>satox::wallet</namespace>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::AddressInfo</name>
    <filename>d9/d23/structsatox_1_1wallet_1_1AddressInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>address</name>
      <anchorfile>d9/d23/structsatox_1_1wallet_1_1AddressInfo.html</anchorfile>
      <anchor>a04c540a1e8e2b736381b5a141dbf7502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>public_key</name>
      <anchorfile>d9/d23/structsatox_1_1wallet_1_1AddressInfo.html</anchorfile>
      <anchor>a4d0ed64aeab6147f772fbe0cc1d21e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>derivation_path</name>
      <anchorfile>d9/d23/structsatox_1_1wallet_1_1AddressInfo.html</anchorfile>
      <anchor>aee55d1d1fdd34e85a1094511bac1e79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>created_time</name>
      <anchorfile>d9/d23/structsatox_1_1wallet_1_1AddressInfo.html</anchorfile>
      <anchor>a510ec11822c212dc473c828420698852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_used_time</name>
      <anchorfile>d9/d23/structsatox_1_1wallet_1_1AddressInfo.html</anchorfile>
      <anchor>a6446c8b9cf991da6ba2a7109f3ace955</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>balance</name>
      <anchorfile>d9/d23/structsatox_1_1wallet_1_1AddressInfo.html</anchorfile>
      <anchor>a8e842405848feb2be1c17a929ad4bed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>d9/d23/structsatox_1_1wallet_1_1AddressInfo.html</anchorfile>
      <anchor>a8a12b769becdbd9fe679103f82242a38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::AddressManager::AddressInfo</name>
    <filename>d2/dc3/structsatox_1_1wallet_1_1AddressManager_1_1AddressInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>address</name>
      <anchorfile>d2/dc3/structsatox_1_1wallet_1_1AddressManager_1_1AddressInfo.html</anchorfile>
      <anchor>a2c616d6cb4ccb8949b241f2aa944bdde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>d2/dc3/structsatox_1_1wallet_1_1AddressManager_1_1AddressInfo.html</anchorfile>
      <anchor>a2239d4eed26c51c5390f538deb02f325</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>scriptHash</name>
      <anchorfile>d2/dc3/structsatox_1_1wallet_1_1AddressManager_1_1AddressInfo.html</anchorfile>
      <anchor>a52813a3a3ff2b421a74748b2d7011a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>redeemScript</name>
      <anchorfile>d2/dc3/structsatox_1_1wallet_1_1AddressManager_1_1AddressInfo.html</anchorfile>
      <anchor>a030c20b7aa488978f01fb330000fa352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>requiredSignatures</name>
      <anchorfile>d2/dc3/structsatox_1_1wallet_1_1AddressManager_1_1AddressInfo.html</anchorfile>
      <anchor>a687c3717ee84b58e9bff58b37603cecf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::wallet::AddressManager</name>
    <filename>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</filename>
    <class kind="struct">satox::wallet::AddressManager::AddressInfo</class>
    <class kind="struct">satox::wallet::AddressManager::Error</class>
    <member kind="function">
      <type></type>
      <name>AddressManager</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a5909ccefbb9e5a880e283c6f0f515c52</anchor>
      <arglist>(const AddressManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AddressManager &amp;</type>
      <name>operator=</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a34ddf06bf02153bafec808ff4411d275</anchor>
      <arglist>(const AddressManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a38c37caaeefabbb1d58775fc8de3036b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a57183aba72a98962dc6aa086c4b05d16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generateAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>acd115c67bda6f3f62bc5973f69a82371</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generateSegWitAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a9f92aa4a563eb97ceccc505868b9a236</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generateMultiSigAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>af44caa2e1af67c77cf857cfdac0094b5</anchor>
      <arglist>(const std::vector&lt; std::vector&lt; uint8_t &gt; &gt; &amp;publicKeys, int requiredSignatures)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>ae437b493304002d39bb0dcad15c76870</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateSegWitAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a30ef9bb8fbac62191502f971119f1c28</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateMultiSigAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a8e4afa551b1d5bb3156201d5adf78b6a</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toLegacyAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>ad36932ff8a1c43ab834958509303b01a</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toSegWitAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a18cace5500e4030b17731f6eb19abaa8</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toMultiSigAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>aa2f3d8b5b1ddeca65fa6cdb5afc6796e</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>AddressInfo</type>
      <name>getAddressInfo</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a7945d0c1dcacecd7fcb5a7237166b308</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>deriveAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a5f949fe5aefb9271c4ef876eee1c4294</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, uint32_t purpose, uint32_t coinType, uint32_t account, uint32_t change, uint32_t addressIndex)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>deriveSegWitAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>aee2bfc13bcd7c3293213737a2cae0ce4</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, uint32_t purpose, uint32_t coinType, uint32_t account, uint32_t change, uint32_t addressIndex)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>deriveMultiSigAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a520663432e613f3d02e3bbf4810639c1</anchor>
      <arglist>(const std::vector&lt; std::vector&lt; uint8_t &gt; &gt; &amp;publicKeys, int requiredSignatures, uint32_t purpose, uint32_t coinType, uint32_t account, uint32_t change, uint32_t addressIndex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cacheAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>ad1cee81eb1030446b895cc7644540c71</anchor>
      <arglist>(const std::string &amp;address, const AddressInfo &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeCachedAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>ac8c173d76eebc338093fa8b1d2703529</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>AddressInfo</type>
      <name>getCachedAddress</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a9de108d28c93ab8ad101a721adee45ff</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAddressCache</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>af5b094b7d70cb7dc307b4306ea5e4121</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>getLastError</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a7d91149aaa07a44b68003a601e8336a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a7c5f3a0785fa71caa0730739553796c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AddressManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>da/d8b/classsatox_1_1wallet_1_1AddressManager.html</anchorfile>
      <anchor>a681e210c5c6d08f0dec78c46643e1a94</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::QuantumManager::AlgorithmInfo</name>
    <filename>d9/dd6/structsatox_1_1core_1_1QuantumManager_1_1AlgorithmInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d9/dd6/structsatox_1_1core_1_1QuantumManager_1_1AlgorithmInfo.html</anchorfile>
      <anchor>ad0c1c8fb0a862b1866d633a7c7591193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>d9/dd6/structsatox_1_1core_1_1QuantumManager_1_1AlgorithmInfo.html</anchorfile>
      <anchor>adb1c8debd76baebf41713a6ce6c597f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>keySize</name>
      <anchorfile>d9/dd6/structsatox_1_1core_1_1QuantumManager_1_1AlgorithmInfo.html</anchorfile>
      <anchor>a297d4686545a883908b2909a6ae6b623</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>signatureSize</name>
      <anchorfile>d9/dd6/structsatox_1_1core_1_1QuantumManager_1_1AlgorithmInfo.html</anchorfile>
      <anchor>a3e0cef8f2d72fca41c79d5c21c47b00a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ciphertextSize</name>
      <anchorfile>d9/dd6/structsatox_1_1core_1_1QuantumManager_1_1AlgorithmInfo.html</anchorfile>
      <anchor>a5c79712a4439d7bc9b05742f762e6245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isSignature</name>
      <anchorfile>d9/dd6/structsatox_1_1core_1_1QuantumManager_1_1AlgorithmInfo.html</anchorfile>
      <anchor>ae2a365b2164a333aa260f49cb53a8aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isEncryption</name>
      <anchorfile>d9/dd6/structsatox_1_1core_1_1QuantumManager_1_1AlgorithmInfo.html</anchorfile>
      <anchor>a2ee7e59fd538a0fb80408b3fd4dc1d54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isHash</name>
      <anchorfile>d9/dd6/structsatox_1_1core_1_1QuantumManager_1_1AlgorithmInfo.html</anchorfile>
      <anchor>a7f1d24e63d5433a9c539d8835434a32d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::APIManager</name>
    <filename>da/dba/classsatox_1_1core_1_1APIManager.html</filename>
    <class kind="struct">satox::core::APIManager::Config</class>
    <class kind="class">satox::core::APIManager::Impl</class>
    <class kind="struct">satox::core::APIManager::Request</class>
    <class kind="struct">satox::core::APIManager::Response</class>
    <class kind="struct">satox::core::APIManager::WebSocketMessage</class>
    <member kind="typedef">
      <type>std::function&lt; Response(const Request &amp;)&gt;</type>
      <name>RequestHandler</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>ae89ce1da5895f3ad0931edd970745b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const WebSocketMessage &amp;)&gt;</type>
      <name>WebSocketHandler</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>ad6a98d6f969b5844053a1745503f0e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>APIManager</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>aac92e68ce13433ace119754cb1ef53b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~APIManager</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a7d14741a5bb5de5317e71e192c61fee1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a9cf3f704e5bc9c8052d52d9e0477b311</anchor>
      <arglist>(const Config &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a3f453d69e81ba5ca8ce5bc495d27391b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a7771c2bc51c97f93999d308accb002be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a1f0b6de0c6b40b14262da58ff1d30dc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerEndpoint</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>ad97596e43b10939de7b812028d6b5bcc</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;path, RequestHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unregisterEndpoint</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a04f2be0c60ae3e94927b898605ace946</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerWebSocketHandler</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>ad7d14947fe009de49a3ccf5e596b90b1</anchor>
      <arglist>(const std::string &amp;path, WebSocketHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unregisterWebSocketHandler</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a3840f9634b79ed1432410712788197e4</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendWebSocketMessage</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a6144b146b98388621e95b981150b5898</anchor>
      <arglist>(const std::string &amp;client_id, const WebSocketMessage &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastWebSocketMessage</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a13c4f7c34d6309d7dfcd9fe3e55d7ca5</anchor>
      <arglist>(const WebSocketMessage &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setRateLimit</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a53750530907f9b286cd7cd0dc8891215</anchor>
      <arglist>(int requests_per_minute)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRateLimited</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>ac6a40e4aed20922374e57e7d7302efa1</anchor>
      <arglist>(const std::string &amp;client_ip) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>a2573c67a52b58f2cb082d365cd20ea02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearError</name>
      <anchorfile>da/dba/classsatox_1_1core_1_1APIManager.html</anchorfile>
      <anchor>af7833f5f06a42f7553ef07f618ca6a42</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::Asset</name>
    <filename>d2/d72/structsatox_1_1asset_1_1Asset.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d2/d72/structsatox_1_1asset_1_1Asset.html</anchorfile>
      <anchor>a9a14bf6a70a3a5bf8dace0c89a0bf7b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d2/d72/structsatox_1_1asset_1_1Asset.html</anchorfile>
      <anchor>abe26f98220eb1f421f747f506c2b5686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>symbol</name>
      <anchorfile>d2/d72/structsatox_1_1asset_1_1Asset.html</anchorfile>
      <anchor>ac571ab539cb5337640adc66116b90b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>d2/d72/structsatox_1_1asset_1_1Asset.html</anchorfile>
      <anchor>a92cff2316ddf831675ae2fda4dee8739</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>total_supply</name>
      <anchorfile>d2/d72/structsatox_1_1asset_1_1Asset.html</anchorfile>
      <anchor>a2f07b0ffe6a8bfa1bb62b841cb9a4bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>decimals</name>
      <anchorfile>d2/d72/structsatox_1_1asset_1_1Asset.html</anchorfile>
      <anchor>a874c3c718a3207241dddfe0d8419801d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>d2/d72/structsatox_1_1asset_1_1Asset.html</anchorfile>
      <anchor>a9ab416190fb4efaa562a992a2a7bf37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>d2/d72/structsatox_1_1asset_1_1Asset.html</anchorfile>
      <anchor>a547139a2f65180b70ad51e59fdf21049</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>created_at</name>
      <anchorfile>d2/d72/structsatox_1_1asset_1_1Asset.html</anchorfile>
      <anchor>a5fc60ca3b2ba3c68c370582fde8c44fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>updated_at</name>
      <anchorfile>d2/d72/structsatox_1_1asset_1_1Asset.html</anchorfile>
      <anchor>ae7bb9d16615846e3d24a0e81ae7b9d8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::Asset</name>
    <filename>db/d53/structsatox_1_1core_1_1Asset.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1Asset.html</anchorfile>
      <anchor>aa4cc0d02e275dc9bbbb5d6f440a2a9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1Asset.html</anchorfile>
      <anchor>a5c1d3a1cb46a134f34cd6b12175c0c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>symbol</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1Asset.html</anchorfile>
      <anchor>a27a8f78cda55aa60cc1273b714820c2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1Asset.html</anchorfile>
      <anchor>a46e3d7bbc1d16a2ed6602beb673b6e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>totalSupply</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1Asset.html</anchorfile>
      <anchor>a6eaf90c827dc1c698c5dfc0a85b44890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>decimals</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1Asset.html</anchorfile>
      <anchor>a6c9b2f7f4087e9bc5b15f4f9f7225bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>contractAddress</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1Asset.html</anchorfile>
      <anchor>a240cdddc1e9b074f171375a8d86bb582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>createdAt</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1Asset.html</anchorfile>
      <anchor>a2b259d40b2922658a5ececbd7b0ace55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1Asset.html</anchorfile>
      <anchor>a0be10d4a4c205b6149cdababf619d537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1Asset.html</anchorfile>
      <anchor>a8977b384fb3c518999aa137f93c526e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::AssetManager::Asset</name>
    <filename>d2/d74/structsatox_1_1core_1_1AssetManager_1_1Asset.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d2/d74/structsatox_1_1core_1_1AssetManager_1_1Asset.html</anchorfile>
      <anchor>af7be4eb7d4d6c8fce9a1263c51b7ddfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetMetadata</type>
      <name>metadata</name>
      <anchorfile>d2/d74/structsatox_1_1core_1_1AssetManager_1_1Asset.html</anchorfile>
      <anchor>aa9736a910a9cf1a92a82e6b5bb4acd15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetState</type>
      <name>state</name>
      <anchorfile>d2/d74/structsatox_1_1core_1_1AssetManager_1_1Asset.html</anchorfile>
      <anchor>a6857d7916d6527eb1ab53c2e70fe5c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>transactionId</name>
      <anchorfile>d2/d74/structsatox_1_1core_1_1AssetManager_1_1Asset.html</anchorfile>
      <anchor>a34e4a16851071b49ba09dbea0f02f2be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>issueTime</name>
      <anchorfile>d2/d74/structsatox_1_1core_1_1AssetManager_1_1Asset.html</anchorfile>
      <anchor>ab9e07b6de85ea58d4d1c4d340737f107</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>history</name>
      <anchorfile>d2/d74/structsatox_1_1core_1_1AssetManager_1_1Asset.html</anchorfile>
      <anchor>a90b6d961b959734f8d70f3a673dd49b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalData</name>
      <anchorfile>d2/d74/structsatox_1_1core_1_1AssetManager_1_1Asset.html</anchorfile>
      <anchor>a15a7ba27b8565cd6a74378cf3f35d40c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::Asset</name>
    <filename>d8/d74/classsatox_1_1database_1_1Asset.html</filename>
    <base>satox::database::DataModel</base>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>a33fe2526f1ebdfd5797cfe928353de1a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fromJson</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>a4bb44768d2a6b53088a7518ffccbe100</anchor>
      <arglist>(const nlohmann::json &amp;j) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTableName</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>ad20486713479bd4f8e77963572ceeff3</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>af5f4c7817463a75b7d29afda3ff278c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>aa2b3ed0ae51ded8d99f3f0984e3fedd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>symbol</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>ab543b3554a77ce1c50bea591d2580aa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>afb7a28d23593a85825e9ba7e276982df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalSupply</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>a871959f15940709cb81ccfe0e8132f9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>decimals</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>ab21b29de5ae2bc227e1d695bd8c23071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>abb0065c6eb2380a1393c7c89a3ff4d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>af46a4cfdb9f7234b38c138975ebaa36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>createdAt</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>ab34fdf364fe1cc3a98829b37d43e968e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>updatedAt</name>
      <anchorfile>d8/d74/classsatox_1_1database_1_1Asset.html</anchorfile>
      <anchor>a3e256ed9f4554125a3a19867d323b4b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletManager::Asset</name>
    <filename>d2/d7c/structsatox_1_1wallet_1_1WalletManager_1_1Asset.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d2/d7c/structsatox_1_1wallet_1_1WalletManager_1_1Asset.html</anchorfile>
      <anchor>af8501ad0465ccb9d618e963e63067a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>symbol</name>
      <anchorfile>d2/d7c/structsatox_1_1wallet_1_1WalletManager_1_1Asset.html</anchorfile>
      <anchor>ac0c5cc75db7ee38d12f248b3c99e87da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>d2/d7c/structsatox_1_1wallet_1_1WalletManager_1_1Asset.html</anchorfile>
      <anchor>aeb7dd8903dc3bd903b89d951613d073d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>d2/d7c/structsatox_1_1wallet_1_1WalletManager_1_1Asset.html</anchorfile>
      <anchor>a2258b8adec1d8d0452d789d380744264</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d2/d7c/structsatox_1_1wallet_1_1WalletManager_1_1Asset.html</anchorfile>
      <anchor>aca1e9c0d3b0e492bd6bbe53cc33d25e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetBurnRequest</name>
    <filename>da/d67/structsatox_1_1asset_1_1AssetBurnRequest.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>asset_name</name>
      <anchorfile>da/d67/structsatox_1_1asset_1_1AssetBurnRequest.html</anchorfile>
      <anchor>a07eb9bf6a620100104900c4932f9ba92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner_address</name>
      <anchorfile>da/d67/structsatox_1_1asset_1_1AssetBurnRequest.html</anchorfile>
      <anchor>a59efdffafe2070289c0e0ff4ee513f8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>da/d67/structsatox_1_1asset_1_1AssetBurnRequest.html</anchorfile>
      <anchor>ab959f1c07c96e1c100645a0225b391f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>transaction_id</name>
      <anchorfile>da/d67/structsatox_1_1asset_1_1AssetBurnRequest.html</anchorfile>
      <anchor>aacc0048743a05860a8c6a842901db797</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>da/d67/structsatox_1_1asset_1_1AssetBurnRequest.html</anchorfile>
      <anchor>a86b719972ddbb1e12964cfa7725e57fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetConfig</name>
    <filename>d4/d2d/structsatox_1_1asset_1_1AssetConfig.html</filename>
    <member kind="variable">
      <type>AssetType</type>
      <name>type</name>
      <anchorfile>d4/d2d/structsatox_1_1asset_1_1AssetConfig.html</anchorfile>
      <anchor>a0603a2806aafed41d53e27a2012aee29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d4/d2d/structsatox_1_1asset_1_1AssetConfig.html</anchorfile>
      <anchor>a920509bb616945a30b96fed54c6dc072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxAssets</name>
      <anchorfile>d4/d2d/structsatox_1_1asset_1_1AssetConfig.html</anchorfile>
      <anchor>ae6cc837108026bcc1d3b141df69f0297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>timeout</name>
      <anchorfile>d4/d2d/structsatox_1_1asset_1_1AssetConfig.html</anchorfile>
      <anchor>ad3094f0f9568a368a6e86f28a46530ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLogging</name>
      <anchorfile>d4/d2d/structsatox_1_1asset_1_1AssetConfig.html</anchorfile>
      <anchor>a9bf52117f5749d2e65a68d6d372c54f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logPath</name>
      <anchorfile>d4/d2d/structsatox_1_1asset_1_1AssetConfig.html</anchorfile>
      <anchor>a30b64dfb878772d9a0753fb9004f932e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalConfig</name>
      <anchorfile>d4/d2d/structsatox_1_1asset_1_1AssetConfig.html</anchorfile>
      <anchor>a01299c9359820c6ea6baae7fdcd4aba3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetCreationRequest</name>
    <filename>d6/d19/structsatox_1_1asset_1_1AssetCreationRequest.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d6/d19/structsatox_1_1asset_1_1AssetCreationRequest.html</anchorfile>
      <anchor>a8ca3902f4725bddd3c465787f320b82d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>symbol</name>
      <anchorfile>d6/d19/structsatox_1_1asset_1_1AssetCreationRequest.html</anchorfile>
      <anchor>abf5f1ece4c6d5abe52aaefd1b59f60c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>d6/d19/structsatox_1_1asset_1_1AssetCreationRequest.html</anchorfile>
      <anchor>a10f446954a8ae2df7530c81b50d8ae96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>units</name>
      <anchorfile>d6/d19/structsatox_1_1asset_1_1AssetCreationRequest.html</anchorfile>
      <anchor>acec1410d0886a0ce4b63725250379ed8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reissuable</name>
      <anchorfile>d6/d19/structsatox_1_1asset_1_1AssetCreationRequest.html</anchorfile>
      <anchor>a196596cc6afa5ee638dd1fde823bfc73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner_address</name>
      <anchorfile>d6/d19/structsatox_1_1asset_1_1AssetCreationRequest.html</anchorfile>
      <anchor>ae2bfccd2f2cbd885a5bd380e367d831b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d6/d19/structsatox_1_1asset_1_1AssetCreationRequest.html</anchorfile>
      <anchor>a372eda169f4f86ded6abf47fc7b7821b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::asset::AssetException</name>
    <filename>dd/dd8/classsatox_1_1asset_1_1AssetException.html</filename>
    <member kind="function">
      <type></type>
      <name>AssetException</name>
      <anchorfile>dd/dd8/classsatox_1_1asset_1_1AssetException.html</anchorfile>
      <anchor>a8157ed7dd6a1d193950f206834e74072</anchor>
      <arglist>(AssetErrorCode code, const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>dd/dd8/classsatox_1_1asset_1_1AssetException.html</anchorfile>
      <anchor>a54a26e473771401c06b0db5e452872ed</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>AssetErrorCode</type>
      <name>code</name>
      <anchorfile>dd/dd8/classsatox_1_1asset_1_1AssetException.html</anchorfile>
      <anchor>af3ffde8fcd9bbe87c8b445ee40008756</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>message</name>
      <anchorfile>dd/dd8/classsatox_1_1asset_1_1AssetException.html</anchorfile>
      <anchor>acf57f4973eb6306ec3a11985f21a9df9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::asset::AssetInitializationException</name>
    <filename>dd/d38/classsatox_1_1asset_1_1AssetInitializationException.html</filename>
    <base>satox::asset::AssetException</base>
    <member kind="function">
      <type></type>
      <name>AssetInitializationException</name>
      <anchorfile>dd/d38/classsatox_1_1asset_1_1AssetInitializationException.html</anchorfile>
      <anchor>ab330a4af3873c519d47eb65bbca38e15</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::asset::AssetManager</name>
    <filename>d8/d13/classsatox_1_1asset_1_1AssetManager.html</filename>
    <class kind="struct">satox::asset::AssetManager::ErrorRecoveryConfig</class>
    <class kind="struct">satox::asset::AssetManager::PerformanceConfig</class>
    <class kind="struct">satox::asset::AssetManager::RecoveryOperation</class>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const nlohmann::json &amp;)&gt;</type>
      <name>AssetCallback</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a6b993cb26df317e9777ffaaf730c4a9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetManager</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a65eb2d46efa850b60e9f24254cd36923</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AssetManager</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ad51f1a7f60d3660a8ff4af292021f2af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a8d9f0cc1e3012bc9aa17a64898f3cb05</anchor>
      <arglist>(const AssetConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a9b1eb94ad2739d81529ae13b4141bd12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a2a54c37c151dfaeeb9eec7f50a24ea11</anchor>
      <arglist>(const AssetCreationRequest &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transferAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ad95c0ec540a1dc9cce084d67a9e46c9b</anchor>
      <arglist>(const AssetTransferRequest &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reissueAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a5968767e0f5ad7d568ea8a75a1e3b84b</anchor>
      <arglist>(const AssetReissueRequest &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>burnAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ad399ca99d8cc84268b30ac3a1f0b5cde</anchor>
      <arglist>(const AssetBurnRequest &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>freezeAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a25d908ac9e63955b444c1398a04cd579</anchor>
      <arglist>(const std::string &amp;asset_name, const std::string &amp;owner_address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unfreezeAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ab56602e2506677c26880a61293984219</anchor>
      <arglist>(const std::string &amp;asset_name, const std::string &amp;owner_address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>destroyAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ad8cfe84260fe2201e5abbfce17c9e66e</anchor>
      <arglist>(const std::string &amp;asset_name, const std::string &amp;owner_address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAssetMetadata</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a4b0c42b88a95f24558a8fbcbddea4c68</anchor>
      <arglist>(const std::string &amp;asset_name, AssetMetadata &amp;metadata) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAssetBalance</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a91706abdc9aaf8e9548f1f892a3812cc</anchor>
      <arglist>(const std::string &amp;address, const std::string &amp;asset_name, uint64_t &amp;balance) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAssetOwners</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a3aab2f79b644399fdda3176c50205cc7</anchor>
      <arglist>(const std::string &amp;asset_name, std::vector&lt; std::string &gt; &amp;owners) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAssetStatus</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a19f71573618b6fcd257f0812361f82d2</anchor>
      <arglist>(const std::string &amp;asset_name, AssetStatus &amp;status) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAssetType</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a1dc998c0c9bce46d5ec5db6ce9f96cc5</anchor>
      <arglist>(const std::string &amp;asset_name, AssetType &amp;type) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>aea0f0214f59cc8c85ca3fd2d9ac595b9</anchor>
      <arglist>(const std::string &amp;asset_name, AssetVerificationResult &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateAssetMetadata</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a14ace1d11be0b5b6182ef2da5981e611</anchor>
      <arglist>(const AssetMetadata &amp;metadata, AssetVerificationResult &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateAssetTransfer</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>af85c5ee5e782983545fb460c0c5fea4d</anchor>
      <arglist>(const AssetTransferRequest &amp;request, AssetVerificationResult &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateAssetReissue</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a49fff1be6cffa366c1eefba0bcd5d850</anchor>
      <arglist>(const AssetReissueRequest &amp;request, AssetVerificationResult &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateAssetBurn</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a6288741789a79f007d3d0562cee601bd</anchor>
      <arglist>(const AssetBurnRequest &amp;request, AssetVerificationResult &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>AssetState</type>
      <name>getState</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a1e4402bd0e3b8bdab0da50191b3c8318</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a2a67c17d67518e2eb72f4bebaa049e48</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>af552b2f014c57c0bfb08f2411ca6d976</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AssetConfig</type>
      <name>getConfig</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a8d1f379e8bb54b19467a7df947d0746b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateConfig</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ac07e42ad7a4aa3d0b95ec22acc5cd678</anchor>
      <arglist>(const AssetConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateConfig</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a8cf00ad6cdb99e779eb246dcddd47d44</anchor>
      <arglist>(const AssetConfig &amp;config) const</arglist>
    </member>
    <member kind="function">
      <type>AssetStats</type>
      <name>getStats</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ae033207fcc14daea8227befc55e8ef83</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a686f9db186338f3393339ef0707d5a92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a50c9724b5cfcbffbe9fbfb8d69e4d403</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAssetCallback</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a374974caee3692db6fcf0a72db3d5733</anchor>
      <arglist>(AssetCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerOperationCallback</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a55385f1778ad632ba78cd738385c311a</anchor>
      <arglist>(OperationCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>aebe86bfa3816b6205f8fd12e4a612967</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterAssetCallback</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a55f28a0547859948c53462b54b2ed024</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterOperationCallback</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ab13e5df57eda77848370dcc1868bd29f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a2509cf8efb83f21afd38f2265af74fed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a06f4d96ab122326ae3538b2ba5db863b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ac6953177654bac3715ec37043d5014d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>healthCheck</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a5c68268c280bfa48480cadb7a0e1bb03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getHealthStatus</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a273fb354e5c1049afb6399405a843f4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getAssetInfo</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>adb396d160596f68905afe68938bbf11f</anchor>
      <arglist>(const std::string &amp;asset_name)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>listAssets</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a8810d5507bd29e669bc7e317ffed4d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>getAssetHistory</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ad2d0629f69a65e66f8dcda56c3f249fd</anchor>
      <arglist>(const std::string &amp;asset_name)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>getAssetBalances</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a130cca06ddc0fe0e8cd65e24bc3f44fc</anchor>
      <arglist>(const std::string &amp;asset_name)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>getAssetTransactions</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>af9c1ed53d0c1e462af2f61b3a141033b</anchor>
      <arglist>(const std::string &amp;asset_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetManager</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>acd304baa321d752fe5ac8ab3f9fa874d</anchor>
      <arglist>(const AssetManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AssetManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ae0d651cc8a719bf399fdd045af0f3ff3</anchor>
      <arglist>(const AssetManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetManager</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a11a535f38ad41874a5fedd3dcb91bd12</anchor>
      <arglist>(AssetManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>AssetManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a64242908a44612949c8149de5942e55c</anchor>
      <arglist>(AssetManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>aa15ef80128f22bbc1c04f9acf103f3de</anchor>
      <arglist>(const std::string &amp;network)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a9b1eb94ad2739d81529ae13b4141bd12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a06f4d96ab122326ae3538b2ba5db863b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ae9cfeb673c92e396c07c68f97d6a524c</anchor>
      <arglist>(const Asset &amp;asset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a20a0bbfd09242b23ebed1df9016a5532</anchor>
      <arglist>(const std::string &amp;asset_id, const Asset &amp;asset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ada9fd9ecdbfd243eceedc9fc0a3dd198</anchor>
      <arglist>(const std::string &amp;asset_id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Asset &gt;</type>
      <name>getAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ad2f1f04ef6da0783bc8bc5233a2ed82d</anchor>
      <arglist>(const std::string &amp;asset_id) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Asset &gt;</type>
      <name>getAssetsByOwner</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ab12e5c75714b667e64fbe510c617d676</anchor>
      <arglist>(const std::string &amp;owner) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Asset &gt;</type>
      <name>getAllAssets</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a58cd87b21bbf9a7546593e6b68261688</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transferAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a9a02788b41932ac948d39f31a80d850c</anchor>
      <arglist>(const std::string &amp;asset_id, const std::string &amp;from, const std::string &amp;to, uint64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getAssetBalance</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a3fd55016def3a3bf11001dc37d1422f4</anchor>
      <arglist>(const std::string &amp;asset_id, const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPerformanceConfig</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>adf0fa46cf4bdeaf233617fa822705784</anchor>
      <arglist>(const PerformanceConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a680a145d41ab76516666845fe6f133e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCacheSize</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ae48a11b36117829b5c3b23b8f008a440</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getConnectionPoolSize</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>aba10e272106765825db6711743559ca9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getBatchSize</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ae5a86d0ca20601e96e6fa4af153e7889</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processBatch</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a998158ecfb145fd29a89438b3e9d8007</anchor>
      <arglist>(const std::vector&lt; Asset &gt; &amp;assets)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>optimizeMemory</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a9ad2f1094f5e094e58c01e88af99a639</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setErrorRecoveryConfig</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a986198210e6613f19a99bf98c7faa0ad</anchor>
      <arglist>(const ErrorRecoveryConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>recoverFromError</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a83267e6cbca669b9fe3ede2ba8df16f9</anchor>
      <arglist>(const std::string &amp;operation_id)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; RecoveryOperation &gt;</type>
      <name>getRecoveryHistory</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a1b7be7166641d02c5da45c23e08936d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearRecoveryHistory</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a0e762ddbe5c1d69dd1d1566087e5eb7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecoveryInProgress</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ae7f727228d4d7882281ea3bb9b7dfa20</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastRecoveryError</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a4fc2937646cee5c8c56aa6663ac6e604</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>searchAssets</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a3db9644d79983e229800917f0d520843</anchor>
      <arglist>(const std::string &amp;query, std::vector&lt; Asset &gt; &amp;results)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>searchByMetadata</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a1edf9fe804c7518ba78019e1b7e62939</anchor>
      <arglist>(const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata_filters, std::vector&lt; Asset &gt; &amp;results)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateAsset</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a7a2c0cfeac8364a650a9dc55b67c6221</anchor>
      <arglist>(const Asset &amp;asset) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateAssetName</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a3e6f49aa95281fd2ec45c6007294956a</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateMetadata</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a7532a49061362384cfa4b845c077b755</anchor>
      <arglist>(const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setAssetPermissions</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>ab6b984cb05a31b783b6532d10e85cd29</anchor>
      <arglist>(const std::string &amp;asset_id, const std::unordered_map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;permissions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAssetPermissions</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a9b64936f979d12e66601b9379a9ed41a</anchor>
      <arglist>(const std::string &amp;asset_id, std::unordered_map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;permissions) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkAssetPermission</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a268303211208f1ee716d2d11ac43ea32</anchor>
      <arglist>(const std::string &amp;asset_id, const std::string &amp;address, const std::string &amp;permission) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAssetHistory</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a1991b50d0b81ea3494e4daf60f941b4c</anchor>
      <arglist>(const std::string &amp;asset_id, std::vector&lt; nlohmann::json &gt; &amp;history) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addAssetHistory</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a00f1db7edbbd9a3653e8c86904bb07ed</anchor>
      <arglist>(const std::string &amp;asset_id, const nlohmann::json &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAssetCallback</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a374974caee3692db6fcf0a72db3d5733</anchor>
      <arglist>(AssetCallback callback)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AssetManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a16c138da27f1d66ba124a1c44a5b8808</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AssetManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d8/d13/classsatox_1_1asset_1_1AssetManager.html</anchorfile>
      <anchor>a063fc69c28b6a0af95dd8dae76ce64b3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::AssetManager</name>
    <filename>d2/d37/classsatox_1_1core_1_1AssetManager.html</filename>
    <class kind="struct">satox::core::AssetManager::Asset</class>
    <class kind="struct">satox::core::AssetManager::AssetMetadata</class>
    <class kind="struct">satox::core::AssetManager::AssetStats</class>
    <member kind="enumeration">
      <type></type>
      <name>AssetType</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a7f19c0a582656f617052a6acd9bf3650</anchor>
      <arglist></arglist>
      <enumvalue file="d2/d37/classsatox_1_1core_1_1AssetManager.html" anchor="a7f19c0a582656f617052a6acd9bf3650a94c8aa2452bccd82ee129b46f7c4be79">TOKEN</enumvalue>
      <enumvalue file="d2/d37/classsatox_1_1core_1_1AssetManager.html" anchor="a7f19c0a582656f617052a6acd9bf3650aa692c529f241845ae00b47284e09e76a">NFT</enumvalue>
      <enumvalue file="d2/d37/classsatox_1_1core_1_1AssetManager.html" anchor="a7f19c0a582656f617052a6acd9bf3650a72baef04098f035e8a320b03ad197818">CUSTOM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AssetState</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a4fc6183c506cf749d6708c6eab33cae3</anchor>
      <arglist></arglist>
      <enumvalue file="d2/d37/classsatox_1_1core_1_1AssetManager.html" anchor="a4fc6183c506cf749d6708c6eab33cae3a98690bf632c29c17c9e4c5a64069903c">CREATED</enumvalue>
      <enumvalue file="d2/d37/classsatox_1_1core_1_1AssetManager.html" anchor="a4fc6183c506cf749d6708c6eab33cae3ac650bbb4908b9f3b9d265ccb79c16ef9">ISSUED</enumvalue>
      <enumvalue file="d2/d37/classsatox_1_1core_1_1AssetManager.html" anchor="a4fc6183c506cf749d6708c6eab33cae3a19ee3f1c15c13e4a5c484ff48a8b4c8d">TRANSFERRED</enumvalue>
      <enumvalue file="d2/d37/classsatox_1_1core_1_1AssetManager.html" anchor="a4fc6183c506cf749d6708c6eab33cae3aad9f8dea088d688cb5a70d7d24ea1c2b">BURNED</enumvalue>
      <enumvalue file="d2/d37/classsatox_1_1core_1_1AssetManager.html" anchor="a4fc6183c506cf749d6708c6eab33cae3abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, AssetState)&gt;</type>
      <name>AssetCallback</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>aab290304a99d60eb2ffe59d85ce1f095</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const AssetMetadata &amp;)&gt;</type>
      <name>AssetMetadataCallback</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>aaecc1c6a28e6b8b36e9f931cbff7edcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt;</type>
      <name>AssetErrorCallback</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a285f460be4df048ff9ca9c84cb8305f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetManager</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ad62590bf5d805e10287b6bc5eb377ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AssetManager</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a0adf32b540e1af6e138572073a2030ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetManager</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ae3e562e7d9b57452b7392107c1a66b05</anchor>
      <arglist>(const AssetManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AssetManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a360f5c3e14a920cda91b416281847a5c</anchor>
      <arglist>(const AssetManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssetManager</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a3a78026e5c271a034c1d6392c95287d2</anchor>
      <arglist>(AssetManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>AssetManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ac5be80475bcb6c18e197024429021958</anchor>
      <arglist>(AssetManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a4be91f88a4877b0e977f3c95a2a62ecf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Asset</type>
      <name>createAsset</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a9e0451ed01dcbf92cbe455d901fda28d</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;symbol, const std::string &amp;owner, const std::string &amp;totalSupply, const std::string &amp;decimals=&quot;18&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateAsset</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>aae3ad8c333353d362c93e55412ee397e</anchor>
      <arglist>(const Asset &amp;asset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteAsset</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a8c1ec969f130df0537c0fe0d3c931a89</anchor>
      <arglist>(const std::string &amp;assetId)</arglist>
    </member>
    <member kind="function">
      <type>Asset</type>
      <name>getAsset</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a9013533b663455aa917da5a64976cbdd</anchor>
      <arglist>(const std::string &amp;assetId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Asset &gt;</type>
      <name>getAssetsByOwner</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>acab5070fdd2201ae81997d1b8f3a88a5</anchor>
      <arglist>(const std::string &amp;owner)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Asset &gt;</type>
      <name>getAllAssets</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a4df61469ff0ee9da0e977df23cb25fb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transferAsset</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a9ca7890ad7f617c6f26f2866b5068286</anchor>
      <arglist>(const std::string &amp;assetId, const std::string &amp;from, const std::string &amp;to, const std::string &amp;amount)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getAssetBalance</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>acd764cb8a42eaaa849a93f07f738e9da</anchor>
      <arglist>(const std::string &amp;assetId, const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>af6852782b0643efa3f0b15e65621180d</anchor>
      <arglist>(const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a12e2cb7151636cb90f047bfa965ed812</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createAsset</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a0ec1b9c77b05ce925b02b7679e2411b0</anchor>
      <arglist>(const std::string &amp;id, const AssetMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>issueAsset</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>abdf7bcfd1a763ea37d65c821a62c51e8</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transferAsset</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ad7875787742daa78cb311b24c3ae5985</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;newOwner)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>burnAsset</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a42d05efbac4f787056f21462fe27477b</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateAssetMetadata</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>af93add324e4b269f6832aaebe30a6b58</anchor>
      <arglist>(const std::string &amp;id, const AssetMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAssetExists</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a94b3cc11b7534c6f007adfc9be67a381</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>Asset</type>
      <name>getAsset</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ab57f8f0e8965d29a6fa24e1f14b25da8</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Asset &gt;</type>
      <name>getAssetsByType</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a2cd0db463f87f81d1bddb5489fc65008</anchor>
      <arglist>(AssetType type) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Asset &gt;</type>
      <name>getAssetsByOwner</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ade79f58093daac1f2c99386b3209ef3f</anchor>
      <arglist>(const std::string &amp;owner) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Asset &gt;</type>
      <name>getAssetsByState</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a93c3dcf270a9d105daf35a64a73729cf</anchor>
      <arglist>(AssetState state) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateMetadata</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ade429905edea301463d413b096b73ed4</anchor>
      <arglist>(const AssetMetadata &amp;metadata) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateAssetURI</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>af3436367561b2b5be78944bc9734d863</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateAssetHash</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a813272cbbeb31b510bed7249ea5841e2</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addAssetAttribute</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ac18d2f8ab9f7278013ddda7d52625e90</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;key, const nlohmann::json &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeAssetAttribute</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a248ab0983ed7e485e80db2232aa8ff41</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getAssetHistory</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a7ccc44e1867815635089aa339104d87a</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addAssetHistoryEntry</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a6879f652e2f8f532ac14e147d7a826b0</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>clearAssetHistory</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ae76cb9aa0ab6bb564d6dd7920426fd53</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>AssetStats</type>
      <name>getStats</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a2f6e0c80dbaac449c4f9858faa60f50d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>abbad7646a42661cda0349ff53c86f009</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ad95ed2f09286b60df5d1653163141ffe</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAssetCallback</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a8f25156cfa131a088fd51d6c54b5a5c7</anchor>
      <arglist>(AssetCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerMetadataCallback</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a244fe376cbc6f49d0dc5436253457b3a</anchor>
      <arglist>(AssetMetadataCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a8ae7fff0b8bd1f99beff2375308dcfff</anchor>
      <arglist>(AssetErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterAssetCallback</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ac42038277fed4eff01a4e9f191deed9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterMetadataCallback</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a407d727d19306bb9f4cafe0c8d11f12e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>af84c36b8acffdde28b4db205e1099c7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>aebe482fcdbcf21037ec041e63fcde84f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>ad8802144f4841ee37299621c01fc8a62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static AssetManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d2/d37/classsatox_1_1core_1_1AssetManager.html</anchorfile>
      <anchor>a274b07e3ea293b76e6fe20b63343f233</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetMetadata</name>
    <filename>dc/d26/structsatox_1_1asset_1_1AssetMetadata.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>dc/d26/structsatox_1_1asset_1_1AssetMetadata.html</anchorfile>
      <anchor>a550ac87a7e53fb345097bab92412c455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>symbol</name>
      <anchorfile>dc/d26/structsatox_1_1asset_1_1AssetMetadata.html</anchorfile>
      <anchor>ac44800463ba72924225a38e1d3d72613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>dc/d26/structsatox_1_1asset_1_1AssetMetadata.html</anchorfile>
      <anchor>a5c95a10593861a617cc70af08eb5db14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>issuer</name>
      <anchorfile>dc/d26/structsatox_1_1asset_1_1AssetMetadata.html</anchorfile>
      <anchor>a57983cf05f4a28861fa1e0c83def2631</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>total_supply</name>
      <anchorfile>dc/d26/structsatox_1_1asset_1_1AssetMetadata.html</anchorfile>
      <anchor>a59a69248ea36cf7703bbc5c3e50c9e20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>decimals</name>
      <anchorfile>dc/d26/structsatox_1_1asset_1_1AssetMetadata.html</anchorfile>
      <anchor>aed7446f9f8ba8a03ab4cc545aa311214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reissuable</name>
      <anchorfile>dc/d26/structsatox_1_1asset_1_1AssetMetadata.html</anchorfile>
      <anchor>a40dd949b393496e0263a32613ace8f88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>frozen</name>
      <anchorfile>dc/d26/structsatox_1_1asset_1_1AssetMetadata.html</anchorfile>
      <anchor>a672955e9d46262370a87c4ad47c2cb94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additional_data</name>
      <anchorfile>dc/d26/structsatox_1_1asset_1_1AssetMetadata.html</anchorfile>
      <anchor>aee877510af7084dd8fc554f308caf01e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::AssetManager::AssetMetadata</name>
    <filename>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>afc50548374aa17f0e8386df15e5c1a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>symbol</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>aa7c67c073d304ec271263ef03f51e324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>a119b5bcf1599e6e4b226cfde33be0aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>issuer</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>aad8f172c0370986dd45612e6db888773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>a6b71a486fd5d818532367beaef6de205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AssetType</type>
      <name>type</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>a36874e39aeed67af7a27bcc3329fde07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalSupply</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>a519fcab1e8a3772a76ee122879f47ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>decimals</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>a83396fe7db4b5fef662574147c02a727</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>uri</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>ace4e67e64daf98d66999a67f95787172</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>a1227aff20783c16fc3c94668551d2e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>creationTime</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>a11f4120e668475258306b2890570866c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastModified</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>a0f0368c6bf8df698149b82e31465663d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>attributes</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>a763e64ef18df38f0bda58342e69ef1bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalData</name>
      <anchorfile>d8/d39/structsatox_1_1core_1_1AssetManager_1_1AssetMetadata.html</anchorfile>
      <anchor>af4fc72cd61afb5a197b858905a0466c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::asset::AssetOperationException</name>
    <filename>da/d96/classsatox_1_1asset_1_1AssetOperationException.html</filename>
    <base>satox::asset::AssetException</base>
    <member kind="function">
      <type></type>
      <name>AssetOperationException</name>
      <anchorfile>da/d96/classsatox_1_1asset_1_1AssetOperationException.html</anchorfile>
      <anchor>af3230e01c931d5436155d61c7bad110e</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetReissueRequest</name>
    <filename>db/d01/structsatox_1_1asset_1_1AssetReissueRequest.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>asset_name</name>
      <anchorfile>db/d01/structsatox_1_1asset_1_1AssetReissueRequest.html</anchorfile>
      <anchor>aed23e252156db5afefada068d1638a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner_address</name>
      <anchorfile>db/d01/structsatox_1_1asset_1_1AssetReissueRequest.html</anchorfile>
      <anchor>ac5b83ca60bdf8429a7718f595650d48c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>db/d01/structsatox_1_1asset_1_1AssetReissueRequest.html</anchorfile>
      <anchor>ad34327ee57f16622fae08f39c531d08f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>reissuable</name>
      <anchorfile>db/d01/structsatox_1_1asset_1_1AssetReissueRequest.html</anchorfile>
      <anchor>ab4535ec1a67d18d851f22aeafc1f27ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>transaction_id</name>
      <anchorfile>db/d01/structsatox_1_1asset_1_1AssetReissueRequest.html</anchorfile>
      <anchor>a5ddab4da5a99d5fe531a343aeee26cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>db/d01/structsatox_1_1asset_1_1AssetReissueRequest.html</anchorfile>
      <anchor>af6feb223c38a66ff075e812e8bccaeaa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetResult</name>
    <filename>d1/dcb/structsatox_1_1asset_1_1AssetResult.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>operation</name>
      <anchorfile>d1/dcb/structsatox_1_1asset_1_1AssetResult.html</anchorfile>
      <anchor>a90eac26e6ee54ea1a89d240cdaaec5ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d1/dcb/structsatox_1_1asset_1_1AssetResult.html</anchorfile>
      <anchor>a9a3a478d545d32260325192968bbd745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error_message</name>
      <anchorfile>d1/dcb/structsatox_1_1asset_1_1AssetResult.html</anchorfile>
      <anchor>a3354dffc5e778ab0cd2548bdbc857da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>d1/dcb/structsatox_1_1asset_1_1AssetResult.html</anchorfile>
      <anchor>accbcb79cb112fcc9dd91415d92190eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>d1/dcb/structsatox_1_1asset_1_1AssetResult.html</anchorfile>
      <anchor>a63865e8d06577cda94efce05e6410a37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetStats</name>
    <filename>d9/d72/structsatox_1_1asset_1_1AssetStats.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>totalOperations</name>
      <anchorfile>d9/d72/structsatox_1_1asset_1_1AssetStats.html</anchorfile>
      <anchor>ae0dcad3b51bd8050fa2a70a79b85af42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>successfulOperations</name>
      <anchorfile>d9/d72/structsatox_1_1asset_1_1AssetStats.html</anchorfile>
      <anchor>ae10ea845dc65cbd50fb9e61ff7451787</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>failedOperations</name>
      <anchorfile>d9/d72/structsatox_1_1asset_1_1AssetStats.html</anchorfile>
      <anchor>a647e27afc26a46e382ee1c06f25b55e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>activeAssets</name>
      <anchorfile>d9/d72/structsatox_1_1asset_1_1AssetStats.html</anchorfile>
      <anchor>a8286f0f27a58b8a47f5e6b5c5f4b438f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>frozenAssets</name>
      <anchorfile>d9/d72/structsatox_1_1asset_1_1AssetStats.html</anchorfile>
      <anchor>a88625cab88d0b82656c8ce448f6aa9d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>destroyedAssets</name>
      <anchorfile>d9/d72/structsatox_1_1asset_1_1AssetStats.html</anchorfile>
      <anchor>ab1221cb0710dd7be6f36cef10c0589c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastOperation</name>
      <anchorfile>d9/d72/structsatox_1_1asset_1_1AssetStats.html</anchorfile>
      <anchor>adfa0965604a87618f032dae96e28b6c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>averageOperationTime</name>
      <anchorfile>d9/d72/structsatox_1_1asset_1_1AssetStats.html</anchorfile>
      <anchor>a0f884c5e14143fc02494a0c4a0a14acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>d9/d72/structsatox_1_1asset_1_1AssetStats.html</anchorfile>
      <anchor>a3de5fb86be695c5de32e14ae00975a23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::AssetManager::AssetStats</name>
    <filename>d7/d07/structsatox_1_1core_1_1AssetManager_1_1AssetStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>totalAssets</name>
      <anchorfile>d7/d07/structsatox_1_1core_1_1AssetManager_1_1AssetStats.html</anchorfile>
      <anchor>a40dafa22141cbb38bd1933144b38bcbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>issuedAssets</name>
      <anchorfile>d7/d07/structsatox_1_1core_1_1AssetManager_1_1AssetStats.html</anchorfile>
      <anchor>ace7563f3764ce73d53b76e5f80d29e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>transferredAssets</name>
      <anchorfile>d7/d07/structsatox_1_1core_1_1AssetManager_1_1AssetStats.html</anchorfile>
      <anchor>ad6b38eec4b1343c9629d74c25fa98726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>burnedAssets</name>
      <anchorfile>d7/d07/structsatox_1_1core_1_1AssetManager_1_1AssetStats.html</anchorfile>
      <anchor>aaa1957b1c3c4d4601a0bc27cff465136</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>errorAssets</name>
      <anchorfile>d7/d07/structsatox_1_1core_1_1AssetManager_1_1AssetStats.html</anchorfile>
      <anchor>a10eaf317729804fce303ea63378f7faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>averageIssueTime</name>
      <anchorfile>d7/d07/structsatox_1_1core_1_1AssetManager_1_1AssetStats.html</anchorfile>
      <anchor>ab353e638f17909111d99fbb8be7c08ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>averageTransferTime</name>
      <anchorfile>d7/d07/structsatox_1_1core_1_1AssetManager_1_1AssetStats.html</anchorfile>
      <anchor>ae87863390fee6fe338164062b4efd8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>typeDistribution</name>
      <anchorfile>d7/d07/structsatox_1_1core_1_1AssetManager_1_1AssetStats.html</anchorfile>
      <anchor>aa6798f3aa02d8285a61d3ade637d4211</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>d7/d07/structsatox_1_1core_1_1AssetManager_1_1AssetStats.html</anchorfile>
      <anchor>a2aa65eeaaafdb76422c32832c9b409b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetTransferRequest</name>
    <filename>d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>asset_name</name>
      <anchorfile>d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest.html</anchorfile>
      <anchor>ab88e4728c2d5a6b15b5092f69ad153ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>from_address</name>
      <anchorfile>d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest.html</anchorfile>
      <anchor>a04a38cc7e591871d4caf3bfd59fb8c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>to_address</name>
      <anchorfile>d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest.html</anchorfile>
      <anchor>a70a0263d529af325d9db1a18faa426ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest.html</anchorfile>
      <anchor>ab100278db0cfce07aa41fff671117c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>transaction_id</name>
      <anchorfile>d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest.html</anchorfile>
      <anchor>acf82a9599ab7a88473350cc223d70528</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest.html</anchorfile>
      <anchor>ac393affac8a06b30ae6ce1c08264b90a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetVerificationResult</name>
    <filename>dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>valid</name>
      <anchorfile>dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult.html</anchorfile>
      <anchor>afbb9dab2b93f2f473830428b5d1a3d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error_message</name>
      <anchorfile>dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult.html</anchorfile>
      <anchor>a9133d61743b312d9f6b3482cb32aec4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult.html</anchorfile>
      <anchor>aa363ec09f5eda61347b97eac34d3d6f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>details</name>
      <anchorfile>dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult.html</anchorfile>
      <anchor>a59e5c3be001f7d7c3ff44326285a6165</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::BatchConfig</name>
    <filename>dc/d51/structsatox_1_1blockchain_1_1BatchConfig.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>max_batch_size</name>
      <anchorfile>dc/d51/structsatox_1_1blockchain_1_1BatchConfig.html</anchorfile>
      <anchor>ab890d44583a13d3e6f62eee921dff658</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>batch_timeout</name>
      <anchorfile>dc/d51/structsatox_1_1blockchain_1_1BatchConfig.html</anchorfile>
      <anchor>a395d383d9b7607e14282a28cdf0efccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_retries</name>
      <anchorfile>dc/d51/structsatox_1_1blockchain_1_1BatchConfig.html</anchorfile>
      <anchor>a3896d0db0d601ef0471e8ab7bb08c1db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::blockchain::Block</name>
    <filename>d1/d13/classsatox_1_1blockchain_1_1Block.html</filename>
    <member kind="function">
      <type></type>
      <name>Block</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>ae54af5fc6b4cef71cd664ffec30a38a8</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Block</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a941aa0d9cc895c53ba365b6f895fa890</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getHash</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a43c9af3526202aa09f99f3ce31538c2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPreviousHash</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a16629e94f2cb92da2852bea61d5bda50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::system_clock::time_point</type>
      <name>getTimestamp</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a67cdf032c19b426cdcf921b34b6acfa6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::shared_ptr&lt; Transaction &gt; &gt; &amp;</type>
      <name>getTransactions</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a089ec10f73c9b6e617161c639ba01ed9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getNonce</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a6f82e01821ba2da704ec1bd4a37379c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const nlohmann::json &amp;</type>
      <name>getMetadata</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a633f22b0f7c9b4aa93eb84cef5c4df08</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getDifficulty</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a15545daebdc7efe498c33db20ac9764d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getMerkleRoot</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a8b0f39216fa551a1f796ad2f5fe209be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getVersion</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a0053bb883bcf4d4cbcc89b65069946b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getHeight</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a443ef0d4a82925b9199a4b92c4cb1ebd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getMinerAddress</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a29bd77edf6757e371bfcf63a8b005d5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getBlockReward</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a28336513cb7e571a50a05fa9ce88e35b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getKawpowMixHash</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a5faef27e5006994d6472c3fb57a3eec1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getKawpowHeaderHash</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>ae93fdc006822931b7b3b05ce8b2369c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHash</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a608a6a50372cc5f9ef7cf19aec7d3646</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreviousHash</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>ad3fdb5a710fac63eac32550c29a2a74b</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimestamp</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>ab80dc98f2dca343d3ab14e4fe1f4d54b</anchor>
      <arglist>(std::chrono::system_clock::time_point timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransactions</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a915ea17d61c2ad81df702c0b78166eb9</anchor>
      <arglist>(const std::vector&lt; std::shared_ptr&lt; Transaction &gt; &gt; &amp;txs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNonce</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>ae1f62301b39ea942261c20b0a6712d93</anchor>
      <arglist>(int64_t nonce)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMetadata</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a7cf618417d75a6693840ece7ba79f701</anchor>
      <arglist>(const nlohmann::json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDifficulty</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a349b98ca3b645f32d198a428c2cf66ca</anchor>
      <arglist>(uint32_t difficulty)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMerkleRoot</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a73c903a6323b2f19e21539abe530c90a</anchor>
      <arglist>(const std::string &amp;root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVersion</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>aa2cb4fab361795968e17684be054efe8</anchor>
      <arglist>(uint32_t version)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeight</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a8f1d813215bbbdef98b3ef1160f39d3f</anchor>
      <arglist>(uint64_t height)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinerAddress</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a31f1a31a29436cf99b30d274bae54939</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBlockReward</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a77a969dc5466077d27500ab2786ed1b8</anchor>
      <arglist>(uint64_t reward)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKawpowMixHash</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>ac74d90e8d0432ff09be9b6f08eacab4d</anchor>
      <arglist>(const std::string &amp;mix_hash)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKawpowHeaderHash</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>aa5746f17cda55b0a4d55d1647409e6d4</anchor>
      <arglist>(const std::string &amp;header_hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateKawpowProof</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>aae1c4dda753a453f2599f71b61a50f79</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>calculateKawpowHeaderHash</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a6fd73c8dc052521fa1119411ee12e314</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>calculateKawpowMixHash</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>ae891e3f49a9be28772eb0048b193428b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyKawpowDifficulty</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a4e0b139e5f83673169c09764c17c7064</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>abe6656ac81e651e9d97abf8b9f5387f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyMerkleRoot</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a37ea3f70fa4bed7e9a649e5b96ce1d75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyTransactions</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a00e5ee339bba5fc023589728afd75863</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyTimestamp</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>ada78517b4ab8d12cbc25acd7facc2b99</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>a166ba0a39ede7ebb6b6ec7e90240dcf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Block &gt;</type>
      <name>fromJson</name>
      <anchorfile>d1/d13/classsatox_1_1blockchain_1_1Block.html</anchorfile>
      <anchor>ad2d583164682bf904ce8be6d9172d5b1</anchor>
      <arglist>(const nlohmann::json &amp;json)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::Block</name>
    <filename>d3/d32/structsatox_1_1core_1_1Block.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>d3/d32/structsatox_1_1core_1_1Block.html</anchorfile>
      <anchor>acc96ddf0647c56d97e163c93df461087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>previousHash</name>
      <anchorfile>d3/d32/structsatox_1_1core_1_1Block.html</anchorfile>
      <anchor>a03a9da87eaa38066af96279d5d13cef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>height</name>
      <anchorfile>d3/d32/structsatox_1_1core_1_1Block.html</anchorfile>
      <anchor>a576085684c29829db0f2300722d46069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>d3/d32/structsatox_1_1core_1_1Block.html</anchorfile>
      <anchor>a3ef808cb46d12c188d9e9a8d1a7249d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>transactions</name>
      <anchorfile>d3/d32/structsatox_1_1core_1_1Block.html</anchorfile>
      <anchor>a47646cbd8ec66f56e1b6ec9d3f5de83d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>merkleRoot</name>
      <anchorfile>d3/d32/structsatox_1_1core_1_1Block.html</anchorfile>
      <anchor>a20f218f8dcabebb1530c8baac5912d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>difficulty</name>
      <anchorfile>d3/d32/structsatox_1_1core_1_1Block.html</anchorfile>
      <anchor>ade9af694168a1cc75e499091561d81c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>nonce</name>
      <anchorfile>d3/d32/structsatox_1_1core_1_1Block.html</anchorfile>
      <anchor>a1292621eb47bd4280a68653d472a08de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::BlockchainManager::Block</name>
    <filename>d5/d40/structsatox_1_1core_1_1BlockchainManager_1_1Block.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>d5/d40/structsatox_1_1core_1_1BlockchainManager_1_1Block.html</anchorfile>
      <anchor>ac4c8272a119b952814950741b10abf00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>previousHash</name>
      <anchorfile>d5/d40/structsatox_1_1core_1_1BlockchainManager_1_1Block.html</anchorfile>
      <anchor>a2ada94fe7028075e819cade86e51dd19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>merkleRoot</name>
      <anchorfile>d5/d40/structsatox_1_1core_1_1BlockchainManager_1_1Block.html</anchorfile>
      <anchor>a4db0214ad860045685c404e2973b7121</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>height</name>
      <anchorfile>d5/d40/structsatox_1_1core_1_1BlockchainManager_1_1Block.html</anchorfile>
      <anchor>ae8f7d5ae505750c644f16917cb025639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>d5/d40/structsatox_1_1core_1_1BlockchainManager_1_1Block.html</anchorfile>
      <anchor>aae449ad9c20b0320e4bbed8fbdfbbd95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bits</name>
      <anchorfile>d5/d40/structsatox_1_1core_1_1BlockchainManager_1_1Block.html</anchorfile>
      <anchor>a47d9a25c4ef35d2ae7003e966c7bee1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>nonce</name>
      <anchorfile>d5/d40/structsatox_1_1core_1_1BlockchainManager_1_1Block.html</anchorfile>
      <anchor>a355ec86f4a1db3f818729c3dc2c46bd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>transactions</name>
      <anchorfile>d5/d40/structsatox_1_1core_1_1BlockchainManager_1_1Block.html</anchorfile>
      <anchor>abda1bc656b62e37d1603eb04d968ed17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d5/d40/structsatox_1_1core_1_1BlockchainManager_1_1Block.html</anchorfile>
      <anchor>a3b47aa6f7a0a027f9fd2f06468f3b684</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::Block</name>
    <filename>d9/d0b/classsatox_1_1database_1_1Block.html</filename>
    <base>satox::database::DataModel</base>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>aeaac0c3d6e209f8b52e4b71e020b36b4</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fromJson</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a5065a5fa717bec6f9514641f82a53955</anchor>
      <arglist>(const nlohmann::json &amp;j) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTableName</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a283c069ef2fea858c45b5b8a7a06946f</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a1e3dd0759a9978440a9e29fb14ec8548</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>previousHash</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a5921746ac71a42b22ae21f459708a860</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>height</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a8c09860981276b84654e4ac3215f075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>ab0d76f5869ec70debc62c444f3c3fd03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>miner</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>ab2e4e0b1c681dd837f8e64419cfc3d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>difficulty</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a89cf6f016b34f349c962a6796bc5203b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>merkleRoot</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a694779eb85da6ccabef3999f5d54137d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>transactions</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a17c27779d5d269536a58cf6c18d533c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>size</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>aacb0334be123a58a5fd509954874442a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>weight</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a592f3180793c563639bd2f481305ec6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a89e8844de632c5d6cdcbcc9fc5408b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>bits</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a009ca9c0834da01aca6b37cf01455283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>nonce</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a4e354af700d2b78cc9dfbef68bbd6a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>chainwork</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>a76a547de3b325b9643369323f724f1d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isMainChain</name>
      <anchorfile>d9/d0b/classsatox_1_1database_1_1Block.html</anchorfile>
      <anchor>afe18deea0d858e38747a19ea530a24b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::blockchain::Blockchain</name>
    <filename>d3/d7b/classsatox_1_1blockchain_1_1Blockchain.html</filename>
    <member kind="function">
      <type></type>
      <name>Blockchain</name>
      <anchorfile>d3/d7b/classsatox_1_1blockchain_1_1Blockchain.html</anchorfile>
      <anchor>a75a5c1114c6919767926d060529a075d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Blockchain</name>
      <anchorfile>d3/d7b/classsatox_1_1blockchain_1_1Blockchain.html</anchorfile>
      <anchor>a823f09962fabb620b663394da56f3e17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d3/d7b/classsatox_1_1blockchain_1_1Blockchain.html</anchorfile>
      <anchor>a76b34be126f02c32b3e1c8f2fd809bee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addBlock</name>
      <anchorfile>d3/d7b/classsatox_1_1blockchain_1_1Blockchain.html</anchorfile>
      <anchor>a81e5aa24af34501095da67a34b590030</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateChain</name>
      <anchorfile>d3/d7b/classsatox_1_1blockchain_1_1Blockchain.html</anchorfile>
      <anchor>afe7e6224e4fa46c08d108d2caf06409b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLatestBlockHash</name>
      <anchorfile>d3/d7b/classsatox_1_1blockchain_1_1Blockchain.html</anchorfile>
      <anchor>a5244c2c6b377c14ec5a72caa345babbc</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::BlockchainConfig</name>
    <filename>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a981c53be7384cea37c13152971168b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLogging</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a2aa8f98bd6b9570192aa6059b50d93c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logPath</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a1e6e105b580edb4436b369ff611aadf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NetworkConfig</type>
      <name>networkConfig</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>abc33af61e68653b478489bf5490a2def</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxConnections</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>ab9a1ffb24a2a1ed1b5cfd2c0b6ecf600</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>timeout</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a3c831b69d30d0c9a83100bf2e751cfc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableKawpowValidation</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a8c3e837c22f7726c6d1062ddec30b726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalConfig</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a0fe4102cda72232ac0a98c1f6bc1e49c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>network</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a6af95a75789cf5fc0c0ebda389d25725</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>data_dir</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>aa2e2ea75f03752d0a88b2f4d8b49c54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpc_endpoint</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>ad2e834b59432ea07e162bff173cce305</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpc_username</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>afe1034057f43fae2778a4c96845287a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpc_password</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>ad0f60bdff14ecf280bc7513b974c56ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout_ms</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a30d4e4d759d16bff21019ba40da10561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_mining</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a117bf7ad521c13f3dd4a9e7d061226d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>mining_threads</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a3d06a0c66b2dc330936511a53b57b7f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_sync</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a644503a14708c6105c15535bdcd696a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>sync_interval_ms</name>
      <anchorfile>d3/df0/structsatox_1_1blockchain_1_1BlockchainConfig.html</anchorfile>
      <anchor>a86b74c6b7b32763b7f87e0609aaf235b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::blockchain::BlockchainException</name>
    <filename>d4/da1/classsatox_1_1blockchain_1_1BlockchainException.html</filename>
    <member kind="function">
      <type></type>
      <name>BlockchainException</name>
      <anchorfile>d4/da1/classsatox_1_1blockchain_1_1BlockchainException.html</anchorfile>
      <anchor>a162c796694088b554868b68933c9334e</anchor>
      <arglist>(BlockchainErrorCode code, const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>d4/da1/classsatox_1_1blockchain_1_1BlockchainException.html</anchorfile>
      <anchor>acd121d0a79c4274f8b53abb714df7d32</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>BlockchainErrorCode</type>
      <name>code</name>
      <anchorfile>d4/da1/classsatox_1_1blockchain_1_1BlockchainException.html</anchorfile>
      <anchor>a462bad1086f8da80efeeeada908cf251</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>message</name>
      <anchorfile>d4/da1/classsatox_1_1blockchain_1_1BlockchainException.html</anchorfile>
      <anchor>ace440897abb51f482646b2c14322c379</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockchainException</name>
      <anchorfile>d4/da1/classsatox_1_1blockchain_1_1BlockchainException.html</anchorfile>
      <anchor>a3f067b22d10beba58861bedfcbd8b94d</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::BlockchainHealth</name>
    <filename>d4/d6a/structsatox_1_1blockchain_1_1BlockchainHealth.html</filename>
    <member kind="variable">
      <type>BlockchainStatus</type>
      <name>status</name>
      <anchorfile>d4/d6a/structsatox_1_1blockchain_1_1BlockchainHealth.html</anchorfile>
      <anchor>a46dd87b61cd0168545c0a0e2f3c5bcc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>healthy</name>
      <anchorfile>d4/d6a/structsatox_1_1blockchain_1_1BlockchainHealth.html</anchorfile>
      <anchor>a4208de12697bfa5b45485fa67cf9e288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>d4/d6a/structsatox_1_1blockchain_1_1BlockchainHealth.html</anchorfile>
      <anchor>a9f5779aa7b58cb41d751d711aaf82d9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastCheck</name>
      <anchorfile>d4/d6a/structsatox_1_1blockchain_1_1BlockchainHealth.html</anchorfile>
      <anchor>a5c5c8c9984543e1988cf99a61df43584</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>consecutiveFailures</name>
      <anchorfile>d4/d6a/structsatox_1_1blockchain_1_1BlockchainHealth.html</anchorfile>
      <anchor>acb3983d0801fbd2bd0c5761d17547a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>details</name>
      <anchorfile>d4/d6a/structsatox_1_1blockchain_1_1BlockchainHealth.html</anchorfile>
      <anchor>abd8817bd49c9cf047845681b46eee9cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::BlockchainManager::BlockchainInfo</name>
    <filename>db/d5b/structsatox_1_1core_1_1BlockchainManager_1_1BlockchainInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>network</name>
      <anchorfile>db/d5b/structsatox_1_1core_1_1BlockchainManager_1_1BlockchainInfo.html</anchorfile>
      <anchor>a527d24203b63314b07531aea649de887</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>height</name>
      <anchorfile>db/d5b/structsatox_1_1core_1_1BlockchainManager_1_1BlockchainInfo.html</anchorfile>
      <anchor>aeb403f31fcd20474d7646d7c4f3a7b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>bestBlockHash</name>
      <anchorfile>db/d5b/structsatox_1_1core_1_1BlockchainManager_1_1BlockchainInfo.html</anchorfile>
      <anchor>a67f64e83fe1c48c5bf6f407e7d7f480e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>difficulty</name>
      <anchorfile>db/d5b/structsatox_1_1core_1_1BlockchainManager_1_1BlockchainInfo.html</anchorfile>
      <anchor>a97f9e205b5cf3e677f93936e1dcd7a77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>networkHashrate</name>
      <anchorfile>db/d5b/structsatox_1_1core_1_1BlockchainManager_1_1BlockchainInfo.html</anchorfile>
      <anchor>a9488d0806d7a78f933e6edb8d8be8433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mempoolSize</name>
      <anchorfile>db/d5b/structsatox_1_1core_1_1BlockchainManager_1_1BlockchainInfo.html</anchorfile>
      <anchor>af91f63cf9bac7f90b375c78d221a84c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mempoolTransactions</name>
      <anchorfile>db/d5b/structsatox_1_1core_1_1BlockchainManager_1_1BlockchainInfo.html</anchorfile>
      <anchor>a1fe3a6cf1624a74ced0aa6b011cb6151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastBlockTime</name>
      <anchorfile>db/d5b/structsatox_1_1core_1_1BlockchainManager_1_1BlockchainInfo.html</anchorfile>
      <anchor>a0ecc778acfba35a0423e13cb2e1cee2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalInfo</name>
      <anchorfile>db/d5b/structsatox_1_1core_1_1BlockchainManager_1_1BlockchainInfo.html</anchorfile>
      <anchor>aa97f7ba306efba1cb5c1de2fc7199a4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::blockchain::BlockchainInitializationException</name>
    <filename>d5/dcc/classsatox_1_1blockchain_1_1BlockchainInitializationException.html</filename>
    <base>satox::blockchain::BlockchainException</base>
    <member kind="function">
      <type></type>
      <name>BlockchainInitializationException</name>
      <anchorfile>d5/dcc/classsatox_1_1blockchain_1_1BlockchainInitializationException.html</anchorfile>
      <anchor>ab160d18a5532e5367fa4ea13028e249f</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::blockchain::BlockchainManager</name>
    <filename>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</filename>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const BlockInfo &amp;)&gt;</type>
      <name>BlockCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>adb29bd27f3fef28ea0064b2cb03e11c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const TransactionInfo &amp;)&gt;</type>
      <name>TransactionCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a4b477d2ae333be5ecb1b1b158933bb4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const MiningInfo &amp;)&gt;</type>
      <name>MiningCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ade0f493d74ccf59e4991ab4b645be4cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a17b43ce4c0034d12e0d44efe912940f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, uint32_t)&gt;</type>
      <name>ProgressCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a2b843015ea7dae5946a9f08ddba70dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockchainManager</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ae924922363d63778d2030b3e9e35cff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BlockchainManager</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>af7792766ff08e2ff167b91bc02148084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ac4f535a2da5088a2a6cd507f8e0e58fb</anchor>
      <arglist>(const BlockchainConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a70f9089963ded91b406a35bb7d57fbb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a67b0e8626d472e1244585519e3d02c69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a70c5e84470a6221f81ad8b77fb422bd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a3872b9049ac1ad397c95f1cb3a02f328</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ac8f1f5662757e561f69e4b711e31f7f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Block &gt;</type>
      <name>getLatestBlock</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a94142b0ce6aa5a59407e5aaaa99c3d53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Block &gt;</type>
      <name>getBlockByHash</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a5e69eb20b1a8b0c7402b771bb2c909b8</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Block &gt;</type>
      <name>getBlockByHeight</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a8cdbfc531b042812a0653dc1052a5b43</anchor>
      <arglist>(uint64_t height)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateBlock</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a7214c6c6a017de92c1660fb561f60a49</anchor>
      <arglist>(const std::shared_ptr&lt; Block &gt; &amp;block)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getBlockCount</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a13f6c5967ba77c273a89242924513d49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Transaction &gt;</type>
      <name>createTransaction</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>aab3adf956c739a9aeaa23ef3da40f13e</anchor>
      <arglist>(const std::string &amp;from, const std::string &amp;to, double value, const std::vector&lt; uint8_t &gt; &amp;data={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastTransaction</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>aea9e1b8e7dd0d451f2d8e05611ee0f84</anchor>
      <arglist>(const std::shared_ptr&lt; Transaction &gt; &amp;tx)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Transaction &gt;</type>
      <name>getTransaction</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ad4e6d5bec15ef94969d2e75141a1f2e9</anchor>
      <arglist>(const std::string &amp;tx_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTransactionStatus</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ad39049321df4312bfb1a813a9320f9e7</anchor>
      <arglist>(const std::string &amp;tx_hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateTransaction</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>aa13575ede3dd34090305f95c9aba7f84</anchor>
      <arglist>(const std::shared_ptr&lt; Transaction &gt; &amp;tx)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getChainHeight</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>afcd2adeeffb14134c3ece22553359c9c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBalance</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a6e1c9e23c890969b0c17b5ea603a7b1c</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getNonce</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a0da0121cf8dc2c3fde7dc2e8ac7cf3e4</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getChainState</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a11673a27969c4fce4bcb180f05495dbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChainSynced</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a634cdd84546938dc015fb92bac27ba7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getConnectedPeers</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a11554a03729ef47fd7c88a5cc49c2d49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addPeer</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a2324e9685bed18948eff06b53f7645a0</anchor>
      <arglist>(const std::string &amp;peer_address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removePeer</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a79489cbb9feb8047c7b2ebfb7b95056e</anchor>
      <arglist>(const std::string &amp;peer_address)</arglist>
    </member>
    <member kind="function">
      <type>BlockchainConfig</type>
      <name>getConfig</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a4325ef39da38e1a88e3f58014d286bc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateConfig</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>aa2f48ffe5bb84e92d3a7c47fe0b1b57c</anchor>
      <arglist>(const BlockchainConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateConfig</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>af918620749530d959d8661f050a0e806</anchor>
      <arglist>(const BlockchainConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>NetworkConfig</type>
      <name>getNetworkConfig</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>aedc917059f48edf5e935397fccd525b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNetworkConfig</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a276f9c672ca1cce19c60c7641073ec2d</anchor>
      <arglist>(const NetworkConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>BlockchainStats</type>
      <name>getStats</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a7c203ba2e0079cc4ff7f3c662225fa35</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a43981076ad77e8fa952366331cd96def</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>af3e8d782c748ee6f0b3a730ec57760c3</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerBlockCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a5de741ea5fa38e34108ecd84b03cdcca</anchor>
      <arglist>(BlockCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerTransactionCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a65c0ccd0415642c540587445dc67d93e</anchor>
      <arglist>(TransactionCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a9b4a9d7351030996af442398dcce5232</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterBlockCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a70b815ee32bd7693cf4b3add0430d731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterTransactionCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a2977dbff3af8e9ab83d1c3f58910f0f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a5eb1d81942b3fca7c0acb1d429128579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a33424b2893bdf25695ebc06770d2a76e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a7cfccff25c57f3a0ba8568bca773174c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>healthCheck</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a0bd06148e36763e154ae77bb3d0ca4a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getHealthStatus</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a9514657601158e1710341a184e66d5de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BlockchainState</type>
      <name>getState</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a788115be7483ee88f899c7699b7459cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ad0d6e6bd5459998a1768052477df99d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockchainManager</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ae924922363d63778d2030b3e9e35cff1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BlockchainManager</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>af7792766ff08e2ff167b91bc02148084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ac4f535a2da5088a2a6cd507f8e0e58fb</anchor>
      <arglist>(const BlockchainConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a70f9089963ded91b406a35bb7d57fbb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a33424b2893bdf25695ebc06770d2a76e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; BlockInfo &gt;</type>
      <name>getBlockInfo</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a5ccfc1298c7757d6cfffac78406e8aa5</anchor>
      <arglist>(const std::string &amp;block_hash) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; BlockInfo &gt;</type>
      <name>getBlockByHeight</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>aeb036998005d4a31bd8d293fa34e9c39</anchor>
      <arglist>(uint32_t height) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getBlockHashes</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ab1d66714ad83dcb677ed2b1860f71299</anchor>
      <arglist>(uint32_t start_height, uint32_t end_height) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateBlock</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ac7965e19669925fd313c63ed5cbac615</anchor>
      <arglist>(const std::string &amp;block_hash) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastBlock</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a4f8ab81fee50af8e24bf39afaaaeb42a</anchor>
      <arglist>(const std::string &amp;block_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; TransactionInfo &gt;</type>
      <name>getTransactionInfo</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ad82f160886dc67389eec5271cf3c3d56</anchor>
      <arglist>(const std::string &amp;txid) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getBlockTransactions</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a959711c7ab22d1126bc7e6342e74a5d9</anchor>
      <arglist>(const std::string &amp;block_hash) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getAddressTransactions</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a453350e7c36653716262df3426a8b5e3</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateTransaction</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>aaaa72d3c6b5d34a8637e153f68a76e3f</anchor>
      <arglist>(const std::string &amp;txid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastTransaction</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a8187dbb72a2bba27a6b28f44f3b7e300</anchor>
      <arglist>(const std::string &amp;txid)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getMempoolTransactions</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a6026620d05517a06a7aab1461e4094b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startMining</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a5d5747fd9975327114d9e434fa52a319</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stopMining</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ac7f024e3dd2e24e3711e6f117b41cb02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMining</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>aa2172cfa212b593dbb846b9acabb860a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; MiningInfo &gt;</type>
      <name>getMiningInfo</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>aca6d737bf1223fecc44248419bf1d1e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setMiningThreads</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ac811f3499e49aab11ba316b957c0cefe</anchor>
      <arglist>(uint32_t threads)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getMiningThreads</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ab29f0d7315d44b509ba8e58b69dd9a50</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startSync</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a2fb645af34cda3029ad6fdafd1f1260b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stopSync</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ab59add224265bb187de2cf3ddff06178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSyncing</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a1b5812de35c4608e8d2ab19c1b292944</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getCurrentHeight</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a404028a7ffb557a1988c434f9362b5d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>syncToHeight</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>acfcb05acaee46e3d17b39daea46f8047</anchor>
      <arglist>(uint32_t height)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyChain</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a7c0e6b54a866acc9033ef84148dfe9f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getBalance</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a46da743589a16b7b8683c0fc6becb7c4</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getTotalSupply</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ae4ebf9425d5063ef4fe7fde24ccf0786</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>getDifficulty</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a5219d3a633bd85b8eee09ec90319efb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; BlockchainStatistics &gt;</type>
      <name>getStatistics</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a00520744200d6c507e306cda4b5f3685</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerBlockCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a5de741ea5fa38e34108ecd84b03cdcca</anchor>
      <arglist>(BlockCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerTransactionCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a65c0ccd0415642c540587445dc67d93e</anchor>
      <arglist>(TransactionCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerMiningCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a8f21f37123ef86ee3d1ee01335601f29</anchor>
      <arglist>(MiningCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a9b4a9d7351030996af442398dcce5232</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerProgressCallback</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a6fb409d9f8f1b97b322863f7c449e5bf</anchor>
      <arglist>(ProgressCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCacheConfig</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a252490f998d0612bddd0a11d8273641a</anchor>
      <arglist>(const CacheConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionPoolConfig</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>af1d974a5aacee17c72b3d4925cce5d21</anchor>
      <arglist>(const ConnectionPoolConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatchConfig</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ac896606f7960645a1e611464cc262cc3</anchor>
      <arglist>(const BatchConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a5db67661b77b21680c98ea7ca332ce7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCacheSize</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a0d94101ea4970bac8d18549207a9ab47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getConnectionPoolSize</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a3a6a1c31ff18757539b1660ae0e9816d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getBatchSize</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a7cb8c8840c87785908c9837a09952025</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorRecoveryConfig</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a0755a501b2de09a6ab0d291b0e242fc3</anchor>
      <arglist>(const ErrorRecoveryConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>recoverFromError</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a6203d411b4af230c2495a2c069f57cf2</anchor>
      <arglist>(const std::string &amp;operation_id)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; RecoveryOperation &gt;</type>
      <name>getRecoveryHistory</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a172fca48b1df34c6bb727315a9ea6534</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearRecoveryHistory</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ac4256e2dd76da344f71db8bc9ad2b6fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecoveryInProgress</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>ada488bc19fae381485de68dde24b8bc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastRecoveryError</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a56a2490ec1071538f4a2976256a7aef2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BlockchainManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>df/d80/classsatox_1_1blockchain_1_1BlockchainManager.html</anchorfile>
      <anchor>a2b48cfb229cbc6a92f419674388ef9df</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::BlockchainManager</name>
    <filename>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</filename>
    <class kind="struct">satox::core::BlockchainManager::Block</class>
    <class kind="struct">satox::core::BlockchainManager::BlockchainInfo</class>
    <class kind="struct">satox::core::BlockchainManager::Config</class>
    <class kind="struct">satox::core::BlockchainManager::Stats</class>
    <class kind="struct">satox::core::BlockchainManager::Transaction</class>
    <member kind="enumeration">
      <type></type>
      <name>BlockchainState</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a6649cb1aa60bb52317efff1fa3e50c56</anchor>
      <arglist></arglist>
      <enumvalue file="d3/d13/classsatox_1_1core_1_1BlockchainManager.html" anchor="a6649cb1aa60bb52317efff1fa3e50c56add652546039b18970b8dcf2cff824268">UNINITIALIZED</enumvalue>
      <enumvalue file="d3/d13/classsatox_1_1core_1_1BlockchainManager.html" anchor="a6649cb1aa60bb52317efff1fa3e50c56a86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="d3/d13/classsatox_1_1core_1_1BlockchainManager.html" anchor="a6649cb1aa60bb52317efff1fa3e50c56adee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d3/d13/classsatox_1_1core_1_1BlockchainManager.html" anchor="a6649cb1aa60bb52317efff1fa3e50c56a9a14f95e151eec641316e7c784ce832d">CONNECTING</enumvalue>
      <enumvalue file="d3/d13/classsatox_1_1core_1_1BlockchainManager.html" anchor="a6649cb1aa60bb52317efff1fa3e50c56aa5afd6edd5336d91316964e493936858">CONNECTED</enumvalue>
      <enumvalue file="d3/d13/classsatox_1_1core_1_1BlockchainManager.html" anchor="a6649cb1aa60bb52317efff1fa3e50c56a99c8ce56e7ab246445d3b134724428f3">DISCONNECTED</enumvalue>
      <enumvalue file="d3/d13/classsatox_1_1core_1_1BlockchainManager.html" anchor="a6649cb1aa60bb52317efff1fa3e50c56af0be1f77b2d12fe3d6424fbf9eecc109">SYNCING</enumvalue>
      <enumvalue file="d3/d13/classsatox_1_1core_1_1BlockchainManager.html" anchor="a6649cb1aa60bb52317efff1fa3e50c56a5edb4049492eb3b6ea1ca32a48252f47">SYNCED</enumvalue>
      <enumvalue file="d3/d13/classsatox_1_1core_1_1BlockchainManager.html" anchor="a6649cb1aa60bb52317efff1fa3e50c56abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="d3/d13/classsatox_1_1core_1_1BlockchainManager.html" anchor="a6649cb1aa60bb52317efff1fa3e50c56ab9984206799a7f9fe4bd1b6c18db8112">SHUTDOWN</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Transaction &amp;)&gt;</type>
      <name>TransactionCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a39f000dcc42b7d0ae9001a7aa2834d04</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Block &amp;)&gt;</type>
      <name>BlockCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a8e25ac83446f21fc64562edab91f8d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(BlockchainState)&gt;</type>
      <name>StateCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a3371de194705acaad40145b20965ae94</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>afc0356415804070ce0b1a699bfe8f8a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockchainManager</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a1cd937fe24ab178e02e77a1997ba3ffe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BlockchainManager</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a8e502d28d3d793a37d07cb7ef0b8575f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockchainManager</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a3b274d66bc37280dd44b3552a4e9526c</anchor>
      <arglist>(const BlockchainManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>BlockchainManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a7e3e44fc30f6040202442a42672903ab</anchor>
      <arglist>(const BlockchainManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockchainManager</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>acdf739e4b8c1130509c5ca8d251efb84</anchor>
      <arglist>(BlockchainManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>BlockchainManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a4c2af646e7d2271ccd79921b0ad156e7</anchor>
      <arglist>(BlockchainManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>af9a1cdd62c7b0e7cba7b4da9a8481f1d</anchor>
      <arglist>(const std::string &amp;network=&quot;mainnet&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>acd682c86cc35221c364b8ab62a915f8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isChainValid</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>adde48e0404662b535e216986be94c552</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateBlock</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a5721bb59f4e2175eb46efe2dc3bfbe29</anchor>
      <arglist>(const Block &amp;block) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateChain</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ac60e7195d84619e74d21bad7f2a6c847</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateChainState</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>adf0779a713acca06e43a2215a3febd4e</anchor>
      <arglist>(const Block &amp;block)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Block &gt;</type>
      <name>getBlockRange</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a95e92e13180ea5006d4d13da0c8fd29c</anchor>
      <arglist>(uint64_t startHeight, uint64_t endHeight) const</arglist>
    </member>
    <member kind="function">
      <type>ChainState</type>
      <name>getChainState</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>af056ee01c0f4f93b8c07c21e7f6d1dde</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadChainState</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a98b56cc88aa84c8d9583c231105d7a9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getStateDirectory</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ab45380620df2c9afbe5abd1037f93461</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLatestBlock</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a1e40de940ae539f475456ec854766958</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getBlockByHash</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>acc25766feebf9b30bf78ca58761e85c8</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTransactionByHash</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>af37eae14f190221d5ccf915be5898a42</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getBalance</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a614cccce9d4e58f5917e26f91e60d677</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sendTransaction</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a677bd02b0990441230434505584315d7</anchor>
      <arglist>(const std::string &amp;transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>connectToNetwork</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ac63694c56e9ab0021e83e726185c8bb6</anchor>
      <arglist>(const std::string &amp;nodeAddress, uint16_t port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectFromNetwork</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a8ab2f1bc6736e5806d97be91035071ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a1b4ad64f51d28744324e523192230282</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startSync</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a908c704ff24d0d1e2b7f869127a61f89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopSync</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a067810e63719681768889d5e836a2dea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSyncing</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ae7df535ea2f3a1fcbcd93a6d27c96cec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSyncCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>afed9fbf64a9cac83ab69b0f01de74eac</anchor>
      <arglist>(std::function&lt; void(const Block &amp;)&gt; callback)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getPeers</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ad972bb801d5d39bd5cb947c56532cba2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateTransaction</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a476a68ba0565b4e3a85e9f91292cf599</anchor>
      <arglist>(const std::string &amp;transaction) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockchainManager</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a1cd937fe24ab178e02e77a1997ba3ffe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BlockchainManager</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a8e502d28d3d793a37d07cb7ef0b8575f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a2afcaed96cc0ff2842f581383e053796</anchor>
      <arglist>(const nlohmann::json &amp;config=nlohmann::json::object())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shutdown</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a0c818d043aae54c97498b09b5529da68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a714d29ae515f7d2387e78be6a91402fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a1d6db3bba6f6925641e8e5981ce613c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateConfig</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ab60db607ea56711edb626d076e1c1c3d</anchor>
      <arglist>(const Config &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a15ad53be77f64e2640af7d92463024a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>af21732ab436fd79885c2cf31e819cd09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a1b4ad64f51d28744324e523192230282</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>getBlockHash</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a72b1331702260cdfb870ba250cf803a6</anchor>
      <arglist>(uint64_t height)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; uint64_t &gt;</type>
      <name>getBlockHeight</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a87af1d972d888552f6561baf4e147968</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; nlohmann::json &gt;</type>
      <name>getBlock</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>aff3db3648ffdaa50f8709464e625fa30</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; nlohmann::json &gt;</type>
      <name>getBlockByHeight</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a78ad1d9bea729c40f83438936fd78767</anchor>
      <arglist>(uint64_t height)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getBestBlockHeight</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a359dde93f3e2dc7d9c0bbda8c3def9eb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getBestBlockHash</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ad26e5f2cbbda9c4b4fe83d3f068dc941</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getBlockByHeight</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a0789512e2731b9ff8435c2c01df7bd1e</anchor>
      <arglist>(uint64_t height, Block &amp;block) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Block &gt;</type>
      <name>getBlocks</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a1df080a5864153df124e0ec9f084414d</anchor>
      <arglist>(uint64_t startHeight, uint64_t endHeight) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; nlohmann::json &gt;</type>
      <name>getTransaction</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ac781df97e8829cee45ea5aaac0d6c42f</anchor>
      <arglist>(const std::string &amp;txid)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>sendTransaction</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>add8038a13321f3ac4d273150e109a9b6</anchor>
      <arglist>(const std::string &amp;hex)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>createTransaction</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a00a9ce7c62ae5dc66d397c87a75eb961</anchor>
      <arglist>(const std::vector&lt; Input &gt; &amp;inputs, const std::vector&lt; Output &gt; &amp;outputs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateTransaction</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>adbe35fb3d8d25148054763bb83dab1af</anchor>
      <arglist>(const std::string &amp;hex)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getTransaction</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ab61addae1c9d7cb0d80ac6346c8de2a8</anchor>
      <arglist>(const std::string &amp;txid, Transaction &amp;transaction) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getTransactions</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a1456e137f6c09a796974af32744998a7</anchor>
      <arglist>(uint64_t startHeight, uint64_t endHeight) const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getConnectionCount</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a3b5d39d19935aff5f11661ba893c26fe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>getPeerInfo</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>af9a1828cefc711f147bd581d829ffa00</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addNode</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a03772f026abcaeea8e28b41a186321ac</anchor>
      <arglist>(const std::string &amp;address, bool add_to_banlist=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeNode</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a4348bdaa5100a5ebc283e6387c09be30</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startMining</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a7a37a5eac1705e51f473689e55e3cb17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stopMining</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a28e80943cd839f12498d9196b1798af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMining</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a6d99a9f4fdb6096bba5739ad119245fa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>getMiningInfo</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a1286c9986ff7f24847e9a13b846c9915</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerTransactionCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>abbe7ca51b2ac1a7f711ac0eba45a77ec</anchor>
      <arglist>(TransactionCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerBlockCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a2625a70fae1ce8fb860f543047c9ea1a</anchor>
      <arglist>(BlockCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerStateCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a6a3700ea7468bd68599e51b236307906</anchor>
      <arglist>(StateCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ad4ad680ede3eb9d6a6a219f74b218a5a</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterBlockCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a980306ec5e409d228ec5a7c22833ab9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterTransactionCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a9f139aa76a2fe42a6b46bfc300d73bec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterStateCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a1226504c3165ab7ee669355d18751fea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ad33a1d247bc15a46b9f28984fdd48a80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stats</type>
      <name>getStats</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a78396b62337b8730f086d59563e51d32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a2ab012a9aa6f31e667621723001a12fc</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ad86cb064401e230d9fe3b331bd397d42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BlockchainState</type>
      <name>getState</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a3d6bf88885d2a15bba0dc0693b9cb15d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BlockchainInfo</type>
      <name>getInfo</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a93a6035adc268a09db4bf101a0479c64</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a3b3c2ad31ece5922e496ac8a302ea216</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getCurrentHeight</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>abed590952804294742c65a5551457ac7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getCurrentHeightInternal</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ad15a702c0147bd3f17040208791b868a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getDifficulty</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>ab9d2a726ede3e965383a24d45fffad77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getNetworkHashRate</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a7a35c00d5fc8dae9fecc041217d28bbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BlockchainManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d3/d13/classsatox_1_1core_1_1BlockchainManager.html</anchorfile>
      <anchor>a6e7da1dbe56feba80275276fa212883b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::blockchain::BlockchainOperationException</name>
    <filename>d5/dd7/classsatox_1_1blockchain_1_1BlockchainOperationException.html</filename>
    <base>satox::blockchain::BlockchainException</base>
    <member kind="function">
      <type></type>
      <name>BlockchainOperationException</name>
      <anchorfile>d5/dd7/classsatox_1_1blockchain_1_1BlockchainOperationException.html</anchorfile>
      <anchor>a5dc1f20bf8529d212d52fcaf3bad7156</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::BlockchainResult</name>
    <filename>d6/d11/structsatox_1_1blockchain_1_1BlockchainResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d6/d11/structsatox_1_1blockchain_1_1BlockchainResult.html</anchorfile>
      <anchor>a6fd839871e4811fb1e8925c77af2b666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d6/d11/structsatox_1_1blockchain_1_1BlockchainResult.html</anchorfile>
      <anchor>a97df8319396e8344c6b5e9789980865b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>d6/d11/structsatox_1_1blockchain_1_1BlockchainResult.html</anchorfile>
      <anchor>a5015bed264c82e9708045093ca287749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>duration</name>
      <anchorfile>d6/d11/structsatox_1_1blockchain_1_1BlockchainResult.html</anchorfile>
      <anchor>a6afc5a15ea92a3f9fbfceae70309c16e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::BlockchainStatistics</name>
    <filename>db/d1e/structsatox_1_1blockchain_1_1BlockchainStatistics.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>current_height</name>
      <anchorfile>db/d1e/structsatox_1_1blockchain_1_1BlockchainStatistics.html</anchorfile>
      <anchor>a8b590124a5f917a536f4f632e8c87d52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>total_blocks</name>
      <anchorfile>db/d1e/structsatox_1_1blockchain_1_1BlockchainStatistics.html</anchorfile>
      <anchor>ac3b7a0c2c0a74923c9e513f954a34846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>total_transactions</name>
      <anchorfile>db/d1e/structsatox_1_1blockchain_1_1BlockchainStatistics.html</anchorfile>
      <anchor>a8e5eaa58340a0c2e5640aee0e484eec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>total_supply</name>
      <anchorfile>db/d1e/structsatox_1_1blockchain_1_1BlockchainStatistics.html</anchorfile>
      <anchor>a8acffec44dbb6529b37bc1d3e2ab7101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>difficulty</name>
      <anchorfile>db/d1e/structsatox_1_1blockchain_1_1BlockchainStatistics.html</anchorfile>
      <anchor>a7128e6bed909658ad38cf5cd6cbf98dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_sync_time</name>
      <anchorfile>db/d1e/structsatox_1_1blockchain_1_1BlockchainStatistics.html</anchorfile>
      <anchor>ab5eebb880272d1cdbe12fcc106865fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>db/d1e/structsatox_1_1blockchain_1_1BlockchainStatistics.html</anchorfile>
      <anchor>a58443e309f873b92e837e7a91a626725</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::BlockchainStats</name>
    <filename>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>totalOperations</name>
      <anchorfile>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</anchorfile>
      <anchor>ac6cd38288e32706a2078ef8f4721b7bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>successfulOperations</name>
      <anchorfile>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</anchorfile>
      <anchor>ac4fdb2fb37ea22c55d76fb857c1566b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>failedOperations</name>
      <anchorfile>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</anchorfile>
      <anchor>a03f275b4f1f249281c2a75a9e370d842</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>activeConnections</name>
      <anchorfile>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</anchorfile>
      <anchor>a23daaf84929327db2bddfac4dc6c474e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>currentHeight</name>
      <anchorfile>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</anchorfile>
      <anchor>a5d843d1a9923fe73321416b0c91893ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalBlocks</name>
      <anchorfile>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</anchorfile>
      <anchor>a63194fe31fb36f4e599422af82ccd4b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalTransactions</name>
      <anchorfile>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</anchorfile>
      <anchor>a79669ebd707eb6fe6ef8500ca08ed68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastOperation</name>
      <anchorfile>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</anchorfile>
      <anchor>a46a268fb6176ccb1a87ebf61e9da9e9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>averageOperationTime</name>
      <anchorfile>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</anchorfile>
      <anchor>a3e25117daf9011c3db56cff52ebbc25a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>d1/d80/structsatox_1_1blockchain_1_1BlockchainStats.html</anchorfile>
      <anchor>a4c18bfc26632f2c6f962919f165babb6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::BlockHeader</name>
    <filename>dc/d83/structsatox_1_1BlockHeader.html</filename>
    <member kind="function">
      <type></type>
      <name>BlockHeader</name>
      <anchorfile>dc/d83/structsatox_1_1BlockHeader.html</anchorfile>
      <anchor>a460eaefa687ba0b1bf2ddb7b2903576d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>version</name>
      <anchorfile>dc/d83/structsatox_1_1BlockHeader.html</anchorfile>
      <anchor>aa5a6fba2882f7ec6e2c9ed1fef309684</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint256</type>
      <name>prev_block</name>
      <anchorfile>dc/d83/structsatox_1_1BlockHeader.html</anchorfile>
      <anchor>a13ca59055c46d6eeeedd9aa752a28c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint256</type>
      <name>merkle_root</name>
      <anchorfile>dc/d83/structsatox_1_1BlockHeader.html</anchorfile>
      <anchor>a6ce2bd1d62e5630ee0276e41108ff6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timestamp</name>
      <anchorfile>dc/d83/structsatox_1_1BlockHeader.html</anchorfile>
      <anchor>a70ce3e3fedd095a59f72469ddcacf217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bits</name>
      <anchorfile>dc/d83/structsatox_1_1BlockHeader.html</anchorfile>
      <anchor>a453bc21b948e721c7a31eaed31e262eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>nonce</name>
      <anchorfile>dc/d83/structsatox_1_1BlockHeader.html</anchorfile>
      <anchor>a2c770aafea3a2b767357d0abfa9b1427</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::BlockInfo</name>
    <filename>d2/d45/structsatox_1_1blockchain_1_1BlockInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>d2/d45/structsatox_1_1blockchain_1_1BlockInfo.html</anchorfile>
      <anchor>a0a2792702286e65b4b6e42075b1da783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>previous_hash</name>
      <anchorfile>d2/d45/structsatox_1_1blockchain_1_1BlockInfo.html</anchorfile>
      <anchor>a2fcf5dff4f9c01e7bafc01ab903da39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>height</name>
      <anchorfile>d2/d45/structsatox_1_1blockchain_1_1BlockInfo.html</anchorfile>
      <anchor>a0dad2fa8e4f8b9deec20426fc3e9354f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timestamp</name>
      <anchorfile>d2/d45/structsatox_1_1blockchain_1_1BlockInfo.html</anchorfile>
      <anchor>afe62a0c310bc6e30d0ad99e1e10470ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>difficulty</name>
      <anchorfile>d2/d45/structsatox_1_1blockchain_1_1BlockInfo.html</anchorfile>
      <anchor>adc2e53253e5172fa6318e01fb0b898b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>miner</name>
      <anchorfile>d2/d45/structsatox_1_1blockchain_1_1BlockInfo.html</anchorfile>
      <anchor>aa2c7a5e216e1300b5a9fbb417792579d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>reward</name>
      <anchorfile>d2/d45/structsatox_1_1blockchain_1_1BlockInfo.html</anchorfile>
      <anchor>a939b9c7d1ccf049efb11c59dc725c9a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>transactions</name>
      <anchorfile>d2/d45/structsatox_1_1blockchain_1_1BlockInfo.html</anchorfile>
      <anchor>ad942c71c0c6938ececc6d97cc0b18de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>d2/d45/structsatox_1_1blockchain_1_1BlockInfo.html</anchorfile>
      <anchor>a2c14c31276e896bd4888d183928383c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::CacheConfig</name>
    <filename>df/d15/structsatox_1_1blockchain_1_1CacheConfig.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>max_block_cache_size</name>
      <anchorfile>df/d15/structsatox_1_1blockchain_1_1CacheConfig.html</anchorfile>
      <anchor>aed841a54ee4929661cb1bd8144360fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_tx_cache_size</name>
      <anchorfile>df/d15/structsatox_1_1blockchain_1_1CacheConfig.html</anchorfile>
      <anchor>acb6d0f14ba9783282e6160ecdbdeda4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_balance_cache_size</name>
      <anchorfile>df/d15/structsatox_1_1blockchain_1_1CacheConfig.html</anchorfile>
      <anchor>abd8502a291d0df46445ed6a90b2150fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>block_cache_ttl</name>
      <anchorfile>df/d15/structsatox_1_1blockchain_1_1CacheConfig.html</anchorfile>
      <anchor>af04efd5da95620f996a19951c1c02ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>tx_cache_ttl</name>
      <anchorfile>df/d15/structsatox_1_1blockchain_1_1CacheConfig.html</anchorfile>
      <anchor>a85589734f235f05cf0adbb75f80f8048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>balance_cache_ttl</name>
      <anchorfile>df/d15/structsatox_1_1blockchain_1_1CacheConfig.html</anchorfile>
      <anchor>a775ef40b41e0b68ee17ae272703c57fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CacheManager::CacheConfig</name>
    <filename>de/ddf/structsatox_1_1core_1_1CacheManager_1_1CacheConfig.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>maxSize</name>
      <anchorfile>de/ddf/structsatox_1_1core_1_1CacheManager_1_1CacheConfig.html</anchorfile>
      <anchor>aa96ccf4ba1ff7309f578e1eaa5f6a1d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxEntries</name>
      <anchorfile>de/ddf/structsatox_1_1core_1_1CacheManager_1_1CacheConfig.html</anchorfile>
      <anchor>a3f1f06818665c85931e0fbd6ac3b2415</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>defaultTTL</name>
      <anchorfile>de/ddf/structsatox_1_1core_1_1CacheManager_1_1CacheConfig.html</anchorfile>
      <anchor>a3f8b255d303b0f3a995d3f4c5b644662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLRU</name>
      <anchorfile>de/ddf/structsatox_1_1core_1_1CacheManager_1_1CacheConfig.html</anchorfile>
      <anchor>aedc9dee9f033c06ff864515c9e95cc81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLFU</name>
      <anchorfile>de/ddf/structsatox_1_1core_1_1CacheManager_1_1CacheConfig.html</anchorfile>
      <anchor>a062b105b8f49ef70aec36ad1f4ea732c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>cleanupInterval</name>
      <anchorfile>de/ddf/structsatox_1_1core_1_1CacheManager_1_1CacheConfig.html</anchorfile>
      <anchor>a78db25c5ecedb10e629d19e3651b7378</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CacheManager::CacheEntry</name>
    <filename>db/d77/structsatox_1_1core_1_1CacheManager_1_1CacheEntry.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>key</name>
      <anchorfile>db/d77/structsatox_1_1core_1_1CacheManager_1_1CacheEntry.html</anchorfile>
      <anchor>ac161ae939d85d9d0441c7dcbe9960f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>value</name>
      <anchorfile>db/d77/structsatox_1_1core_1_1CacheManager_1_1CacheEntry.html</anchorfile>
      <anchor>a51e71028246ccaa99cade771baff1c11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>expiry</name>
      <anchorfile>db/d77/structsatox_1_1core_1_1CacheManager_1_1CacheEntry.html</anchorfile>
      <anchor>a02fe1465c3fe0489f33bf4f1f2f3adc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>db/d77/structsatox_1_1core_1_1CacheManager_1_1CacheEntry.html</anchorfile>
      <anchor>a96d639a900f07fd43d29f4046677558e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>accessCount</name>
      <anchorfile>db/d77/structsatox_1_1core_1_1CacheManager_1_1CacheEntry.html</anchorfile>
      <anchor>a8f7e6fa94e5c9412de8d65dde9cb3173</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastAccess</name>
      <anchorfile>db/d77/structsatox_1_1core_1_1CacheManager_1_1CacheEntry.html</anchorfile>
      <anchor>a6a29f065f44cac18b64428a590f93e38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTManager::CacheEntry</name>
    <filename>d4/d14/structsatox_1_1nft_1_1NFTManager_1_1CacheEntry.html</filename>
    <member kind="variable">
      <type>NFT</type>
      <name>nft</name>
      <anchorfile>d4/d14/structsatox_1_1nft_1_1NFTManager_1_1CacheEntry.html</anchorfile>
      <anchor>a9dffd3157b9adf5b96396cc07f9d77b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>expiry</name>
      <anchorfile>d4/d14/structsatox_1_1nft_1_1NFTManager_1_1CacheEntry.html</anchorfile>
      <anchor>a035fc8c158a6fe91b4cf70160c76e4db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::CacheManager</name>
    <filename>db/de3/classsatox_1_1core_1_1CacheManager.html</filename>
    <class kind="struct">satox::core::CacheManager::CacheConfig</class>
    <class kind="struct">satox::core::CacheManager::CacheEntry</class>
    <class kind="struct">satox::core::CacheManager::CacheStats</class>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt;</type>
      <name>CacheCallback</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a1a4d794f7e7e0d11055e39ecc7bdab5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CacheManager</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>afc2508a08a90571f59a3bbc7ff7de851</anchor>
      <arglist>(const CacheManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CacheManager &amp;</type>
      <name>operator=</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>abf47a60ccd27f43f5f168eb14c636f78</anchor>
      <arglist>(const CacheManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a6430b03deabb3e70f1ac3ee353305ff8</anchor>
      <arglist>(const CacheConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a9de0cd5d34aaa5f6912dcf7cce5a5e3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a3741ab92280e103940e90f5f49886aba</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;value, std::chrono::seconds ttl=std::chrono::seconds(0))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>set</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a8dbacbf29564e7fb65f1305ff08531cb</anchor>
      <arglist>(const std::string &amp;key, const nlohmann::json &amp;value, std::chrono::seconds ttl=std::chrono::seconds(0))</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>get</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a687a723c4a8976ed448343a0c2c440e9</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; nlohmann::json &gt;</type>
      <name>getJson</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>ae9fd95b72c9c8cfdebcdb337d43794c9</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a115c09243e399f56df251988d85335ef</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a6e1fe79e30e04a36492dc3089e986508</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a8e2005eb4d9f6a6d8a796c39ffdd4e06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setMulti</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a96cf4cb8c853d1f2104d44bbeef02674</anchor>
      <arglist>(const std::unordered_map&lt; std::string, std::string &gt; &amp;entries, std::chrono::seconds ttl=std::chrono::seconds(0))</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>getMulti</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a98b7af13a777bf927c97110f61e2a096</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;keys)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeMulti</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>adf97ee49290bca663983fc0e40395104</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;keys)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setTTL</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a29bae68237f622caba3dc10026159b12</anchor>
      <arglist>(const std::string &amp;key, std::chrono::seconds ttl)</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::system_clock::time_point</type>
      <name>getExpiry</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a93bd27b145a5c728a98f8b31d074f739</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSize</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a4eb35d6fc98e6ac0df6d1a78c75570c0</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getTotalSize</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>aee6cf662b94c609eae14ca21e4942378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getEntryCount</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>ae76bdfcab3dfee3cb3ea6281cc4fd250</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CacheStats</type>
      <name>getStats</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>ad07f71c600d133a2ed81bd8075b94057</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCallback</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a99d7540676f4ef7ab25015cba6d8513a</anchor>
      <arglist>(CacheCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterCallback</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a48d4b6a0d193114eabe70f92af0d98e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a0dc65c2c33716015fa8b02be14833323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a31e39ef32129e9f74d6c4f830bd73907</anchor>
      <arglist>(size_t newMaxSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxEntries</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a9e003b9a12e7dc7fea575fe8580210a9</anchor>
      <arglist>(size_t newMaxEntries)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>af23c576eaebaa5f9ca4e38720cd7708d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>a8f7a3dbe8e90990ee8ba7fa74453516e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CacheManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>db/de3/classsatox_1_1core_1_1CacheManager.html</anchorfile>
      <anchor>afd6382b9e12c0d66533e6bab12b80231</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CacheManager::CacheStats</name>
    <filename>df/dbf/structsatox_1_1core_1_1CacheManager_1_1CacheStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>totalEntries</name>
      <anchorfile>df/dbf/structsatox_1_1core_1_1CacheManager_1_1CacheStats.html</anchorfile>
      <anchor>a63da9f68b0d2face01ce285bec199b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>totalSize</name>
      <anchorfile>df/dbf/structsatox_1_1core_1_1CacheManager_1_1CacheStats.html</anchorfile>
      <anchor>aeb6439ca4a87a507b186e43c6494bb80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxSize</name>
      <anchorfile>df/dbf/structsatox_1_1core_1_1CacheManager_1_1CacheStats.html</anchorfile>
      <anchor>a22f194a3eefeb8809b05daf7a09f8f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>hitCount</name>
      <anchorfile>df/dbf/structsatox_1_1core_1_1CacheManager_1_1CacheStats.html</anchorfile>
      <anchor>a71edb3765a38ed334a4edb7d5ea3f8a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>missCount</name>
      <anchorfile>df/dbf/structsatox_1_1core_1_1CacheManager_1_1CacheStats.html</anchorfile>
      <anchor>a6b83fd5c39f14b5185f8ef367a2a472e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>hitRate</name>
      <anchorfile>df/dbf/structsatox_1_1core_1_1CacheManager_1_1CacheStats.html</anchorfile>
      <anchor>a2b7777c5a537c1ac910b1f34f253b8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>evictionCount</name>
      <anchorfile>df/dbf/structsatox_1_1core_1_1CacheManager_1_1CacheStats.html</anchorfile>
      <anchor>ac21f2d4bacb324465c10a6a2100ada4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::LetsEncryptManager::Certificate</name>
    <filename>d2/daa/structsatox_1_1network_1_1LetsEncryptManager_1_1Certificate.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>cert_path</name>
      <anchorfile>d2/daa/structsatox_1_1network_1_1LetsEncryptManager_1_1Certificate.html</anchorfile>
      <anchor>a1f23de482c013be0f4571c0c9fee2595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>key_path</name>
      <anchorfile>d2/daa/structsatox_1_1network_1_1LetsEncryptManager_1_1Certificate.html</anchorfile>
      <anchor>ad006346fabf686cd612f117cf7f52ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>chain_path</name>
      <anchorfile>d2/daa/structsatox_1_1network_1_1LetsEncryptManager_1_1Certificate.html</anchorfile>
      <anchor>a9b76a83e9831938265b17757a45b8424</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>expiry</name>
      <anchorfile>d2/daa/structsatox_1_1network_1_1LetsEncryptManager_1_1Certificate.html</anchorfile>
      <anchor>a6481715709338c76d170c07d5e0fd0e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>domain</name>
      <anchorfile>d2/daa/structsatox_1_1network_1_1LetsEncryptManager_1_1Certificate.html</anchorfile>
      <anchor>aa2fa878286dc95daf4e5e4c0427f4df1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::network::CertificateRevocation</name>
    <filename>d4/d24/classsatox_1_1network_1_1CertificateRevocation.html</filename>
    <class kind="class">satox::network::CertificateRevocation::Impl</class>
    <class kind="struct">satox::network::CertificateRevocation::RevocationConfig</class>
    <class kind="struct">satox::network::CertificateRevocation::RevocationStatus</class>
    <member kind="function">
      <type></type>
      <name>CertificateRevocation</name>
      <anchorfile>d4/d24/classsatox_1_1network_1_1CertificateRevocation.html</anchorfile>
      <anchor>a2fc6b021354ffba1e722a42811c13b79</anchor>
      <arglist>(const RevocationConfig &amp;config=RevocationConfig())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CertificateRevocation</name>
      <anchorfile>d4/d24/classsatox_1_1network_1_1CertificateRevocation.html</anchorfile>
      <anchor>aefaec8ce22047efbe8f0049b46fe9c8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RevocationStatus</type>
      <name>checkRevocation</name>
      <anchorfile>d4/d24/classsatox_1_1network_1_1CertificateRevocation.html</anchorfile>
      <anchor>aa118ffcc973c30d7390178a54cb847d5</anchor>
      <arglist>(X509 *cert)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateRevocationInfo</name>
      <anchorfile>d4/d24/classsatox_1_1network_1_1CertificateRevocation.html</anchorfile>
      <anchor>a809ad7f8ca35e5b9ab20a3c3ad0033fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d4/d24/classsatox_1_1network_1_1CertificateRevocation.html</anchorfile>
      <anchor>ae1069d71f2be7fa1bd60e36f9230b4ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>d4/d24/classsatox_1_1network_1_1CertificateRevocation.html</anchorfile>
      <anchor>ae80f5a916da3e666eb8e7ac164623418</anchor>
      <arglist>(const RevocationConfig &amp;config)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::ChainState</name>
    <filename>dd/d17/structsatox_1_1core_1_1ChainState.html</filename>
    <member kind="variable">
      <type>uint64_t</type>
      <name>currentHeight</name>
      <anchorfile>dd/d17/structsatox_1_1core_1_1ChainState.html</anchorfile>
      <anchor>a5d474f26c86d3ae92a3017d47a107416</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>bestBlockHash</name>
      <anchorfile>dd/d17/structsatox_1_1core_1_1ChainState.html</anchorfile>
      <anchor>af94a7932b681f0df7fb7d3993395f4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalDifficulty</name>
      <anchorfile>dd/d17/structsatox_1_1core_1_1ChainState.html</anchorfile>
      <anchor>a4d33eeb4bd2377da3afa2b4dbccdc06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isSyncing</name>
      <anchorfile>dd/d17/structsatox_1_1core_1_1ChainState.html</anchorfile>
      <anchor>adb7ee500e15b956bb3afccc0317edeff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CloudLogEntry</name>
    <filename>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>operation_id</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a6a9225f5c257a74109884545ab1ddec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CloudProvider</type>
      <name>provider</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>ad005090b1316750cc4b5ae7c4b69d394</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CloudOperation</type>
      <name>operation</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>abc39df12fdb55be8cac61ad064bfa083</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CloudOperationStatus</type>
      <name>status</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>ac2077c7db36b184710ccfa3129a235d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>connection_id</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a13620caa7fada24d861ceb35e3d06994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>user_id</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>aeda3a7be2d9d1cd9618c6c5e22909610</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>session_id</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a611ef0ba11b7dd18c72d7b9017a66ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>correlation_id</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a3c0f80580b12f194d60c6ff25123f4c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error_message</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>ac76ee4b81d271d7aea5ed189207756fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error_code</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a55e25812b9e5e7e28db30dd868dcd7c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a49435a3829439fbef76e6c7219d6788f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>duration</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a29cac840a20cb547c328945a64c536ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a6d9988d4f5ace5aa1c80614dcd489094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>context</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>aca548b65a2b0cb03e6194853b0c5ae24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ip_address</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a7a806184325d195d1f2d3104617090c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>user_agent</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a667b4a5b494cc233a25be73705f1ffce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::thread::id</type>
      <name>thread_id</name>
      <anchorfile>dc/da5/structsatox_1_1core_1_1CloudLogEntry.html</anchorfile>
      <anchor>a76607fa26283d51106501c4092e9f8ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CloudMetrics</name>
    <filename>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</filename>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>total_operations</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a4bf25b11e5012226079c83b9241c1e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>successful_operations</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a39ffffc76534be36acdb16175dfe405a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>failed_operations</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a232015c299ff976bf1521ffa7c5e0998</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>timeout_operations</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>ae4d41fe41ce4a19cfccd58d6a46c6cb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>retry_operations</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a25597ad1cee414edcba9090d513cb737</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>total_queries</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a80b358c0fb04cfd8bd492413acbdb3c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>successful_queries</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>acdf0754906b84277f225abbb6c3ff12b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>failed_queries</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>ab1a8a932137e4088cd6ed962d143c100</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; double &gt;</type>
      <name>average_query_time</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>ada2b541605cd929dd489ed9a9dabe2da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; double &gt;</type>
      <name>max_query_time</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>ab747f83b7afb6445a1efc016eb4d6257</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; double &gt;</type>
      <name>min_query_time</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>ab0a49b78f018d9abd1ae7dbe09f8ea25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>total_connections</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a0f556e1b8355976c076853bc07d40fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>active_connections</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a13f5e43b1e2c70ff7caabc5beb968775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>connection_errors</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>aec905217125502362f150a16243b0caf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>total_subscriptions</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a8c4c278a32c58cd759f8c5f9c294a4ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>active_subscriptions</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>ac02ddf32a19cd168db1bdf05b780c904</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>subscription_errors</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a9bca75b784b35433fe8fb1d2cab2690f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>total_requests</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>af4eb48a138f9ab2b6f934532e4bfefb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>successful_requests</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a1dd2bd112609c313cd78b30a3ea11dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>failed_requests</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>af004b070d5deff9c102abe6b8e8b7857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; double &gt;</type>
      <name>average_response_time</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a7dfe5f8adaab545e1a158f7a68ad7d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; double &gt;</type>
      <name>max_response_time</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>acc8d9ae242bba6b19f8f84f19bc7adde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; double &gt;</type>
      <name>min_response_time</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a306116cbe5fe9780e6a87f9d6d496d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>total_errors</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a8814fcc6b794ebf2747be6d1b469a892</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>authentication_errors</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a0d5ccd56c8040674551c028bd07e241f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>network_errors</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a3916fc762ae471f6ba6f77b2e8485247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>timeout_errors</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>ae892858c458a417e47195e1e1170c81a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>rate_limit_errors</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>adc0149190f1910365e7b935967116e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::atomic&lt; int64_t &gt;</type>
      <name>quota_errors</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a3ff66f7625ef71791ac0a6289efd3524</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_operation</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>ad65568494b195afa1bfba093790405be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_error</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>a3dd02d3eaf18ba533937a1a85f6775e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_success</name>
      <anchorfile>dd/dee/structsatox_1_1core_1_1CloudMetrics.html</anchorfile>
      <anchor>ab580a6da86d91000192664cb3b09bd46</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::CloudMonitoring</name>
    <filename>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</filename>
    <member kind="function">
      <type></type>
      <name>CloudMonitoring</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a671c48800cfab7180d6dd1fd24c5a385</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CloudMonitoring</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a0f4920c62ab258ea036fbec2ad2246f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a865a3c54f407261ef446267b0de7fc74</anchor>
      <arglist>(const CloudMonitoringConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a480204e09ce1274fdd2f0b87439f4f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logOperation</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>aa920a965ba3f84823cd61a9dd5780ae0</anchor>
      <arglist>(const CloudLogEntry &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>startOperation</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a7cb8bd43b2d28ee42d21803c5e3dbc0b</anchor>
      <arglist>(CloudProvider provider, CloudOperation operation, const std::string &amp;connection_id=&quot;&quot;, const nlohmann::json &amp;metadata={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>completeOperation</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>aa0f43cf3d8b6747aede302d1877f74cf</anchor>
      <arglist>(const std::string &amp;operation_id, CloudOperationStatus status, const std::string &amp;error_message=&quot;&quot;, const nlohmann::json &amp;result={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logError</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>aaa03e289c29c72ccc127b299d0c7f534</anchor>
      <arglist>(CloudProvider provider, CloudOperation operation, const std::string &amp;error_message, const std::string &amp;error_code=&quot;&quot;, const std::string &amp;connection_id=&quot;&quot;, const nlohmann::json &amp;metadata={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logPerformance</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a4142c97134493e8515104d64fd5ae86d</anchor>
      <arglist>(CloudProvider provider, CloudOperation operation, std::chrono::milliseconds duration, bool success, const nlohmann::json &amp;metadata={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logSecurityEvent</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a2b44b2cd2a51bfc235a9e3b6d17a7db6</anchor>
      <arglist>(CloudProvider provider, const std::string &amp;event_type, const std::string &amp;severity, const std::string &amp;details, const nlohmann::json &amp;metadata={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logAuditEvent</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a523b8f8f2f3bca8a447a7a05e19fafc8</anchor>
      <arglist>(CloudProvider provider, const std::string &amp;user_id, const std::string &amp;action, const std::string &amp;resource, const std::string &amp;result, const nlohmann::json &amp;metadata={})</arglist>
    </member>
    <member kind="function">
      <type>CloudMetrics</type>
      <name>getMetrics</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>aad6346f35d3144596f03a5916ebd59c4</anchor>
      <arglist>(CloudProvider provider) const</arglist>
    </member>
    <member kind="function">
      <type>CloudMetrics</type>
      <name>getAggregatedMetrics</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>aa02dcfef9389346e1a17b383048fdca7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetMetrics</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a7a5920e015429b48053291e86fa21b33</anchor>
      <arglist>(CloudProvider provider)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAllMetrics</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>acfda9889c328ccb60469c30d26a876e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getHealthStatus</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>aae75c6528d066af8dec3e6b2aa178767</anchor>
      <arglist>(CloudProvider provider) const</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getAllHealthStatus</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>aec3d75df592b7727af2bbb4e3a642997</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>performHealthCheck</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a6717f513fcd147046e765c04754e6534</anchor>
      <arglist>(CloudProvider provider)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getMonitoringSummary</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a3be1d8196374254c5fbc4566deb9be22</anchor>
      <arglist>(int hours=24) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setContext</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a4715a90fec08be2b08b51c9b1b07db39</anchor>
      <arglist>(const std::string &amp;correlation_id=&quot;&quot;, const std::string &amp;user_id=&quot;&quot;, const std::string &amp;session_id=&quot;&quot;, const std::string &amp;ip_address=&quot;&quot;, const std::string &amp;user_agent=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearContext</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a280dafe96dcf0cade9e0c53b7f86ba7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerLogCallback</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a9f71fbf01e82a01d41886f6f42a2af97</anchor>
      <arglist>(CloudLogCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAlertCallback</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a2da347b9f996fa8a816556dedc9f3721</anchor>
      <arglist>(CloudAlertCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerHealthCallback</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>abbf15e3d303956d07fd88bef24f4c701</anchor>
      <arglist>(CloudHealthCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerMetricsCallback</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a9b2494b982aa501134e5c113815a2986</anchor>
      <arglist>(CloudMetricsCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>CloudMonitoringConfig</type>
      <name>getConfig</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a158334bc8c67c7dec8f7bda2e993ac30</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateConfig</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>acedb49f88d6c4b94903cf7c8c15052bf</anchor>
      <arglist>(const CloudMonitoringConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>afad563b767c1aed3e8bf6b6ade927eeb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getStatus</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a9c0bfb5061e3aa5cc8713e8aac6d72c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CloudMonitoring &amp;</type>
      <name>getInstance</name>
      <anchorfile>d7/d4d/classsatox_1_1core_1_1CloudMonitoring.html</anchorfile>
      <anchor>a9db382c0baae037de4dacc864476179e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CloudMonitoringConfig</name>
    <filename>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>enable_logging</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>ad72fd63c818cc00a891393f1b7537f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_metrics</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>aa150d221619526a163e3cb79281b079b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_tracing</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>af82f2683528c88650fdf7e96b20779b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_alerts</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a142398012b99bab72d88eec17f4aeb0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_health_checks</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a7c8518dbd9502d76df7dd7aaad2be9c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>log_level</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a3da225e23552fb8c3b89fb06538fdb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>log_path</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a1d1456d9935f60b63e1fc1761334b84d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_log_size</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>af9d5f11026ec9b2ad3c7466c92e95f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_log_files</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a8c305703ca3f0adcbf47a5b9dc3715fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_console_logging</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a8c298a664580b1b2ddd14fb462c57ebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_file_logging</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a76b32f2fd678177a21f2f525909ecf02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_json_logging</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a5f5a866aa2d2374040c96fe426c1106b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>metrics_retention_hours</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>ac292ca86034a23bbe5d47a62e8f142cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>health_check_interval_seconds</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>afa6a69025a765eb7dd4469e2a8f5b26f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>alert_threshold_errors</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a328867c7a0c3a37326c82672664195f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>alert_threshold_timeout</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a666be3f167eac396fbbcd7ef4548fee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_performance_monitoring</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>ae811cc2c08650147926756cb7693b0e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_security_monitoring</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>afbe7e23cb2f50af5422cf9eedafaff3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_audit_logging</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>afe3e47bb325937876b23107fc54c64c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additional_config</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1CloudMonitoringConfig.html</anchorfile>
      <anchor>a0568e7a4284274fb261a5e6e59ee3f68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::ComponentStatus</name>
    <filename>d1/deb/structsatox_1_1core_1_1ComponentStatus.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d1/deb/structsatox_1_1core_1_1ComponentStatus.html</anchorfile>
      <anchor>a0e4d1ae88bd0e7cdead51400051d8c0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ComponentState</type>
      <name>state</name>
      <anchorfile>d1/deb/structsatox_1_1core_1_1ComponentStatus.html</anchorfile>
      <anchor>ac3047cf286170ce772503fedfe8cdb2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_update</name>
      <anchorfile>d1/deb/structsatox_1_1core_1_1ComponentStatus.html</anchorfile>
      <anchor>aace1b0cc18759adcc6c541d8da7e8eed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>error_count</name>
      <anchorfile>d1/deb/structsatox_1_1core_1_1ComponentStatus.html</anchorfile>
      <anchor>ae3c0ae28ca4c2f1eb53f4e8b88cc8b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>last_error</name>
      <anchorfile>d1/deb/structsatox_1_1core_1_1ComponentStatus.html</anchorfile>
      <anchor>a20dfaec49bc4790ed8a2e4124d3c1b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additional_info</name>
      <anchorfile>d1/deb/structsatox_1_1core_1_1ComponentStatus.html</anchorfile>
      <anchor>addcd97c4d49a829b19b324f8302ae6a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::APIManager::Config</name>
    <filename>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>host</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>a2ec25be813bf6b060e8e66f655c25079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>port</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>ae908c19cbb19a6bf3cd752c827a32f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_connections</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>a3a19cc55433732c17fc6ba503cf67373</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>connection_timeout</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>a7e03b40e0d141aaf1dd55fc0134be9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_ssl</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>a6b2c673aed0e58b4d9215536abbbb472</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_cert</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>aba16049ad8be92812d7b9c0525466996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_key</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>a337d32e92ad462c5e18789806fa29459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_ca</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>a4f2add95c4051224eddeb75967142674</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_request_size</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>acac9e1e349b351cb7c2259277660c617</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_websocket_message_size</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>a25219f117cd48b5fe48518f734ab5d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_rate_limiting</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>ab92ab712893c3b1c318ede485ae8eeb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rate_limit_requests</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>ad2fa83e08fcf0ee60e933e5ab9fe9e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>rate_limit_window</name>
      <anchorfile>db/d17/structsatox_1_1core_1_1APIManager_1_1Config.html</anchorfile>
      <anchor>a6b96b5f28a6ee9619b7150b153d05f11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::BlockchainManager::Config</name>
    <filename>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>network</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a08224ee58f30f4e29ce32f47696e8509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>data_dir</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>ab006919737d1a87504b2a618ddf6127a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>p2p_port</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a38ada82a58ab7b5187d340eca9b2abb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rpc_port</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a796a5b24f5953712ef8f007d67130212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_mining</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a2dd91e2f8fde19ce947442ba293445dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_connections</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a8a94e1cc0cfdb2fffa2d4807aa1e8452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_outbound_connections</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>add9296144cd2e71b468b1204c7305755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_inbound_connections</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a573d7ea282b58949cb85c48569e76e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>connection_timeout</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a90bd2a898492b3dcac9bd4be4d3d4cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>handshake_timeout</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a569cdc99289db7c1ef098a40b929a4ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>ping_timeout</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a38a4944ff658fac88423fd741b11237a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_block_size</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>ac66c037b9ef923a9087d0b5cc9c0bf9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_tx_size</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>ad144b83e5bf3d2279642ebc892cdae57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_script_size</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>aa9b4ca0973d73b81f9375e3ee2e59215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_script_num_size</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>acbc784b642b79a16b3907c7554402500</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_stack_size</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a1647159f91873b19b21558f63047f9f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_sig_ops</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a925f331415023f71119ba4581065f0aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_orphan_txs</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>aeb96c9077b2c62a7bf6f7ea8c1006d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_mempool_size</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a436357b778961a4153f47354cdb60a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>mempool_expiry</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a94356580f46abdafffe527b291402611</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_rpc</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a5ec9b73b2b6e9aaf57350337ca0c825f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_rest</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>ac9a9c16599ca21560f9a87a80ff33c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpc_user</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a0fdc93679264dc36f2ed91aee17c1590</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpc_password</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a3d10048b758fafee0d505ace7b97349e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>rpc_allowed_ips</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a484e3133044398f9a526f06f832ff5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_wallet</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>af10d8611c11746a683eba556a077115c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>wallet_dir</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>aac950353bc2d5a9a0f55f9f8ba33c180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_assets</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a14929293868f0cb8d3cc18fc4d6acb4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_ipfs</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>a61dd8b886fd0905cd14d7afdc45d0817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_nft</name>
      <anchorfile>d6/d74/structsatox_1_1core_1_1BlockchainManager_1_1Config.html</anchorfile>
      <anchor>abe9d18839fd7e75ccfe35a5a600a8ef4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::Config</name>
    <filename>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>data_dir</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>a1fecc80cf25adeddc6ab006ffffbd5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_tx_size</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>acbd5e6a8e60687f975c64cdd871f1366</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_inputs</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>ab2d6f75a21e9f287ac4ab3fe47f3bc5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_outputs</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>ab44a761bcc03bb1305104753442c0665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>min_fee</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>afcba7cfa73ed7e618918f118eedbe75d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_fee</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>afbb3f584379ba39989406715662d28ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>fee_rate</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>a80d713e14344969f6795eecfe6031f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>mempool_size</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>aded8c222f704fe0809837f00c4304772</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>mempool_expiry</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>af17143a24156fa8597117ca652ac5e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_fee_estimation</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>aa6aeee7a250643d4615d6c70794d0da6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_utxo_cache</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>a8dbe4d35998175bbd83e03423d940b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>utxo_cache_size</name>
      <anchorfile>dc/de7/structsatox_1_1core_1_1TransactionManager_1_1Config.html</anchorfile>
      <anchor>aeb3ace2a09cd72c6d1d949c0be6bef7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::Config</name>
    <filename>da/dc2/structsatox_1_1ipfs_1_1Config.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>api_endpoint</name>
      <anchorfile>da/dc2/structsatox_1_1ipfs_1_1Config.html</anchorfile>
      <anchor>a73d58eb12103fad96af1db5fa0809c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>gateway_url</name>
      <anchorfile>da/dc2/structsatox_1_1ipfs_1_1Config.html</anchorfile>
      <anchor>adb6701f491c3fc71ac0bcf20d8a2ef4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>timeout_seconds</name>
      <anchorfile>da/dc2/structsatox_1_1ipfs_1_1Config.html</anchorfile>
      <anchor>a1cebacc3fd21eec2a0750753db1973d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_pinning</name>
      <anchorfile>da/dc2/structsatox_1_1ipfs_1_1Config.html</anchorfile>
      <anchor>a424ee96a9331226cade4a31853191222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>pinning_service</name>
      <anchorfile>da/dc2/structsatox_1_1ipfs_1_1Config.html</anchorfile>
      <anchor>ad855f14a8db699f5a4edd1f02803dab3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::LetsEncryptManager::Config</name>
    <filename>d1/d1c/structsatox_1_1network_1_1LetsEncryptManager_1_1Config.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>domain</name>
      <anchorfile>d1/d1c/structsatox_1_1network_1_1LetsEncryptManager_1_1Config.html</anchorfile>
      <anchor>ae15c8d59dc436749d0365478fd2a74c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>email</name>
      <anchorfile>d1/d1c/structsatox_1_1network_1_1LetsEncryptManager_1_1Config.html</anchorfile>
      <anchor>ac39a6ebbf8be8871bc2b15a75e0cc1ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>webroot_path</name>
      <anchorfile>d1/d1c/structsatox_1_1network_1_1LetsEncryptManager_1_1Config.html</anchorfile>
      <anchor>a21654f277ee7061c9b6dabb7e26eae5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>cert_path</name>
      <anchorfile>d1/d1c/structsatox_1_1network_1_1LetsEncryptManager_1_1Config.html</anchorfile>
      <anchor>a8f0742fe448c72b9bc10bebba58bda9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>staging</name>
      <anchorfile>d1/d1c/structsatox_1_1network_1_1LetsEncryptManager_1_1Config.html</anchorfile>
      <anchor>a52ca09493ec4846829614c1e569f1fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::hours</type>
      <name>renewal_threshold</name>
      <anchorfile>d1/d1c/structsatox_1_1network_1_1LetsEncryptManager_1_1Config.html</anchorfile>
      <anchor>ab64690ed49f00773f0b9d09c7a6477f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>auto_renew</name>
      <anchorfile>d1/d1c/structsatox_1_1network_1_1LetsEncryptManager_1_1Config.html</anchorfile>
      <anchor>a3b4b75ba1ab855fbc623454874d425ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::DatabaseConnection::Config</name>
    <filename>d8/dcd/structsatox_1_1nft_1_1DatabaseConnection_1_1Config.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>host</name>
      <anchorfile>d8/dcd/structsatox_1_1nft_1_1DatabaseConnection_1_1Config.html</anchorfile>
      <anchor>ab6ea5b4be1868da6cd6978312f604eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>port</name>
      <anchorfile>d8/dcd/structsatox_1_1nft_1_1DatabaseConnection_1_1Config.html</anchorfile>
      <anchor>a59c031832555f614a01cd2d6d5d09b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>database</name>
      <anchorfile>d8/dcd/structsatox_1_1nft_1_1DatabaseConnection_1_1Config.html</anchorfile>
      <anchor>ad230b15cf421f2f3ff87aa1deddeb030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>username</name>
      <anchorfile>d8/dcd/structsatox_1_1nft_1_1DatabaseConnection_1_1Config.html</anchorfile>
      <anchor>a702c694d7ea419ce8de6d7cfe8c0a674</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>password</name>
      <anchorfile>d8/dcd/structsatox_1_1nft_1_1DatabaseConnection_1_1Config.html</anchorfile>
      <anchor>a859d04eff92ab918c39daddabe9006d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_connections</name>
      <anchorfile>d8/dcd/structsatox_1_1nft_1_1DatabaseConnection_1_1Config.html</anchorfile>
      <anchor>abcaec207cf9ece2fca2b45b6ab594da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>connection_timeout</name>
      <anchorfile>d8/dcd/structsatox_1_1nft_1_1DatabaseConnection_1_1Config.html</anchorfile>
      <anchor>af564e895a6880f266657c0392df1bf58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use_ssl</name>
      <anchorfile>d8/dcd/structsatox_1_1nft_1_1DatabaseConnection_1_1Config.html</anchorfile>
      <anchor>aa2072816f240ff5e1e52a0384a67a70d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::ConfigManager</name>
    <filename>d4/d83/classsatox_1_1core_1_1ConfigManager.html</filename>
    <class kind="struct">satox::core::ConfigManager::ConfigSection</class>
    <class kind="struct">satox::core::ConfigManager::ConfigValue</class>
    <class kind="struct">satox::core::ConfigManager::Stats</class>
    <member kind="enumeration">
      <type></type>
      <name>ValueType</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>ac48d80e83016216077e56d42f0605e45</anchor>
      <arglist></arglist>
      <enumvalue file="d4/d83/classsatox_1_1core_1_1ConfigManager.html" anchor="ac48d80e83016216077e56d42f0605e45a63b588d5559f64f89a416e656880b949">STRING</enumvalue>
      <enumvalue file="d4/d83/classsatox_1_1core_1_1ConfigManager.html" anchor="ac48d80e83016216077e56d42f0605e45a5d5cd46919fa987731fb2edefe0f2a0c">INTEGER</enumvalue>
      <enumvalue file="d4/d83/classsatox_1_1core_1_1ConfigManager.html" anchor="ac48d80e83016216077e56d42f0605e45ae738c26bf4ce1037fa81b039a915cbf6">FLOAT</enumvalue>
      <enumvalue file="d4/d83/classsatox_1_1core_1_1ConfigManager.html" anchor="ac48d80e83016216077e56d42f0605e45ac48d5da12d702e73d6966069f2687376">BOOLEAN</enumvalue>
      <enumvalue file="d4/d83/classsatox_1_1core_1_1ConfigManager.html" anchor="ac48d80e83016216077e56d42f0605e45acb4fb1757fb37c43cded35d3eb857c43">ARRAY</enumvalue>
      <enumvalue file="d4/d83/classsatox_1_1core_1_1ConfigManager.html" anchor="ac48d80e83016216077e56d42f0605e45a8eee8e217391199668cbac89472ace53">OBJECT</enumvalue>
      <enumvalue file="d4/d83/classsatox_1_1core_1_1ConfigManager.html" anchor="ac48d80e83016216077e56d42f0605e45aa9f0aff2067f91437e50e4872b229e6a">NULL_VALUE</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const ConfigValue &amp;)&gt;</type>
      <name>ConfigCallback</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aab99b235f16de254349e4169ef9aebe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aceb14b923e1eae1886ab298cf0d7024e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigManager</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a27c97163353e6180da8cb3e180cadf86</anchor>
      <arglist>(const ConfigManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ConfigManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aeb789a77f0491353d54ac1dc28082633</anchor>
      <arglist>(const ConfigManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aae1e2f5ca15be13883691bebf986a30b</anchor>
      <arglist>(const std::string &amp;config_path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shutdown</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a3de1f67dc931bc4b80f5d5ce9cb6b06b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadConfig</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aa2a72f826423fba7fcd58c80fd015e6b</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveConfig</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>af82e2ed4073a452a33f437ca68abcf39</anchor>
      <arglist>(const std::string &amp;path=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reloadConfig</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>af7f8bb0d5a7b3d5d314b7a4202b170cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateConfig</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a831eeec60a30a3c5a8fe986e9bc41b21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createSection</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a821678e11be023c183d8531589648507</anchor>
      <arglist>(const std::string &amp;section)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteSection</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a1c8442894516fe40f2e249ada75bdf99</anchor>
      <arglist>(const std::string &amp;section)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSection</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a9e5e88e20a32cd84277be903618fdfbb</anchor>
      <arglist>(const std::string &amp;section) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getSections</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a209e88023d8b3ec266f2f691664a0954</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a5219266e87d1ff3f9cf5ad40c9d7fe27</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, const ConfigValue &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setString</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aad7859be587d9705075c5d01695fc0fd</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setInt</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a409af6bfde76807e01a13faec02d4a47</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFloat</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a1e9791b2f384bf629921d4d5efc56d93</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setBool</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>af70ff96d35f31fac6cbe4f0e605563c2</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setArray</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a4763fd6f1767d31d45f6d52f1ecab97a</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, const std::vector&lt; ConfigValue &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setObject</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a25d4110600fd815ea3c2083314d90dfd</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, const std::unordered_map&lt; std::string, ConfigValue &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ConfigValue &gt;</type>
      <name>getValue</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a5f9497c6993650ffc202628348e9988f</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>getString</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>acdf0459a54112d0acab93c3f133a05ad</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; int64_t &gt;</type>
      <name>getInt</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>ac271023f8f7434b8eb95575992d59960</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; double &gt;</type>
      <name>getFloat</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a8ec040c28ef531a48ec5c77565b2bc23</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; bool &gt;</type>
      <name>getBool</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a87c57a069248a3755fd2527c6fe48991</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::vector&lt; ConfigValue &gt; &gt;</type>
      <name>getArray</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a72d026d9ccc490abb0df99b18d4499c9</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::unordered_map&lt; std::string, ConfigValue &gt; &gt;</type>
      <name>getObject</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a7d1b36fc2366eb0a46c742fab65fef01</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasValue</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aae0ebf8ac8c7d391b620d1307753c723</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteValue</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>acba3b31778f747585de20a67a2207f30</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getKeys</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>af3a3ccc3250472b9a9984720a2c286cd</anchor>
      <arglist>(const std::string &amp;section) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDefaultValue</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a2213a6a1a23b5ce6b3696938474f689f</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, const ConfigValue &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDefaultString</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>ad6eb1588fe7b40ec311a3e4eb048aa8b</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDefaultInt</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>abb68903afb9e596e6a63b2ce0287ea0f</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDefaultFloat</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>abeb20de7f1d30a4a0eea60f4b79b7ad6</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDefaultBool</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a063ac04d944b1a881c75bd10d392149f</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDefaultArray</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aefb51ada76b416e8cd4e7d3271d9be4c</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, const std::vector&lt; ConfigValue &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDefaultObject</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>af1d59820dcdc5ca38b03375060f4c3c5</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, const std::unordered_map&lt; std::string, ConfigValue &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadFromEnvironment</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a16fd191fb285cdf741727edef73c6e30</anchor>
      <arglist>(const std::string &amp;prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFromEnvironment</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a9c9d24d5bf8b73357262d009fd44b45d</anchor>
      <arglist>(const std::string &amp;section, const std::string &amp;key, const std::string &amp;envVar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerConfigCallback</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aadafd3cb5ea96cac019174d170f76e01</anchor>
      <arglist>(ConfigCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>ae50238d412cf51ca68788e68087b6093</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateValue</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>ac1e14b9458318f6f570f05b2e3b62859</anchor>
      <arglist>(const ConfigValue &amp;value) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateSection</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a0f92c1efb0478d160db9b716f1bb2bed</anchor>
      <arglist>(const std::string &amp;section) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateKey</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aefc6ffc8894fa5243ac7993e4e71daf7</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a361951b93907cb650d777f8e40fcc2a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>aa202b2b1984cfe730830864af93b6b0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stats</type>
      <name>getStats</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a9292289a4ba050be19f76c1ccce6cdfd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>ae9031fb10504df4e3bfe0ca75e9c4b40</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConfigManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d4/d83/classsatox_1_1core_1_1ConfigManager.html</anchorfile>
      <anchor>a8d7ed0f52f1d0ac955a26f01273f7515</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::ConfigManager::ConfigSection</name>
    <filename>da/d5d/structsatox_1_1core_1_1ConfigManager_1_1ConfigSection.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>da/d5d/structsatox_1_1core_1_1ConfigManager_1_1ConfigSection.html</anchorfile>
      <anchor>a6fc16304b8d14f1304de2ba1de8b7cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, ConfigValue &gt;</type>
      <name>values</name>
      <anchorfile>da/d5d/structsatox_1_1core_1_1ConfigManager_1_1ConfigSection.html</anchorfile>
      <anchor>aed3bd51b4b898c5df7ff955420e45463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_modified</name>
      <anchorfile>da/d5d/structsatox_1_1core_1_1ConfigManager_1_1ConfigSection.html</anchorfile>
      <anchor>ab61c82afe1fa745e7ac89bb1b1010b56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::ConfigSection</name>
    <filename>d0/d31/structsatox_1_1core_1_1ConfigSection.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d0/d31/structsatox_1_1core_1_1ConfigSection.html</anchorfile>
      <anchor>ae8299b68143e190fb19215b9afaac702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, ConfigValue &gt;</type>
      <name>values</name>
      <anchorfile>d0/d31/structsatox_1_1core_1_1ConfigSection.html</anchorfile>
      <anchor>a67f1b910af1c2c1d26b17b519accf309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_modified</name>
      <anchorfile>d0/d31/structsatox_1_1core_1_1ConfigSection.html</anchorfile>
      <anchor>a9f9f8a7c55536abb6cc6d681edf701dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::ConfigManager::ConfigValue</name>
    <filename>d1/d21/structsatox_1_1core_1_1ConfigManager_1_1ConfigValue.html</filename>
    <member kind="variable">
      <type>ValueType</type>
      <name>type</name>
      <anchorfile>d1/d21/structsatox_1_1core_1_1ConfigManager_1_1ConfigValue.html</anchorfile>
      <anchor>abbb41033bdf7d9bb5f62bfbbb46a7146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>stringValue</name>
      <anchorfile>d1/d21/structsatox_1_1core_1_1ConfigManager_1_1ConfigValue.html</anchorfile>
      <anchor>ab9881c9bbf3598bf50d817a423bf17bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>intValue</name>
      <anchorfile>d1/d21/structsatox_1_1core_1_1ConfigManager_1_1ConfigValue.html</anchorfile>
      <anchor>acbe1f240cfb9d48edbc73294a8c179c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>floatValue</name>
      <anchorfile>d1/d21/structsatox_1_1core_1_1ConfigManager_1_1ConfigValue.html</anchorfile>
      <anchor>a859278e631ff7f5bed026159edde801d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>boolValue</name>
      <anchorfile>d1/d21/structsatox_1_1core_1_1ConfigManager_1_1ConfigValue.html</anchorfile>
      <anchor>a5024da130242ad75ff6d6d899e8b50c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>complexValue</name>
      <anchorfile>d1/d21/structsatox_1_1core_1_1ConfigManager_1_1ConfigValue.html</anchorfile>
      <anchor>abf1c4e1ff9ff74ded5c452d065fe30bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::ConfigValue</name>
    <filename>d4/df5/structsatox_1_1core_1_1ConfigValue.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>add31eb42745823ede6e5782e747f698c</anchor>
      <arglist></arglist>
      <enumvalue file="d4/df5/structsatox_1_1core_1_1ConfigValue.html" anchor="add31eb42745823ede6e5782e747f698ca63b588d5559f64f89a416e656880b949">STRING</enumvalue>
      <enumvalue file="d4/df5/structsatox_1_1core_1_1ConfigValue.html" anchor="add31eb42745823ede6e5782e747f698ca5d5cd46919fa987731fb2edefe0f2a0c">INTEGER</enumvalue>
      <enumvalue file="d4/df5/structsatox_1_1core_1_1ConfigValue.html" anchor="add31eb42745823ede6e5782e747f698cafd3e4ece78a7d422280d5ed379482229">DOUBLE</enumvalue>
      <enumvalue file="d4/df5/structsatox_1_1core_1_1ConfigValue.html" anchor="add31eb42745823ede6e5782e747f698cac48d5da12d702e73d6966069f2687376">BOOLEAN</enumvalue>
      <enumvalue file="d4/df5/structsatox_1_1core_1_1ConfigValue.html" anchor="add31eb42745823ede6e5782e747f698ca0ecd11c1d7a287401d148a23bbd7a2f8">JSON</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigValue</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>a5065ba8e4bfd577b5a7d8890cc211d15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigValue</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>a144aad3f067e75b85f2bb85091cbe115</anchor>
      <arglist>(const std::string &amp;val)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigValue</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>ae03537bc3d27fbc3b3b94b356a7b01ee</anchor>
      <arglist>(int64_t val)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigValue</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>a8829a2eb596eae2bb412ec31cf2aa528</anchor>
      <arglist>(double val)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigValue</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>a12c31f0586b9dc4f55b25b093cd13bdb</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigValue</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>a2266d750363f656a88b6731a007797a4</anchor>
      <arglist>(const nlohmann::json &amp;val)</arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>aa7cae3a0643d64cf824d12e192c803f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>string_value</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>a135597936b414a8479551148cc6bf321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>int_value</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>ab10af633bdbd32950f35c2456f19227f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>double_value</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>a870c4474057465dca6bb187c53e9aae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bool_value</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>a814c09267a95002d41cbcdf991a085e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>json_value</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1ConfigValue.html</anchorfile>
      <anchor>a108c885fd56c8a4a8f05950a0c9e0d51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::ConnectionPool::ConnectionConfig</name>
    <filename>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>host</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>a61fe6a5a7ea19bee63d6c9522b323cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>port</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>afdb8b3ed63ae3c4fd7bc4f98a763c2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>database</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>ab006144ab0b3aece783e5780f8c18dfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>username</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>ad2b292613852b0570bb6286af9887229</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>password</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>a8fb9922f53fbec13c061af7ad84f82e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use_ssl</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>a77372911f7e4be429b01cf4edf77b0ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_connections</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>a157aecd586bfd1d883489d595bb71a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>min_connections</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>a1fca2a5d7f68541593adc93939cf08d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>connection_timeout</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>a72bb16b82529a41b31c746a586497b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>idle_timeout</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>a5d2a357139a0274c922bd252108607a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>max_lifetime</name>
      <anchorfile>d7/d03/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionConfig.html</anchorfile>
      <anchor>a14fd48edbb2463df7c3b5c056aa9462f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::NetworkManager::ConnectionInfo</name>
    <filename>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>address</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>a35343bd290e7ed7e8f3374c12687ee39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>port</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>a84180794bda5a181f96a4bfef8399816</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NetworkType</type>
      <name>networkType</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>a8b98681bee7b211cb4580abb6648e3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NodeType</type>
      <name>nodeType</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>ae1c60f36116d6c885c28773b6584bfa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>a84d56ef42ce3aa2842f8ed4ce0fd610d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>userAgent</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>aa13df701e8b4511fd2e7f18cda429b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastSeen</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>a5f2bf0957a1b8983e91ae9d7f89da766</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastPing</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>a1af3c35f4a86b76759028cd57080c288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>latency</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>a0524ff47f62273d35c28a36c1c66efdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isInbound</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>a63ef2bdd983d7eb4e4d4f026528faeee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOutbound</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>ae85ff773e31a5fed959b949da95724ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>da/da2/structsatox_1_1core_1_1NetworkManager_1_1ConnectionInfo.html</anchorfile>
      <anchor>a30d4cb59bfd6568d5e241f07a1ed7c2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::ConnectionPool</name>
    <filename>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</filename>
    <class kind="struct">satox::database::ConnectionPool::ConnectionConfig</class>
    <class kind="struct">satox::database::ConnectionPool::ConnectionStats</class>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>ae36ee816c48af45a6cb1c58bc49be7dd</anchor>
      <arglist>(const ConnectionConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>ac5b34964e0996d7d17598114e5e17044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; void &gt;</type>
      <name>acquireConnection</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>a3dd95b5d07b75a1fa55239c79d1d04ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>releaseConnection</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>a186440a05c81239b5adb82cc222bcaf8</anchor>
      <arglist>(std::shared_ptr&lt; void &gt; connection)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>testConnection</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>aaeed3dc77057e678588ad33ef7ced89e</anchor>
      <arglist>(std::shared_ptr&lt; void &gt; connection)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxConnections</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>ad1555f01656551efc65348325f26e128</anchor>
      <arglist>(size_t max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinConnections</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>a9ed0091d9de1fc070c1a61532e66e1f6</anchor>
      <arglist>(size_t min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionTimeout</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>aae0cf70e23bd38a8c6897ee6183de372</anchor>
      <arglist>(std::chrono::seconds timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIdleTimeout</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>a5b9452aeed8af468cacc79acc1cb9113</anchor>
      <arglist>(std::chrono::seconds timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxLifetime</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>a281e332ae903436e08500f913db6c090</anchor>
      <arglist>(std::chrono::seconds lifetime)</arglist>
    </member>
    <member kind="function">
      <type>ConnectionStats</type>
      <name>getStats</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>ac36be68810f349fe3dff050c7d506ebe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>a6a80c1dfa37b0c463cd15e4a9ec7cb39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>a68b4a7ac8b6ed5859ee41a7af10d2c13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>a8472b3aafd0a553d6bc7a2430428137a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ConnectionPool &amp;</type>
      <name>getInstance</name>
      <anchorfile>d1/d2f/classsatox_1_1database_1_1ConnectionPool.html</anchorfile>
      <anchor>a30e0698d1b6c80bd394af8b6bab3c113</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::ConnectionPoolConfig</name>
    <filename>d8/d6b/structsatox_1_1blockchain_1_1ConnectionPoolConfig.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>max_connections</name>
      <anchorfile>d8/d6b/structsatox_1_1blockchain_1_1ConnectionPoolConfig.html</anchorfile>
      <anchor>af85ea520db94bda48de1ff5d46950945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_connections</name>
      <anchorfile>d8/d6b/structsatox_1_1blockchain_1_1ConnectionPoolConfig.html</anchorfile>
      <anchor>aa6cdc2944c019c2ad6bf082f85afd056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>connection_timeout</name>
      <anchorfile>d8/d6b/structsatox_1_1blockchain_1_1ConnectionPoolConfig.html</anchorfile>
      <anchor>a698f71d132415b8aeac32255ca5e7165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>idle_timeout</name>
      <anchorfile>d8/d6b/structsatox_1_1blockchain_1_1ConnectionPoolConfig.html</anchorfile>
      <anchor>a2e3e3262065af58e37459b1bc4fe155a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_retries</name>
      <anchorfile>d8/d6b/structsatox_1_1blockchain_1_1ConnectionPoolConfig.html</anchorfile>
      <anchor>a05cdfdd81c5a5fa96701459dde340a94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::ConnectionPool::ConnectionStats</name>
    <filename>db/db6/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>total_connections</name>
      <anchorfile>db/db6/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionStats.html</anchorfile>
      <anchor>a0ff6e9efa4bafb0326b0f6b3a546d41d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>active_connections</name>
      <anchorfile>db/db6/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionStats.html</anchorfile>
      <anchor>a09f84fa19b011f4e49407dd14e8d3f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>idle_connections</name>
      <anchorfile>db/db6/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionStats.html</anchorfile>
      <anchor>a333cb3d1376981a1fac6abf1ea99471e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>waiting_requests</name>
      <anchorfile>db/db6/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionStats.html</anchorfile>
      <anchor>a299dfc9f823071897a3cb411d4cd68da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>avg_wait_time</name>
      <anchorfile>db/db6/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionStats.html</anchorfile>
      <anchor>a82c514379a840a606bd4351c8f28a157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>connection_errors</name>
      <anchorfile>db/db6/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionStats.html</anchorfile>
      <anchor>a2629d4c2b8f65265c79cec757b21686c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>timeout_errors</name>
      <anchorfile>db/db6/structsatox_1_1database_1_1ConnectionPool_1_1ConnectionStats.html</anchorfile>
      <anchor>aeaa38343497ffd6ab44ec2b79dd7fa66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::ipfs::ContentDistribution</name>
    <filename>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</filename>
    <class kind="struct">satox::ipfs::ContentDistribution::DistributionStatus</class>
    <class kind="struct">satox::ipfs::ContentDistribution::Error</class>
    <member kind="typedef">
      <type>std::function&lt; void(const DistributionStatus &amp;)&gt;</type>
      <name>StatusCallback</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a4451a7006cbbcea73c7c115df4e138a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>acb9f2a45580c5ee60561dab8b0165442</anchor>
      <arglist>(const std::string &amp;configPath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a178ee5660c9b8f0785aee478a9d66715</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; bool &gt;</type>
      <name>distributeContent</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a5ae95fe27b3927c70d33b7d0fbfd9feb</anchor>
      <arglist>(const std::string &amp;contentHash, const std::vector&lt; std::string &gt; &amp;targetNodes)</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; bool &gt;</type>
      <name>distributeFile</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a5f7d3cdc29466f9cb6bfcc37ca4197b2</anchor>
      <arglist>(const std::string &amp;filePath, const std::vector&lt; std::string &gt; &amp;targetNodes)</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; bool &gt;</type>
      <name>distributeDirectory</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>ae26ef13ff2c4c69f7b3414c1a509acf0</anchor>
      <arglist>(const std::string &amp;directoryPath, const std::vector&lt; std::string &gt; &amp;targetNodes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addNode</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a7735088c0efaa2b3f87fa4c25884e1a4</anchor>
      <arglist>(const std::string &amp;nodeId, const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeNode</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a56f9c779a182ba98b5a0863b2d8cdd0c</anchor>
      <arglist>(const std::string &amp;nodeId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNode</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>afdd52608b12d3915e9ded6cda5935ec0</anchor>
      <arglist>(const std::string &amp;nodeId, const std::string &amp;newAddress)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getAvailableNodes</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a41d6cd00755408611f321f81e5cb10f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeAvailable</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a7c470f1340d2181a90024737f3a631cc</anchor>
      <arglist>(const std::string &amp;nodeId) const</arglist>
    </member>
    <member kind="function">
      <type>DistributionStatus</type>
      <name>getDistributionStatus</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>ae9e06cbfc8100ce68a2cd765d7b80b8d</anchor>
      <arglist>(const std::string &amp;contentHash) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; DistributionStatus &gt;</type>
      <name>getActiveDistributions</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a7d756b6bc8fea4c7c825702914b8f270</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cancelDistribution</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>aed0e16090b33fce61cc6583184be8062</anchor>
      <arglist>(const std::string &amp;contentHash)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBandwidthLimit</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a9e4477bfc664e9d2e64f373d599f23b7</anchor>
      <arglist>(size_t bytesPerSecond)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getBandwidthLimit</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>adde5a07355f31753c07bc49e8ddc9261</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCurrentBandwidthUsage</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>ac278cf19667bfe9112729b5b56a31e75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDistributionPriority</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>ab37336153fb8154edc836602a5f76871</anchor>
      <arglist>(const std::string &amp;contentHash, int priority)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDistributionPriority</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a24fe6b150bad29f1d3b48a459e94296f</anchor>
      <arglist>(const std::string &amp;contentHash) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatusCallback</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>ac3c20c734923abb6fa5208e4b5068575</anchor>
      <arglist>(StatusCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearStatusCallback</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a7ebaf101f9b43228f17dc1ac7d07b3ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>getLastError</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a98b95062848c7277148d906073a34e5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a32811127fddfa9d701d41f44cc9e536c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ContentDistribution &amp;</type>
      <name>getInstance</name>
      <anchorfile>d5/d96/classsatox_1_1ipfs_1_1ContentDistribution.html</anchorfile>
      <anchor>a710c90ce2e122d1f5bc8db56e5f8439b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::IPFSManager::ContentInfo</name>
    <filename>d6/d8a/structsatox_1_1core_1_1IPFSManager_1_1ContentInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>d6/d8a/structsatox_1_1core_1_1IPFSManager_1_1ContentInfo.html</anchorfile>
      <anchor>acc64680537f75c2ad6fbfc67a703b02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d6/d8a/structsatox_1_1core_1_1IPFSManager_1_1ContentInfo.html</anchorfile>
      <anchor>ad13b2d2150c045281d30f39b10ac3b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ContentType</type>
      <name>type</name>
      <anchorfile>d6/d8a/structsatox_1_1core_1_1IPFSManager_1_1ContentInfo.html</anchorfile>
      <anchor>a39a8ab62765acfb6262d3a19676a55cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>d6/d8a/structsatox_1_1core_1_1IPFSManager_1_1ContentInfo.html</anchorfile>
      <anchor>a75d81b2fadf0873c6c55ea3cd3262ac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mimeType</name>
      <anchorfile>d6/d8a/structsatox_1_1core_1_1IPFSManager_1_1ContentInfo.html</anchorfile>
      <anchor>ab0523eeb37f8f6c8968594e0a1b6a178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>createdAt</name>
      <anchorfile>d6/d8a/structsatox_1_1core_1_1IPFSManager_1_1ContentInfo.html</anchorfile>
      <anchor>a2b4781a3c870acf9b9f5e814b7515095</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastModified</name>
      <anchorfile>d6/d8a/structsatox_1_1core_1_1IPFSManager_1_1ContentInfo.html</anchorfile>
      <anchor>a09762e8f409199dfe37ccbce4932290b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>tags</name>
      <anchorfile>d6/d8a/structsatox_1_1core_1_1IPFSManager_1_1ContentInfo.html</anchorfile>
      <anchor>a58df86a8de784a3041b54d476d6ac592</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d6/d8a/structsatox_1_1core_1_1IPFSManager_1_1ContentInfo.html</anchorfile>
      <anchor>add100c06361ecdc3f852e05ce5e94812</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::ContentStorage::ContentInfo</name>
    <filename>d7/d1c/structsatox_1_1ipfs_1_1ContentStorage_1_1ContentInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>d7/d1c/structsatox_1_1ipfs_1_1ContentStorage_1_1ContentInfo.html</anchorfile>
      <anchor>a0272c8812a1b7a110f551c7461538473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d7/d1c/structsatox_1_1ipfs_1_1ContentStorage_1_1ContentInfo.html</anchorfile>
      <anchor>a444ae13424e5534039d9e126e085aa1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>d7/d1c/structsatox_1_1ipfs_1_1ContentStorage_1_1ContentInfo.html</anchorfile>
      <anchor>a570446b8d60258c8c8c1fa28fd71a9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mimeType</name>
      <anchorfile>d7/d1c/structsatox_1_1ipfs_1_1ContentStorage_1_1ContentInfo.html</anchorfile>
      <anchor>ac23943728492145845712293fd7baf47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>createdAt</name>
      <anchorfile>d7/d1c/structsatox_1_1ipfs_1_1ContentStorage_1_1ContentInfo.html</anchorfile>
      <anchor>a90699be6b4d05f18ef1353ad7b8b0e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>updatedAt</name>
      <anchorfile>d7/d1c/structsatox_1_1ipfs_1_1ContentStorage_1_1ContentInfo.html</anchorfile>
      <anchor>aeb3095e725854a2a2217850ab27925d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isPinned</name>
      <anchorfile>d7/d1c/structsatox_1_1ipfs_1_1ContentStorage_1_1ContentInfo.html</anchorfile>
      <anchor>a73a89a6f9dc8e777499bf9e5b1f84276</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>tags</name>
      <anchorfile>d7/d1c/structsatox_1_1ipfs_1_1ContentStorage_1_1ContentInfo.html</anchorfile>
      <anchor>aa132781d48089abaaffe4ef1b4efbfb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d7/d1c/structsatox_1_1ipfs_1_1ContentStorage_1_1ContentInfo.html</anchorfile>
      <anchor>a4f24195f90a1149199f83591f4a05021</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::ipfs::ContentStorage</name>
    <filename>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</filename>
    <class kind="struct">satox::ipfs::ContentStorage::ContentInfo</class>
    <class kind="struct">satox::ipfs::ContentStorage::Error</class>
    <member kind="function">
      <type></type>
      <name>ContentStorage</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>aba70eff6d8e2360a9c32d9882eb74efd</anchor>
      <arglist>(const ContentStorage &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ContentStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a27ce91a9f23d81a5e52b9d3f824ec3f7</anchor>
      <arglist>(const ContentStorage &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a79b7b5493c5ab99a8194befe91ac8bfd</anchor>
      <arglist>(const std::string &amp;storagePath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a17cd4c3f87741542639011c3420ebf2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; ContentInfo &gt;</type>
      <name>storeContent</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a27c54e16992d1883f4c99e5b6c85120d</anchor>
      <arglist>(const std::string &amp;content, const std::string &amp;name=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; ContentInfo &gt;</type>
      <name>storeFile</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a9878aa55dae5de88c0c66ffc87790548</anchor>
      <arglist>(const std::string &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; std::vector&lt; ContentInfo &gt; &gt;</type>
      <name>storeDirectory</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>aa153ed83aa89f3f6d4e71c57612fc755</anchor>
      <arglist>(const std::string &amp;directoryPath)</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; std::string &gt;</type>
      <name>getContent</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a5321ab248980c9293555d7d95a540709</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; bool &gt;</type>
      <name>getFile</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a6ba4231e6692ee49937583b22ad75f88</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;outputPath)</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; bool &gt;</type>
      <name>getDirectory</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a034f45549ba3f6b114d845a3c5737d58</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;outputPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateContent</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a8ca34bcc0797c8152154fab4125e5061</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;newContent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateMetadata</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a5b1990e241fd2c65aa84aa29b937c363</anchor>
      <arglist>(const std::string &amp;hash, const nlohmann::json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteContent</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a84c0ab1cb68659e3563bccfc28c8c570</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pinContent</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a95c837c4057b1e8a87fba9903de31594</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unpinContent</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a4bdbd3973daab092d8addd7bba4e2e47</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>ContentInfo</type>
      <name>getContentInfo</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>acb3227881ca02db0b32eb37171c9aaa6</anchor>
      <arglist>(const std::string &amp;hash) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ContentInfo &gt;</type>
      <name>getContentByTag</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a20c1278cbe2d817dc367ce6634dcc28c</anchor>
      <arglist>(const std::string &amp;tag) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ContentInfo &gt;</type>
      <name>getContentByMimeType</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a257e0a167b83acb994ef01e06ad5bfb6</anchor>
      <arglist>(const std::string &amp;mimeType) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ContentInfo &gt;</type>
      <name>searchContent</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>acb7493ba2ad89c8b30e321fba420c697</anchor>
      <arglist>(const std::string &amp;query) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ContentInfo &gt;</type>
      <name>getPinnedContent</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a940589093105f154655880e2bbe0b27c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableCache</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>ae973f5d91fc6e264466eca07d73b013f</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a194d2c0504fa58f959b600b99fa2c1eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCacheSize</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a302ce5e7cdcab2f8f46499bcdd3212ff</anchor>
      <arglist>(size_t maxSize)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCacheSize</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a2a8a9011aa91c628fcebaefe170e316b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCacheUsage</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a215c1c4acc5ab7a39c8fe3cc04b8c930</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createBackup</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a48d811bee9f8bf73b320d78202c57e85</anchor>
      <arglist>(const std::string &amp;backupPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restoreFromBackup</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>adb6298bf108144b78d458cfb7fb603ce</anchor>
      <arglist>(const std::string &amp;backupPath)</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>getLastError</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a3dfdb4b6975ca0557b54eaf33caa788a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a1a888657087810018451fd079daafad0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ContentStorage &amp;</type>
      <name>getInstance</name>
      <anchorfile>d2/d35/classsatox_1_1ipfs_1_1ContentStorage.html</anchorfile>
      <anchor>a1eef2b7ee58f49abee2a103390b477af</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CoreComponentStats</name>
    <filename>db/dc0/structsatox_1_1core_1_1CoreComponentStats.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>totalOperations</name>
      <anchorfile>db/dc0/structsatox_1_1core_1_1CoreComponentStats.html</anchorfile>
      <anchor>ac07505dcb8758bff0344e9de628c21cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>successfulOperations</name>
      <anchorfile>db/dc0/structsatox_1_1core_1_1CoreComponentStats.html</anchorfile>
      <anchor>ab2beac7280e49467e7b78bd10326a0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>failedOperations</name>
      <anchorfile>db/dc0/structsatox_1_1core_1_1CoreComponentStats.html</anchorfile>
      <anchor>ae9cc72fc6a4379bb289fabdd881fc1cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastOperation</name>
      <anchorfile>db/dc0/structsatox_1_1core_1_1CoreComponentStats.html</anchorfile>
      <anchor>ac1e88bb43f9d407c607aec68f6d78e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>averageOperationTime</name>
      <anchorfile>db/dc0/structsatox_1_1core_1_1CoreComponentStats.html</anchorfile>
      <anchor>a50f8b6bc60c54462a0448e6a17e096b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>db/dc0/structsatox_1_1core_1_1CoreComponentStats.html</anchorfile>
      <anchor>a029508c09849410ad2351ace25102591</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CoreConfig</name>
    <filename>d6/df9/structsatox_1_1core_1_1CoreConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>data_dir</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>ae4124933dcc721345aceb9d2cefafcd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>network</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>a79d7ee99ea3ab92e9b086e7fa89f15a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_mining</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>a35fd1cc67c4f0a02d8f32456cda97fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_sync</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>aac337ffc8f70cf5213f9ca030efa9ca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>sync_interval_ms</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>ab31aa355b3213e8033fd24b4c96b50a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>mining_threads</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>ace6db773942a3ac6f3def5a8312ce5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpc_endpoint</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>a503977260a3af15c3ff6fdffadbdbca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpc_username</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>ad75f1865cf10d12a809e5261800ddf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpc_password</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>ad3106ae28b2234d4f27668ded3ecd4fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout_ms</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>a3b86ffa3b13ee1e3b1a77883d7325290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>database</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>aeff46edd0728833539165ef97ce24fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>network_config</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>ac482a6952017941d2818f91a9a268971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>blockchain</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>a3b632c1a4a2ede06c8e51e4b7a596e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>wallet</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>a859e4cb13abd8a9e43b76edd771c4082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>asset</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>aa57a622a8f795e92235f9baf36977342</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>ipfs</name>
      <anchorfile>d6/df9/structsatox_1_1core_1_1CoreConfig.html</anchorfile>
      <anchor>a8a465d06794b4c8bb2332f93aa0611b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::CoreException</name>
    <filename>dd/d34/classsatox_1_1core_1_1CoreException.html</filename>
    <member kind="function">
      <type></type>
      <name>CoreException</name>
      <anchorfile>dd/d34/classsatox_1_1core_1_1CoreException.html</anchorfile>
      <anchor>a6681a89aab05c42bf09bc9ee4a1b1d91</anchor>
      <arglist>(CoreErrorCode code, const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>dd/d34/classsatox_1_1core_1_1CoreException.html</anchorfile>
      <anchor>a8bbf6961f50bd65ee70c612d9d57a8de</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>CoreErrorCode</type>
      <name>code</name>
      <anchorfile>dd/d34/classsatox_1_1core_1_1CoreException.html</anchorfile>
      <anchor>ab2138a56dcc6383b24d6061caccc7861</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>message</name>
      <anchorfile>dd/d34/classsatox_1_1core_1_1CoreException.html</anchorfile>
      <anchor>a7d4215b415b89d07079b2cd3bdac2508</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CoreHealth</name>
    <filename>d7/de0/structsatox_1_1core_1_1CoreHealth.html</filename>
    <member kind="variable">
      <type>CoreStatus</type>
      <name>status</name>
      <anchorfile>d7/de0/structsatox_1_1core_1_1CoreHealth.html</anchorfile>
      <anchor>a3e24393f47a8a6214dbb97415949c227</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>healthy</name>
      <anchorfile>d7/de0/structsatox_1_1core_1_1CoreHealth.html</anchorfile>
      <anchor>aeb34aa80df02b381aad6b91c8ee81938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>d7/de0/structsatox_1_1core_1_1CoreHealth.html</anchorfile>
      <anchor>ace8550671851d509966e22a1977d7a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastCheck</name>
      <anchorfile>d7/de0/structsatox_1_1core_1_1CoreHealth.html</anchorfile>
      <anchor>a43b611f0e2c2c10962ec4ff648e96eff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>consecutiveFailures</name>
      <anchorfile>d7/de0/structsatox_1_1core_1_1CoreHealth.html</anchorfile>
      <anchor>ac957a25fc1f0426a940f34468764f581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>details</name>
      <anchorfile>d7/de0/structsatox_1_1core_1_1CoreHealth.html</anchorfile>
      <anchor>afa2dd8fa1e36d92c60b762e3c6eb72b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::CoreInitializationException</name>
    <filename>da/d15/classsatox_1_1core_1_1CoreInitializationException.html</filename>
    <base>satox::core::CoreException</base>
    <member kind="function">
      <type></type>
      <name>CoreInitializationException</name>
      <anchorfile>da/d15/classsatox_1_1core_1_1CoreInitializationException.html</anchorfile>
      <anchor>a3a4def9fe1466f7194f59dd73ed74944</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::CoreManager</name>
    <filename>de/d4d/classsatox_1_1core_1_1CoreManager.html</filename>
    <member kind="function">
      <type></type>
      <name>CoreManager</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a7d24f4963d39ef60c04f0a3aaace7fdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CoreManager</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a515133a2de3e0f211f8a3eb9de2696b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoreManager</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a467271d1f1d64a6607f8ba630abc7fb6</anchor>
      <arglist>(const CoreManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>CoreManager &amp;</type>
      <name>operator=</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>adbc1f896eab367fa35252ad9fe1fc803</anchor>
      <arglist>(const CoreManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a3eeabb592a597f1e01244d9e1328381a</anchor>
      <arglist>(const CoreConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a2e83411ed88d1b1ab5ee236b3598f814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>ab71c685a7f7412d32a798cb62e11c8aa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a2fd1ddcb4da92159a8b177e31425903e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a1d566f47a8f27027599c0ea6302c15d0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>NetworkManager &amp;</type>
      <name>getNetworkManager</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a5eb075cef75cb104af312eb0dbcf5676</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AssetManager &amp;</type>
      <name>getAssetManager</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>ab395831966f78b829ccac1f027c0184f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>IPFSManager &amp;</type>
      <name>getIPFSManager</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>ad656bc6237bd6489ddb5f5ac1aeb1b87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>WalletManager &amp;</type>
      <name>getWalletManager</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a095e8ed4004eb1443622eca855d563d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BlockchainManager &amp;</type>
      <name>getBlockchainManager</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a297f08b07bee7831816bbf84781b06da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>ad64eb3d538e32cbc886b211c66cf59b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>aeb2e7a002998e4d514e4eda6df42c975</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restartComponent</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a7df2571c88bb7a73c71a861cd6b72329</anchor>
      <arglist>(const std::string &amp;component)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateComponent</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a64026a035a4f44c3f4cecb5bfce8e6b5</anchor>
      <arglist>(const std::string &amp;component, const std::unordered_map&lt; std::string, std::string &gt; &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ComponentStatus &gt;</type>
      <name>getComponentStatus</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a786cd4c62d8a8c26a2ff446e308dfd40</anchor>
      <arglist>(const std::string &amp;component) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateConfig</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a5364408705f0679ae7ce7873120bf995</anchor>
      <arglist>(const CoreConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; CoreConfig &gt;</type>
      <name>getConfig</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>ab21e6642d060ed6cc25d09256a32b544</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateConfig</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a6dafc3fb760a5d13f9b8bb6e8c09a685</anchor>
      <arglist>(const CoreConfig &amp;config) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backupConfig</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>af7f55b159be1ac25ff0324b1d123ec84</anchor>
      <arglist>(const std::string &amp;backup_path) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restoreConfig</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a5e7ba0c8981c0dbe07b43c402a8d5042</anchor>
      <arglist>(const std::string &amp;backup_path)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; SystemInfo &gt;</type>
      <name>getSystemInfo</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>ad0c527e403767e3f3e61d949a7336bee</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CoreStats</type>
      <name>getStats</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a39abb62858fa18461e011cf798a3d8a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a7a73b878c3db337b77752bec3cafaf04</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a8ef0701cbed3656cc9ca0ace7dc03a71</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerStatusCallback</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>ad8555e4ce89f8f0de0bd0ad004719f45</anchor>
      <arglist>(StatusCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerShutdownCallback</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>ad550b0e51d02d91e5ec491a84febf4e4</anchor>
      <arglist>(ShutdownCallback callback)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CoreManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>de/d4d/classsatox_1_1core_1_1CoreManager.html</anchorfile>
      <anchor>a649ac2234732b2e90101cbb9170a951b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::CoreOperationException</name>
    <filename>d0/dec/classsatox_1_1core_1_1CoreOperationException.html</filename>
    <base>satox::core::CoreException</base>
    <member kind="function">
      <type></type>
      <name>CoreOperationException</name>
      <anchorfile>d0/dec/classsatox_1_1core_1_1CoreOperationException.html</anchorfile>
      <anchor>ac88d731c53c50d92723e0dabb171f9fe</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CoreResult</name>
    <filename>d6/dd5/structsatox_1_1core_1_1CoreResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d6/dd5/structsatox_1_1core_1_1CoreResult.html</anchorfile>
      <anchor>aa6222ece9ee50a9d5e709f2fc2251bf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d6/dd5/structsatox_1_1core_1_1CoreResult.html</anchorfile>
      <anchor>a6f1fd50d3a76436bb12b07b680e39a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>d6/dd5/structsatox_1_1core_1_1CoreResult.html</anchorfile>
      <anchor>a809ce04d91ea3cca3e74f3b5045973a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>duration</name>
      <anchorfile>d6/dd5/structsatox_1_1core_1_1CoreResult.html</anchorfile>
      <anchor>a2325445716ce97987462e72a2e040372</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::CoreStats</name>
    <filename>d0/d53/structsatox_1_1core_1_1CoreStats.html</filename>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>start_time</name>
      <anchorfile>d0/d53/structsatox_1_1core_1_1CoreStats.html</anchorfile>
      <anchor>ad750c4548bd983f884ea1aba1313d809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_activity</name>
      <anchorfile>d0/d53/structsatox_1_1core_1_1CoreStats.html</anchorfile>
      <anchor>a2b300480f6ee09b19d12d0fe55e96350</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>total_components</name>
      <anchorfile>d0/d53/structsatox_1_1core_1_1CoreStats.html</anchorfile>
      <anchor>a602f26f4e916f9bb4681d8d28a52dd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>active_components</name>
      <anchorfile>d0/d53/structsatox_1_1core_1_1CoreStats.html</anchorfile>
      <anchor>a9772d0a239569769a75740c3e9f797cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>failed_components</name>
      <anchorfile>d0/d53/structsatox_1_1core_1_1CoreStats.html</anchorfile>
      <anchor>a7349a515ca7ccd0d6259f77b34e68a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additional_stats</name>
      <anchorfile>d0/d53/structsatox_1_1core_1_1CoreStats.html</anchorfile>
      <anchor>a5cc0b76eb3443b7517873890e8bd5620</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::DatabaseManager::DatabaseConfig</name>
    <filename>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>host</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>ab395cccfbd4708f6a740a36e1c15193f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>port</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>a8a3238d7fae6ccfeb7bbb2f60f5c5b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>database</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>a3d0fbb19cf0b8ffcf93ed1bdd39e2acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>username</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>ae2ac230ceee542ca873f45e28a62ff6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>password</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>aac91b5c8de4f6c5bbc08275eeefeaad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_connections</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>ae645228f328591a00d99ba777d7906d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>connection_timeout</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>a7dbfb6c7979b4142d83b6a76da0fd96e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_ssl</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>a322d954e4686e76823347e68574a07c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_cert</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>a0357917c3ed892c5bae423343a69502c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_key</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>afc459442b7d6c946a582563264c37066</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_ca</name>
      <anchorfile>dc/d69/structsatox_1_1core_1_1DatabaseManager_1_1DatabaseConfig.html</anchorfile>
      <anchor>a19ae00a1eb4417c9c2dbbefd1947629b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::DatabaseConfig</name>
    <filename>d0/df3/structsatox_1_1database_1_1DatabaseConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d0/df3/structsatox_1_1database_1_1DatabaseConfig.html</anchorfile>
      <anchor>a2b628c7dbd95742a5850efcf202e89e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLogging</name>
      <anchorfile>d0/df3/structsatox_1_1database_1_1DatabaseConfig.html</anchorfile>
      <anchor>ac2a6acec1a314217fa9112fa453a7aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logPath</name>
      <anchorfile>d0/df3/structsatox_1_1database_1_1DatabaseConfig.html</anchorfile>
      <anchor>a22f19d5de470facb43ab5dc85e2f030a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxConnections</name>
      <anchorfile>d0/df3/structsatox_1_1database_1_1DatabaseConfig.html</anchorfile>
      <anchor>a9c3a5d0de3446ee27388acfcbb3eeb07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>connectionTimeout</name>
      <anchorfile>d0/df3/structsatox_1_1database_1_1DatabaseConfig.html</anchorfile>
      <anchor>a126d0f6d00000ab9365c7c30bc4d0eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalConfig</name>
      <anchorfile>d0/df3/structsatox_1_1database_1_1DatabaseConfig.html</anchorfile>
      <anchor>a55a33623c39d4ae87ef0fd22773cd019</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::DatabaseConnection</name>
    <filename>d3/d41/structsatox_1_1core_1_1DatabaseConnection.html</filename>
    <member kind="variable">
      <type>DatabaseType</type>
      <name>type</name>
      <anchorfile>d3/d41/structsatox_1_1core_1_1DatabaseConnection.html</anchorfile>
      <anchor>a19f2b4bcbfd527a03075eb4f01628bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>json</type>
      <name>config</name>
      <anchorfile>d3/d41/structsatox_1_1core_1_1DatabaseConnection.html</anchorfile>
      <anchor>adc32e0db1581770599a3e9a8e6bb1130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>handle</name>
      <anchorfile>d3/d41/structsatox_1_1core_1_1DatabaseConnection.html</anchorfile>
      <anchor>afcdae004b60667e9b0f3fcb34d555f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>connected</name>
      <anchorfile>d3/d41/structsatox_1_1core_1_1DatabaseConnection.html</anchorfile>
      <anchor>a27da2fdded1958651fa353b398f0907c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastActivity</name>
      <anchorfile>d3/d41/structsatox_1_1core_1_1DatabaseConnection.html</anchorfile>
      <anchor>ab5dde76fa65d97d008a966d73dfe466c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>queryCount</name>
      <anchorfile>d3/d41/structsatox_1_1core_1_1DatabaseConnection.html</anchorfile>
      <anchor>ab41c8b7602366d512ae19cd7ef14be20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>errorCount</name>
      <anchorfile>d3/d41/structsatox_1_1core_1_1DatabaseConnection.html</anchorfile>
      <anchor>aedccd554bb201083b0d5130c15d52148</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::DatabaseConnection</name>
    <filename>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</filename>
    <class kind="struct">satox::nft::DatabaseConnection::Config</class>
    <class kind="struct">satox::nft::DatabaseConnection::QueryResult</class>
    <member kind="typedef">
      <type>std::function&lt; void(const QueryResult &amp;)&gt;</type>
      <name>QueryCallback</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>a1de823b7fcb1792dd0617dd3debc554b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseConnection</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>aaa3fd2149abb7884c729d3abe39ed94f</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>connect</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>a9d449432bb001519749eeb6c32a31f7c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>disconnect</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>ab45c65f357f8f874ed9dd588bf7f9dd9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isConnected</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>a30acc3653a019cb3d7b011fb425dc121</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>executeQuery</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>a8163e21b7d5a7ba169e864b2ac2ede84</anchor>
      <arglist>(const std::string &amp;query, QueryCallback callback)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>executeTransaction</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>af4881399a90f98062b3093ebc1945315</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;queries, QueryCallback callback)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getLastError</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>a5f0f41e3cd13d8cdad070f7fbd775f57</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>ping</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>a8f065179d5790c23582b499f691525c0</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setConfig</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>ae3b7fef02a0ef6aac3a4810ad3af5fae</anchor>
      <arglist>(const Config &amp;config)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Config</type>
      <name>getConfig</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>ab5c8049be52b0538e91c90b640861aa8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; DatabaseConnection &gt;</type>
      <name>create</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>a4be25ffbdfce6214eb59d67eac36a6db</anchor>
      <arglist>(const Config &amp;config)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DatabaseConnection</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>a094d1e1cc8c5816d8135ac26987baf20</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DatabaseConnection</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>a6eba5d379394c179588f4d2bda91f725</anchor>
      <arglist>(const DatabaseConnection &amp;)=delete</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>DatabaseConnection &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d93/classsatox_1_1nft_1_1DatabaseConnection.html</anchorfile>
      <anchor>aa1a21c97332cee522f0cfa8d2dbc1bbe</anchor>
      <arglist>(const DatabaseConnection &amp;)=delete</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::DatabaseData</name>
    <filename>db/d15/structsatox_1_1database_1_1DatabaseData.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>db/d15/structsatox_1_1database_1_1DatabaseData.html</anchorfile>
      <anchor>a29d4c5b97daea7a51e5c383c74779a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, TableData &gt;</type>
      <name>tables</name>
      <anchorfile>db/d15/structsatox_1_1database_1_1DatabaseData.html</anchorfile>
      <anchor>adf9a5df0be549752f5c4fb023fc15d04</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::DatabaseException</name>
    <filename>d4/d35/classsatox_1_1database_1_1DatabaseException.html</filename>
    <member kind="function">
      <type></type>
      <name>DatabaseException</name>
      <anchorfile>d4/d35/classsatox_1_1database_1_1DatabaseException.html</anchorfile>
      <anchor>ad07f1221f1ac70dcf918e0dc3ac009ee</anchor>
      <arglist>(DatabaseErrorCode code, const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>d4/d35/classsatox_1_1database_1_1DatabaseException.html</anchorfile>
      <anchor>a86a99a4206d19745d7cda6e4bc9190a5</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>DatabaseErrorCode</type>
      <name>code</name>
      <anchorfile>d4/d35/classsatox_1_1database_1_1DatabaseException.html</anchorfile>
      <anchor>ac4b03e2d9ce1c676a728d3d06475bdc8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>message</name>
      <anchorfile>d4/d35/classsatox_1_1database_1_1DatabaseException.html</anchorfile>
      <anchor>a88813c28bec819804de644f1a11b49a9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::DatabaseHealth</name>
    <filename>d3/da4/structsatox_1_1database_1_1DatabaseHealth.html</filename>
    <member kind="variable">
      <type>DatabaseStatus</type>
      <name>status</name>
      <anchorfile>d3/da4/structsatox_1_1database_1_1DatabaseHealth.html</anchorfile>
      <anchor>aeecddb8a6810279843409e3375031d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>healthy</name>
      <anchorfile>d3/da4/structsatox_1_1database_1_1DatabaseHealth.html</anchorfile>
      <anchor>a8262e51d51cec89a6a41c7e390c89b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>d3/da4/structsatox_1_1database_1_1DatabaseHealth.html</anchorfile>
      <anchor>a8eb1cc3f6438bc51e4b461487c9b5111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastCheck</name>
      <anchorfile>d3/da4/structsatox_1_1database_1_1DatabaseHealth.html</anchorfile>
      <anchor>ac2a6142906d71a4d8ef49359b456e0c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>consecutiveFailures</name>
      <anchorfile>d3/da4/structsatox_1_1database_1_1DatabaseHealth.html</anchorfile>
      <anchor>a9b1f4a7e3ab850323523c24b9c83f896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>details</name>
      <anchorfile>d3/da4/structsatox_1_1database_1_1DatabaseHealth.html</anchorfile>
      <anchor>ac73c3fd6d6c577daafd00db462be4974</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::DatabaseInitializationException</name>
    <filename>d2/dc2/classsatox_1_1database_1_1DatabaseInitializationException.html</filename>
    <base>satox::database::DatabaseException</base>
    <member kind="function">
      <type></type>
      <name>DatabaseInitializationException</name>
      <anchorfile>d2/dc2/classsatox_1_1database_1_1DatabaseInitializationException.html</anchorfile>
      <anchor>a31ebfef1b12f6a6f5911f867ae8f9d49</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::DatabaseManager</name>
    <filename>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</filename>
    <class kind="struct">satox::core::DatabaseManager::DatabaseConfig</class>
    <class kind="class">satox::core::DatabaseManager::Impl</class>
    <class kind="struct">satox::core::DatabaseManager::QueryResult</class>
    <class kind="struct">satox::core::DatabaseManager::Transaction</class>
    <member kind="function">
      <type></type>
      <name>DatabaseManager</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a3c10eaff361a111d0471f089fcd34b4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DatabaseManager</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>ae489e2937e49302a92600cabb00d219f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a86843c5c1a1baabd9e966eabc30218a0</anchor>
      <arglist>(const DatabaseConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>connect</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a60a2434e0e1b9779e5e9e4d40b0dcda7</anchor>
      <arglist>(DatabaseType type, const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a33aac7f15e4fe4f28f2228903ee8db24</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>executeQuery</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a94cb9d365f2a7a9b47d6ed852df8e74b</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;query, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>executeTransaction</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>ae04c87f7b10e69e1bda942b0d92c9007</anchor>
      <arglist>(const std::string &amp;id, const std::vector&lt; std::string &gt; &amp;queries, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>Transaction</type>
      <name>beginTransaction</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>af2ba1af3af66e68ad292ce06dba64091</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>commitTransaction</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>aacfa4b9ac6bb597b7a797cf0a440d8cb</anchor>
      <arglist>(const std::string &amp;transaction_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rollbackTransaction</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a39e2ab83e69a9d01674aaddc945e0696</anchor>
      <arglist>(const std::string &amp;transaction_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setMaxConnections</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a4832b194696e8c2cde92efebfd2917f1</anchor>
      <arglist>(int max_connections)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getActiveConnections</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a70b1a658304ece0a3d03fd285e7f4b19</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAvailableConnections</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a22b6290616c6e34adc17fe8edf73521e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backup</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a45e56fa0db8666fef7b6881b1075af2b</anchor>
      <arglist>(const std::string &amp;backup_path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restore</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>affd9508377f013d6f88b2efce3d64c26</anchor>
      <arglist>(const std::string &amp;backup_path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>ab1c34b04ef2585c4e3b7e23d7a596c37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearError</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>a763542811d3e571db287687c19bd4062</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d2/d66/classsatox_1_1core_1_1DatabaseManager.html</anchorfile>
      <anchor>af6d7b7a63d0fba186d355da8aa1ca090</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::DatabaseManager</name>
    <filename>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</filename>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;operation, bool success, const std::string &amp;error)&gt;</type>
      <name>DatabaseCallback</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a1c951381eba93a4757e6d8b95cedf31b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(bool connected, const std::string &amp;details)&gt;</type>
      <name>ConnectionCallback</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a2835844c36daf626aad00dc43e6386aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const DatabaseHealth &amp;health)&gt;</type>
      <name>HealthCallback</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a712584403ecb2fa72a9419d8d01229f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>aa4b16650bd0ee6bfd2fa822da73e785f</anchor>
      <arglist>(const DatabaseConfig &amp;config=DatabaseConfig{})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a654c51fe9f52f185db69c9f663139a2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a1a780f772d445b2e1f54b266b9347d5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConfig</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>aa65b5cc72f48a479fba06a0ca48e7a70</anchor>
      <arglist>(const DatabaseConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>DatabaseConfig</type>
      <name>getConfig</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>aee0fb9ce0a776f9c0eaa19005a84ddbb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateConfig</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a20c696a2d1f6b727047215a7857f15c7</anchor>
      <arglist>(const DatabaseConfig &amp;config) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createDatabase</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ac3b40406766cd08437aef73d9ef59569</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteDatabase</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>aa379c972eae75a47f2e914f0a02f4702</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>useDatabase</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ac2fb5271098b86839ca70a300791a7fb</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listDatabases</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a2ae4f323f19e41a2d1d54bed4a930ebc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>databaseExists</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>aa889d54846742da667a18fef095f7f71</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createTable</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ac3db052ed6860f3513bf658062823ad3</anchor>
      <arglist>(const std::string &amp;name, const nlohmann::json &amp;schema)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteTable</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a3d7f9c81a11b7e31d9c8a1e83639ea73</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tableExists</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ad014dd3c0a6f15a80f3b0b8f890e96f4</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listTables</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>afeb7903f7ecb98b2b9baa916932d1631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getTableSchema</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a9939cb2acef5b5cd66d0d1f41cdb2b0b</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insert</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a918a81ebf5cf163c56190683be0a3d12</anchor>
      <arglist>(const std::string &amp;table, const nlohmann::json &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ac84466c7ec1c60f65df0df6213ded2a1</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id, const nlohmann::json &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a72d48af933aefcb0b4216238ca74a8b5</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>find</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>aff3a8fdb976f5c17f1b4d14f6ba96ad2</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>query</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>abeddf579bf32d6a664c50805742ded25</anchor>
      <arglist>(const std::string &amp;table, const nlohmann::json &amp;query)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginTransaction</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a401cef7093f60b1fbc1e21d352d88aab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>commitTransaction</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a486197fb5f082ed99409c87c5e207ff9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rollbackTransaction</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a177a56086b276fc82d07418ededa4c07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInTransaction</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a481d68889f84aa94f0b9f9e71fd95d06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createIndex</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>aa50fbbd20006f0b7d9f27d867e1084ec</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;field)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dropIndex</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ae022f7673e4dc45d9d49270901b24f1b</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;field)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listIndexes</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ac772be0101d418db30b24a06e8be3b36</anchor>
      <arglist>(const std::string &amp;table)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createBackup</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a69e95593746e7c5b97c09ae34810d339</anchor>
      <arglist>(const std::string &amp;backupPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restoreFromBackup</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a710a376f3bb057a6b538c7f6d1992949</anchor>
      <arglist>(const std::string &amp;backupPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a7ff6fca767c7beac8d108c176c9c5d27</anchor>
      <arglist>(const std::string &amp;connectionString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a0ec521d42c3122390a454fd24292cc49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>afbbc576501ff5797117ad460d0f36284</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reconnect</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a719c714e030c63fa8fb32c8067006910</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxConnections</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>abc61526a06d50b71f80e827afe3f595a</anchor>
      <arglist>(size_t max)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getMaxConnections</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a294240f5435e96ffd6ceb903ed4e6bb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionTimeout</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>affc24bbd4444e918dd95a8fcfbe8a6bd</anchor>
      <arglist>(size_t milliseconds)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getConnectionTimeout</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a5ae61847dfee5f4054bf1ec437e03d47</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDatabaseCallback</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>af2cdf7f940c044733a9f1b51ea95fdbd</anchor>
      <arglist>(DatabaseCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionCallback</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a753cda4e7dbed8140907dc65113cab92</anchor>
      <arglist>(ConnectionCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHealthCallback</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ad9595c0b2158ef8eb336e1fe0b4790c9</anchor>
      <arglist>(HealthCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCallbacks</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ac62c0a2236670673e66f785179d2708b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DatabaseStats</type>
      <name>getStats</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a11eb6fe2df2cdd643e31ac5041a3672b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>aad4b6560b7e9938a4667ee66a50c385a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DatabaseHealth</type>
      <name>getHealth</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a613d3bd49ca24eeeffb290f2e42696a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>aa1d5a833b37bfb77a6318b16d6f9ffdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>performHealthCheck</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a5e5d9fa0e8cb7a2e6cd0ec5ce2b78213</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getHealthStatus</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>adffc7d3bd20465ada40a75f18753e8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DatabaseErrorCode</type>
      <name>getLastErrorCode</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a6b2bef491416cc1395bc38cc952705ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a8abc9baa72661e795c633f7a31e7fe70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ab63aa3ca3bb8fbc546bfa2aada27cb53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Version</type>
      <name>getVersion</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>a55c567ac6a2454419b359a614e8986ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DatabaseManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>df/dcb/classsatox_1_1database_1_1DatabaseManager.html</anchorfile>
      <anchor>ab3e8f0d2dfff4e964c87b6a7277ef731</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::DatabaseOperationException</name>
    <filename>d2/d82/classsatox_1_1database_1_1DatabaseOperationException.html</filename>
    <base>satox::database::DatabaseException</base>
    <member kind="function">
      <type></type>
      <name>DatabaseOperationException</name>
      <anchorfile>d2/d82/classsatox_1_1database_1_1DatabaseOperationException.html</anchorfile>
      <anchor>a5867e7ad0f3abdb3802519c6df78ec6a</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::DatabaseResult</name>
    <filename>d8/dd6/structsatox_1_1database_1_1DatabaseResult.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>d8/dd6/structsatox_1_1database_1_1DatabaseResult.html</anchorfile>
      <anchor>a6213ee1e9e1636733485c8541364d761</anchor>
      <arglist>(const DatabaseResult &amp;other) const</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d8/dd6/structsatox_1_1database_1_1DatabaseResult.html</anchorfile>
      <anchor>ae8dd08a6a8c4a8a51d467255f382161c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d8/dd6/structsatox_1_1database_1_1DatabaseResult.html</anchorfile>
      <anchor>a6b49cc822220118ffd319bf8d53a9e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>d8/dd6/structsatox_1_1database_1_1DatabaseResult.html</anchorfile>
      <anchor>a97c73c1bc6b5f62e4173f22035bcd6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>duration</name>
      <anchorfile>d8/dd6/structsatox_1_1database_1_1DatabaseResult.html</anchorfile>
      <anchor>ab8c203fe6f2484487423ff09bda0d6f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::DatabaseStats</name>
    <filename>df/d6a/structsatox_1_1database_1_1DatabaseStats.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>totalOperations</name>
      <anchorfile>df/d6a/structsatox_1_1database_1_1DatabaseStats.html</anchorfile>
      <anchor>aa79b72e83175326c11a05637c573eb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>successfulOperations</name>
      <anchorfile>df/d6a/structsatox_1_1database_1_1DatabaseStats.html</anchorfile>
      <anchor>addfe6166fc3c54ff1e1f1df40e16b80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>failedOperations</name>
      <anchorfile>df/d6a/structsatox_1_1database_1_1DatabaseStats.html</anchorfile>
      <anchor>a88841708b58cba5c0b41d41a72c07723</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastOperation</name>
      <anchorfile>df/d6a/structsatox_1_1database_1_1DatabaseStats.html</anchorfile>
      <anchor>aab836210933cf96faa738f39376ff467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>averageOperationTime</name>
      <anchorfile>df/d6a/structsatox_1_1database_1_1DatabaseStats.html</anchorfile>
      <anchor>a880e3aa545b5f691620ec71fa13ba4e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>df/d6a/structsatox_1_1database_1_1DatabaseStats.html</anchorfile>
      <anchor>a21f33e6a1426221acff890b448edd86e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::DataModel</name>
    <filename>df/d55/classsatox_1_1database_1_1DataModel.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DataModel</name>
      <anchorfile>df/d55/classsatox_1_1database_1_1DataModel.html</anchorfile>
      <anchor>aeaa74621685e5d8cc29f86147622516c</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>df/d55/classsatox_1_1database_1_1DataModel.html</anchorfile>
      <anchor>a83221c4aed1e380a58f0aeaf3b188b72</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fromJson</name>
      <anchorfile>df/d55/classsatox_1_1database_1_1DataModel.html</anchorfile>
      <anchor>adea83b90826e9a979ddfd75107dcf8ae</anchor>
      <arglist>(const nlohmann::json &amp;json)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getTableName</name>
      <anchorfile>df/d55/classsatox_1_1database_1_1DataModel.html</anchorfile>
      <anchor>a0a76007ad95a4ca24b0d38bc3c8f08c9</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::ContentDistribution::DistributionStatus</name>
    <filename>d5/d46/structsatox_1_1ipfs_1_1ContentDistribution_1_1DistributionStatus.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>contentHash</name>
      <anchorfile>d5/d46/structsatox_1_1ipfs_1_1ContentDistribution_1_1DistributionStatus.html</anchorfile>
      <anchor>ac6fb1af5d6db863d4b063732f75ddac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>d5/d46/structsatox_1_1ipfs_1_1ContentDistribution_1_1DistributionStatus.html</anchorfile>
      <anchor>a2bbfc92fd334607e3ca3cebee70ec02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>progress</name>
      <anchorfile>d5/d46/structsatox_1_1ipfs_1_1ContentDistribution_1_1DistributionStatus.html</anchorfile>
      <anchor>a38e7c7facc46091c7b4d895c0a3d1ba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d5/d46/structsatox_1_1ipfs_1_1ContentDistribution_1_1DistributionStatus.html</anchorfile>
      <anchor>a79e2a2cb8bd92e0663d16852b3d0fb6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>completedNodes</name>
      <anchorfile>d5/d46/structsatox_1_1ipfs_1_1ContentDistribution_1_1DistributionStatus.html</anchorfile>
      <anchor>af5b7b6ba2993fb0bb5e8816887f85318</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>failedNodes</name>
      <anchorfile>d5/d46/structsatox_1_1ipfs_1_1ContentDistribution_1_1DistributionStatus.html</anchorfile>
      <anchor>ad7098a4638ba16d0f009ec91454286a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>startTime</name>
      <anchorfile>d5/d46/structsatox_1_1ipfs_1_1ContentDistribution_1_1DistributionStatus.html</anchorfile>
      <anchor>a5b8e2e663f964aea788a8a1fbe2e5437</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>endTime</name>
      <anchorfile>d5/d46/structsatox_1_1ipfs_1_1ContentDistribution_1_1DistributionStatus.html</anchorfile>
      <anchor>a6c3cfc2128983fc160f2fd721a6fdf22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::ContentDistribution::Error</name>
    <filename>da/dd3/structsatox_1_1ipfs_1_1ContentDistribution_1_1Error.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>code</name>
      <anchorfile>da/dd3/structsatox_1_1ipfs_1_1ContentDistribution_1_1Error.html</anchorfile>
      <anchor>a7af505d16adcd92fa122233d16fc565d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>da/dd3/structsatox_1_1ipfs_1_1ContentDistribution_1_1Error.html</anchorfile>
      <anchor>af676b5e31dddcd3dab3e28ddb96cc53a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::ContentStorage::Error</name>
    <filename>db/d70/structsatox_1_1ipfs_1_1ContentStorage_1_1Error.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>code</name>
      <anchorfile>db/d70/structsatox_1_1ipfs_1_1ContentStorage_1_1Error.html</anchorfile>
      <anchor>a6dbf62349189d3f9b03033b84a0d7b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>db/d70/structsatox_1_1ipfs_1_1ContentStorage_1_1Error.html</anchorfile>
      <anchor>aed49ed67cac0cca8a0228840e558c337</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTManager::Error</name>
    <filename>de/d5f/structsatox_1_1nft_1_1NFTManager_1_1Error.html</filename>
    <member kind="function">
      <type></type>
      <name>Error</name>
      <anchorfile>de/d5f/structsatox_1_1nft_1_1NFTManager_1_1Error.html</anchorfile>
      <anchor>a3b4d0ed81db76ff9c6bc22fbed0f9179</anchor>
      <arglist>(int c=0, const std::string &amp;msg=&quot;&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>code</name>
      <anchorfile>de/d5f/structsatox_1_1nft_1_1NFTManager_1_1Error.html</anchorfile>
      <anchor>a0ffcf5a8652ebcdec5cb1878fb6808aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>de/d5f/structsatox_1_1nft_1_1NFTManager_1_1Error.html</anchorfile>
      <anchor>a2b05c29a0a5059fa5d4235e169cfa501</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTStorage::Error</name>
    <filename>d8/db8/structsatox_1_1nft_1_1NFTStorage_1_1Error.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>code</name>
      <anchorfile>d8/db8/structsatox_1_1nft_1_1NFTStorage_1_1Error.html</anchorfile>
      <anchor>ac3d934e1885b6206e0b09a473f9a22d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>d8/db8/structsatox_1_1nft_1_1NFTStorage_1_1Error.html</anchorfile>
      <anchor>ac8229abbfe7c850f5ae8ded50cb30b60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTValidator::Error</name>
    <filename>de/d1b/structsatox_1_1nft_1_1NFTValidator_1_1Error.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>code</name>
      <anchorfile>de/d1b/structsatox_1_1nft_1_1NFTValidator_1_1Error.html</anchorfile>
      <anchor>ab4f337edc868e08993a0d3d22de40175</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>de/d1b/structsatox_1_1nft_1_1NFTValidator_1_1Error.html</anchorfile>
      <anchor>ac59ac234a25569211e5d4e19ac9b6bab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::AddressManager::Error</name>
    <filename>d0/db2/structsatox_1_1wallet_1_1AddressManager_1_1Error.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>code</name>
      <anchorfile>d0/db2/structsatox_1_1wallet_1_1AddressManager_1_1Error.html</anchorfile>
      <anchor>a233c2238711ec711b0f5a5043830442c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>d0/db2/structsatox_1_1wallet_1_1AddressManager_1_1Error.html</anchorfile>
      <anchor>ae0148989232e0c3d403d990da5c2ee3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::NFTManager::ErrorHandler</name>
    <filename>d2/df1/classsatox_1_1nft_1_1NFTManager_1_1ErrorHandler.html</filename>
    <class kind="struct">satox::nft::NFTManager::ErrorHandler::ErrorRecord</class>
    <member kind="function">
      <type></type>
      <name>ErrorHandler</name>
      <anchorfile>d2/df1/classsatox_1_1nft_1_1NFTManager_1_1ErrorHandler.html</anchorfile>
      <anchor>acd151c8b9ae51e2ebb7291ebff31d9da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ErrorHandler</name>
      <anchorfile>d2/df1/classsatox_1_1nft_1_1NFTManager_1_1ErrorHandler.html</anchorfile>
      <anchor>aa0bdca09d28bcdb071488ff1bd3c275f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordError</name>
      <anchorfile>d2/df1/classsatox_1_1nft_1_1NFTManager_1_1ErrorHandler.html</anchorfile>
      <anchor>a7519ca406162429e51f2107bf0f84fec</anchor>
      <arglist>(const NFTError &amp;error)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isErrorActive</name>
      <anchorfile>d2/df1/classsatox_1_1nft_1_1NFTManager_1_1ErrorHandler.html</anchorfile>
      <anchor>ac0af2699ae20b5a1a9aa83e8ed34ba1c</anchor>
      <arglist>(const std::string &amp;error_id) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFTError &gt;</type>
      <name>getErrorHistory</name>
      <anchorfile>d2/df1/classsatox_1_1nft_1_1NFTManager_1_1ErrorHandler.html</anchorfile>
      <anchor>a6ef369b62d7027f14c7ed7081fb4ba29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorCallback</name>
      <anchorfile>d2/df1/classsatox_1_1nft_1_1NFTManager_1_1ErrorHandler.html</anchorfile>
      <anchor>abe6bf2f342cdd35b24e5f0e1787060ec</anchor>
      <arglist>(std::function&lt; void(const NFTError &amp;)&gt; callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d2/df1/classsatox_1_1nft_1_1NFTManager_1_1ErrorHandler.html</anchorfile>
      <anchor>a1ee55504a8ba79e2bbd2e13636056f38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NFTError</type>
      <name>getLastError</name>
      <anchorfile>d2/df1/classsatox_1_1nft_1_1NFTManager_1_1ErrorHandler.html</anchorfile>
      <anchor>a0daadbcc690d93bd6855cb7f8224399c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTManager::ErrorHandler::ErrorRecord</name>
    <filename>db/d15/structsatox_1_1nft_1_1NFTManager_1_1ErrorHandler_1_1ErrorRecord.html</filename>
    <member kind="function">
      <type></type>
      <name>ErrorRecord</name>
      <anchorfile>db/d15/structsatox_1_1nft_1_1NFTManager_1_1ErrorHandler_1_1ErrorRecord.html</anchorfile>
      <anchor>acf85ce6ba33ecd8d17899bc85e0fd00f</anchor>
      <arglist>(const NFTError &amp;err=NFTError(), const std::chrono::system_clock::time_point &amp;ts=std::chrono::system_clock::now(), bool active=true)</arglist>
    </member>
    <member kind="variable">
      <type>NFTError</type>
      <name>error</name>
      <anchorfile>db/d15/structsatox_1_1nft_1_1NFTManager_1_1ErrorHandler_1_1ErrorRecord.html</anchorfile>
      <anchor>a3389a11680f7001a043659069078b44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>db/d15/structsatox_1_1nft_1_1NFTManager_1_1ErrorHandler_1_1ErrorRecord.html</anchorfile>
      <anchor>a2b2806e2d80e93393a7b19873fe115ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_active</name>
      <anchorfile>db/d15/structsatox_1_1nft_1_1NFTManager_1_1ErrorHandler_1_1ErrorRecord.html</anchorfile>
      <anchor>ab4f236d131b540d7b777aa075a7ec12e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetManager::ErrorRecoveryConfig</name>
    <filename>d1/d4e/structsatox_1_1asset_1_1AssetManager_1_1ErrorRecoveryConfig.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>max_retry_attempts</name>
      <anchorfile>d1/d4e/structsatox_1_1asset_1_1AssetManager_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>a5e50c7eacf00d17b0244f029280b8c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>retry_delay</name>
      <anchorfile>d1/d4e/structsatox_1_1asset_1_1AssetManager_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>abd1b1c4b1566672f52ecd44b55010e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>recovery_timeout</name>
      <anchorfile>d1/d4e/structsatox_1_1asset_1_1AssetManager_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>a9bc7156ebd8aaa852a8bd2792574f83a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_auto_recovery</name>
      <anchorfile>d1/d4e/structsatox_1_1asset_1_1AssetManager_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>a541255ec8744f27b1b5b16495829bd3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_recovery_queue_size</name>
      <anchorfile>d1/d4e/structsatox_1_1asset_1_1AssetManager_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>a2613b59a44584b3839654488e97c164a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::ErrorRecoveryConfig</name>
    <filename>d5/ddb/structsatox_1_1blockchain_1_1ErrorRecoveryConfig.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>max_retry_attempts</name>
      <anchorfile>d5/ddb/structsatox_1_1blockchain_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>a53e1f487958a293457804906ba86d55c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>retry_delay</name>
      <anchorfile>d5/ddb/structsatox_1_1blockchain_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>a889c22ff9b264c66bf7c1de90e36bb51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>recovery_timeout</name>
      <anchorfile>d5/ddb/structsatox_1_1blockchain_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>af9f9e9944286a430791d4693fce3d753</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_auto_recovery</name>
      <anchorfile>d5/ddb/structsatox_1_1blockchain_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>ab996ecdf0a46fee5fb61499ab5cd323b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_recovery_queue_size</name>
      <anchorfile>d5/ddb/structsatox_1_1blockchain_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>a4f61e3acf761b9e66cabecdfabc29780</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::ErrorRecoveryConfig</name>
    <filename>d2/dad/structsatox_1_1core_1_1TransactionManager_1_1ErrorRecoveryConfig.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_retry_attempts</name>
      <anchorfile>d2/dad/structsatox_1_1core_1_1TransactionManager_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>aa07755e8a3fb8914db336023302ee3da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>retry_delay_ms</name>
      <anchorfile>d2/dad/structsatox_1_1core_1_1TransactionManager_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>ad6f6f6bf1eca665c39ea8f30b4e1e353</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>recovery_timeout_ms</name>
      <anchorfile>d2/dad/structsatox_1_1core_1_1TransactionManager_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>a638250251dd8e54e4e7646644a108188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_auto_recovery</name>
      <anchorfile>d2/dad/structsatox_1_1core_1_1TransactionManager_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>ad07d359fc545281df8d1a69d8c270d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_recovery_queue_size</name>
      <anchorfile>d2/dad/structsatox_1_1core_1_1TransactionManager_1_1ErrorRecoveryConfig.html</anchorfile>
      <anchor>a62871c194d0db806576ec97011fde347</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::EventManager::Event</name>
    <filename>d2/da2/structsatox_1_1core_1_1EventManager_1_1Event.html</filename>
    <member kind="variable">
      <type>EventType</type>
      <name>type</name>
      <anchorfile>d2/da2/structsatox_1_1core_1_1EventManager_1_1Event.html</anchorfile>
      <anchor>ac4438886f8ade0a3117585c6fa65f290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d2/da2/structsatox_1_1core_1_1EventManager_1_1Event.html</anchorfile>
      <anchor>a475fe2e6362b0c31a53d49d5055ebec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>source</name>
      <anchorfile>d2/da2/structsatox_1_1core_1_1EventManager_1_1Event.html</anchorfile>
      <anchor>acc9850bf963cb0434d53a35c77ea71bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Priority</type>
      <name>priority</name>
      <anchorfile>d2/da2/structsatox_1_1core_1_1EventManager_1_1Event.html</anchorfile>
      <anchor>ae6fdb130fe05de738de13a7c52a27b5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>d2/da2/structsatox_1_1core_1_1EventManager_1_1Event.html</anchorfile>
      <anchor>a84ed09b16fd1678fe0afc12ea9bab506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>d2/da2/structsatox_1_1core_1_1EventManager_1_1Event.html</anchorfile>
      <anchor>a4339a1b8f65a30fce716a12063838783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>correlationId</name>
      <anchorfile>d2/da2/structsatox_1_1core_1_1EventManager_1_1Event.html</anchorfile>
      <anchor>a45a340b92db65f8e5a4898a71575aba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>traceId</name>
      <anchorfile>d2/da2/structsatox_1_1core_1_1EventManager_1_1Event.html</anchorfile>
      <anchor>a2d666ff7d3fd6a697df39541e00a6565</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::EventManager</name>
    <filename>d9/db4/classsatox_1_1core_1_1EventManager.html</filename>
    <class kind="struct">satox::core::EventManager::Event</class>
    <class kind="struct">satox::core::EventManager::EventStats</class>
    <class kind="struct">satox::core::EventManager::Subscription</class>
    <member kind="enumeration">
      <type></type>
      <name>EventType</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>af82bd1614e01d42b0bb9a1a96f45dd36</anchor>
      <arglist></arglist>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36afa177138f94a7ea01f549b1aa7893d03">SYSTEM</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36a25835188a2355e9530d3a10fcbe4c65b">NETWORK</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36ae4b25d8c911628d527b2c97039a9f593">BLOCKCHAIN</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36a5dfbfc491808ab7c150714aa58105474">WALLET</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36ae6bed345f53943469741d7295552fcd4">TRANSACTION</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36a5a3a9300fec880f9634e271a66bde419">ASSET</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36aa692c529f241845ae00b47284e09e76a">NFT</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36a6abe0c37d965e4a8bd11571378674642">IPFS</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36ab1379b4ce097a8afd5d99abab0875a8e">DATABASE</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36a08e1be4b785493d9fc2ae52c5ba9ab2e">CACHE</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36a73e99d350a4aa6f1a5af04ec29173f73">CONFIG</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36a219ce424cc367fba8a5a0210792d4dc0">SECURITY</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="af82bd1614e01d42b0bb9a1a96f45dd36a72baef04098f035e8a320b03ad197818">CUSTOM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Priority</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a52d1c1d55a7f4ecafef5bc82503d420b</anchor>
      <arglist></arglist>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="a52d1c1d55a7f4ecafef5bc82503d420ba41bc94cbd8eebea13ce0491b2ac11b88">LOW</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="a52d1c1d55a7f4ecafef5bc82503d420ba1e23852820b9154316c7c06e2b7ba051">NORMAL</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="a52d1c1d55a7f4ecafef5bc82503d420bab89de3b4b81c4facfac906edf29aec8c">HIGH</enumvalue>
      <enumvalue file="d9/db4/classsatox_1_1core_1_1EventManager.html" anchor="a52d1c1d55a7f4ecafef5bc82503d420ba99cd1c61610c76a57cb8d10d6df6b870">CRITICAL</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Event &amp;)&gt;</type>
      <name>EventHandler</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>ae15014e9e678c00c51cb161def1560cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; bool(const Event &amp;)&gt;</type>
      <name>EventFilter</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>ae30d46bc4e7b3e1ed8c18b192fc13a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>SubscriptionToken</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a587e320ac08536202944ea2675518f17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EventManager</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>abc317f95fa5fdf2af2a774295a628fe8</anchor>
      <arglist>(const EventManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>EventManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>ab0bc027867ac26ee54b6b18d435e22f0</anchor>
      <arglist>(const EventManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a0ef916c7b65815631d962245b3ce4456</anchor>
      <arglist>(size_t maxQueueSize=1000, size_t numWorkers=4)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a3425c586fe03b38714ba15426ea6640d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>publishEvent</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a3e312d83321dd544e18be1534798ba29</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>publishEvent</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a48ef383bfbde9daca1abda67923b49dc</anchor>
      <arglist>(EventType type, const std::string &amp;name, const nlohmann::json &amp;data=nlohmann::json::object(), Priority priority=Priority::NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>publishEventAsync</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a8f0de1f2b65a56a3ef9f90c4d3760e9c</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>publishEventAsync</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>af67a40b1972ace4eb51d40183b119648</anchor>
      <arglist>(EventType type, const std::string &amp;name, const nlohmann::json &amp;data=nlohmann::json::object(), Priority priority=Priority::NORMAL)</arglist>
    </member>
    <member kind="function">
      <type>SubscriptionToken</type>
      <name>subscribe</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a4e401072628211bda0baac046e53939b</anchor>
      <arglist>(EventType type, EventHandler handler, bool async=false, std::chrono::milliseconds timeout=std::chrono::milliseconds(0))</arglist>
    </member>
    <member kind="function">
      <type>SubscriptionToken</type>
      <name>subscribe</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a9a36ec81fb50aa8a49bb914a2ed7edd3</anchor>
      <arglist>(EventType type, const std::string &amp;name, EventHandler handler, bool async=false, std::chrono::milliseconds timeout=std::chrono::milliseconds(0))</arglist>
    </member>
    <member kind="function">
      <type>SubscriptionToken</type>
      <name>subscribe</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a7e9ec824165e52570849f77cc0156d56</anchor>
      <arglist>(EventFilter filter, EventHandler handler, bool async=false, std::chrono::milliseconds timeout=std::chrono::milliseconds(0))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unsubscribe</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a5822ceafff5a61d101229ae0d05fd76a</anchor>
      <arglist>(SubscriptionToken token)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a2f1971e31dfea4d569e1cd74cba87807</anchor>
      <arglist>(EventType type, EventHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>aba6acad9afca2f7b08948b7ade59d8b8</anchor>
      <arglist>(EventType type, const std::string &amp;name, EventHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>aecbad94818964dd2fe3c3b2aee296b63</anchor>
      <arglist>(EventFilter filter, EventHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processEvent</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>ac036df45166e5c1399e5f9af3c2f14d3</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processEventAsync</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>aa1e4b21c84e91a0b84e3c2f63fec984f</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEvents</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a7731b2845cf553b44de0e2df0930d829</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waitForEvents</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a48d629fbc39bfded5a7591f5fe1b74a7</anchor>
      <arglist>(std::chrono::milliseconds timeout=std::chrono::milliseconds(0))</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Event &gt;</type>
      <name>getEvents</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a94e0ccacf2011702a60245edaacdf2a0</anchor>
      <arglist>(EventType type, std::chrono::system_clock::time_point start, std::chrono::system_clock::time_point end)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Event &gt;</type>
      <name>getEvents</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a562dbfa20e092411c66d7c8ff1cf6a43</anchor>
      <arglist>(const std::string &amp;name, std::chrono::system_clock::time_point start, std::chrono::system_clock::time_point end)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Event &gt;</type>
      <name>getEvents</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>aed66f46ac1e83f9aa2df1a1d4b6b995e</anchor>
      <arglist>(EventFilter filter, std::chrono::system_clock::time_point start, std::chrono::system_clock::time_point end)</arglist>
    </member>
    <member kind="function">
      <type>EventStats</type>
      <name>getStats</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a4dbdd6c5f2270ac1ec668a801019b39c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a832a07b95a07a75fe89014269317ceb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableStats</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>aab685d68b95fcdb725b786d934813a94</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addFilter</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>aeea413d3a636b59fc4f931a708168418</anchor>
      <arglist>(EventType type, EventFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addFilter</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a0177ef7dd0e9ba7c483583732fd91c06</anchor>
      <arglist>(const std::string &amp;name, EventFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFilter</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a24c27547a7c7a73e89d943891704a9c4</anchor>
      <arglist>(EventType type, EventFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFilter</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a2c69e73d06988a6ed50ca49352b1b387</anchor>
      <arglist>(const std::string &amp;name, EventFilter filter)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>ac933f049b80fd15269c996752618e16f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>a54342ebfbdc2ea24d3c07e0fcff8b518</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EventManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d9/db4/classsatox_1_1core_1_1EventManager.html</anchorfile>
      <anchor>ae3ad14452c46f2aaa65cc18f2309d762</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::EventManager::EventStats</name>
    <filename>dc/d34/structsatox_1_1core_1_1EventManager_1_1EventStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>totalEvents</name>
      <anchorfile>dc/d34/structsatox_1_1core_1_1EventManager_1_1EventStats.html</anchorfile>
      <anchor>a237d5b689c1329b4d52cac4e8d4a0f23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>processedEvents</name>
      <anchorfile>dc/d34/structsatox_1_1core_1_1EventManager_1_1EventStats.html</anchorfile>
      <anchor>a6b9291af4be1bf20f123c2f94d408d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>failedEvents</name>
      <anchorfile>dc/d34/structsatox_1_1core_1_1EventManager_1_1EventStats.html</anchorfile>
      <anchor>a8a36ee0a73402fda4ad8183f7eef264b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>queuedEvents</name>
      <anchorfile>dc/d34/structsatox_1_1core_1_1EventManager_1_1EventStats.html</anchorfile>
      <anchor>a97d16d4e53fba00ad93de933020502df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>averageProcessingTime</name>
      <anchorfile>dc/d34/structsatox_1_1core_1_1EventManager_1_1EventStats.html</anchorfile>
      <anchor>a7486769ed3a4df1408d7f297155f10b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>maxProcessingTime</name>
      <anchorfile>dc/d34/structsatox_1_1core_1_1EventManager_1_1EventStats.html</anchorfile>
      <anchor>a95ca7f6ccdc9a6facd0532b20c9a9cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>minProcessingTime</name>
      <anchorfile>dc/d34/structsatox_1_1core_1_1EventManager_1_1EventStats.html</anchorfile>
      <anchor>acf8effc734b3fb61c1229afeaacd57ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::FeeEstimate</name>
    <filename>de/d3c/structsatox_1_1core_1_1TransactionManager_1_1FeeEstimate.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>fee_rate</name>
      <anchorfile>de/d3c/structsatox_1_1core_1_1TransactionManager_1_1FeeEstimate.html</anchorfile>
      <anchor>ac6c1f60be86ff93d1983f09bc5ca756f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>estimated_size</name>
      <anchorfile>de/d3c/structsatox_1_1core_1_1TransactionManager_1_1FeeEstimate.html</anchorfile>
      <anchor>a2db5952f03121655e377784e5991eb4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>estimated_fee</name>
      <anchorfile>de/d3c/structsatox_1_1core_1_1TransactionManager_1_1FeeEstimate.html</anchorfile>
      <anchor>ae124041a49d367b82b21b51f8cb9df37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>confidence</name>
      <anchorfile>de/d3c/structsatox_1_1core_1_1TransactionManager_1_1FeeEstimate.html</anchorfile>
      <anchor>a85d356632c39fd068a0f351ccdf99518</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::FirebaseConfig</name>
    <filename>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</filename>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>abc10afaba0e44267a5b2aa65f8c16d51</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a07a408cc70e398c9469ad92bfac95d1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FirebaseConfig</type>
      <name>fromJson</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a27d2867ac8bcf9909df8dd759a4eb06e</anchor>
      <arglist>(const nlohmann::json &amp;j)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>project_id</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a476359f349f774a7f60d2c7c027b1d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>private_key_id</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a9dbe5ddaf30e5c6e218214251724d03a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>private_key</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>adb382cc2b3d95850f2a56b5d7b34d116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>client_email</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>aec86a64f23671f3a2f71850931cae598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>client_id</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a3212a1f6e227cc4cde84f69b2048999e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>auth_uri</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a76fee5316ca5ac17f3a19c42ae294737</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>token_uri</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a4ef8b556f17a2265745d62ec153ca882</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>auth_provider_x509_cert_url</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a3a42a448f49814622e02b83c94bb2352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>client_x509_cert_url</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a35ffc8c09e04adaa15dffd8629b2d7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>database_url</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>ae439fbf702f24e3df12410165361fb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_auth</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a76d1417e8fcb99107b0519fbb739506b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_firestore</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a15a9a0ba00a600bced02b5370e7e5376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_realtime_db</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a337d12cb86716cd55957556d29852445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_storage</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a82c6217f93cd17904408ae833b24362c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_functions</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a44a97238220f445230f5a4de2aa5d7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>connection_timeout</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>aed424e8c3242a44a4d5a7472727bb810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_connections</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a2a4b8eb8fc1d513b1cab4fdca40b5710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_ssl</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>ae84168bc95557ea5a650970d2cacbaf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_logging</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>aefc9c01dede2d926e868a8969abe93b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>log_level</name>
      <anchorfile>d7/d9d/structsatox_1_1core_1_1FirebaseConfig.html</anchorfile>
      <anchor>a386782a2cb4388d92851cc4f61c3f5ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::FirebaseConnection</name>
    <filename>de/d6b/structsatox_1_1core_1_1FirebaseConnection.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>de/d6b/structsatox_1_1core_1_1FirebaseConnection.html</anchorfile>
      <anchor>a08c6341c05ce54144516dc5c62bc4f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FirebaseConfig</type>
      <name>config</name>
      <anchorfile>de/d6b/structsatox_1_1core_1_1FirebaseConnection.html</anchorfile>
      <anchor>ae6212e977505cacf85519d5676876b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CURL *</type>
      <name>curl_handle</name>
      <anchorfile>de/d6b/structsatox_1_1core_1_1FirebaseConnection.html</anchorfile>
      <anchor>a17046956f91079c2d8be325c02d38eaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>connected</name>
      <anchorfile>de/d6b/structsatox_1_1core_1_1FirebaseConnection.html</anchorfile>
      <anchor>a0601438b7d3dd96f20bdce23fc01236e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_activity</name>
      <anchorfile>de/d6b/structsatox_1_1core_1_1FirebaseConnection.html</anchorfile>
      <anchor>af0eee758c031cac5e230abf19a0ca54a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>access_token</name>
      <anchorfile>de/d6b/structsatox_1_1core_1_1FirebaseConnection.html</anchorfile>
      <anchor>ae0e7200aed9f70514a1a1c965b3b90ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>token_expiry</name>
      <anchorfile>de/d6b/structsatox_1_1core_1_1FirebaseConnection.html</anchorfile>
      <anchor>a9e61d4c88dd17c292737328e5d912b08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::function&lt; void(const nlohmann::json &amp;)&gt; &gt;</type>
      <name>listeners</name>
      <anchorfile>de/d6b/structsatox_1_1core_1_1FirebaseConnection.html</anchorfile>
      <anchor>aa88ce982eb4f1dfcab1189cb00d10cbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::FirebaseManager</name>
    <filename>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</filename>
    <class kind="class">satox::core::FirebaseManager::Firestore</class>
    <class kind="struct">satox::core::FirebaseManager::Impl</class>
    <class kind="class">satox::core::FirebaseManager::RealtimeDatabase</class>
    <member kind="function">
      <type></type>
      <name>FirebaseManager</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>a1d92e08717324ee60b55c211f554a108</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FirebaseManager</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>ab9c25dac6cb5b6371bf855492cf2896b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>a6ca731fdfff6312f1c7508646517143a</anchor>
      <arglist>(const FirebaseConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>connect</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>aab118f4761069b25b34f0a5dd15fdc9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>a5d28d437ab1aedca795abfc44da266fb</anchor>
      <arglist>(const std::string &amp;connection_id)</arglist>
    </member>
    <member kind="function">
      <type>Firestore &amp;</type>
      <name>firestore</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>a8aaa959a69e7f224404d80d8166b1c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RealtimeDatabase &amp;</type>
      <name>realtime</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>a091bd55eeedd2d6cb23d0d548b246451</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>ae6070d90172835d54fce68a563917834</anchor>
      <arglist>(const std::string &amp;connection_id) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>abdeb42f45e0df328015b581541e2b9c2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearError</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>af1466bebe739b912c1ddefc26a9b825f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d5/db4/classsatox_1_1core_1_1FirebaseManager.html</anchorfile>
      <anchor>a19849f68e20a81da0daab4894676b884</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::FirebaseManager::Firestore</name>
    <filename>d0/df0/classsatox_1_1core_1_1FirebaseManager_1_1Firestore.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>getDocument</name>
      <anchorfile>d0/df0/classsatox_1_1core_1_1FirebaseManager_1_1Firestore.html</anchorfile>
      <anchor>a5f79a4c8e490b6e5d5cd45a08676273d</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;collection, const std::string &amp;document_id, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setDocument</name>
      <anchorfile>d0/df0/classsatox_1_1core_1_1FirebaseManager_1_1Firestore.html</anchorfile>
      <anchor>a9ae9da7f11cda61d10729580b032c6c5</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;collection, const std::string &amp;document_id, const nlohmann::json &amp;data, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateDocument</name>
      <anchorfile>d0/df0/classsatox_1_1core_1_1FirebaseManager_1_1Firestore.html</anchorfile>
      <anchor>a43f0650f3421a0f307dd416fcc9a70e9</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;collection, const std::string &amp;document_id, const nlohmann::json &amp;data, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteDocument</name>
      <anchorfile>d0/df0/classsatox_1_1core_1_1FirebaseManager_1_1Firestore.html</anchorfile>
      <anchor>ab7be2dbba0e15ea8a272f9e733c51587</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;collection, const std::string &amp;document_id, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>queryDocuments</name>
      <anchorfile>d0/df0/classsatox_1_1core_1_1FirebaseManager_1_1Firestore.html</anchorfile>
      <anchor>ac6a4ff6d5570f1abe5c154fa225798f5</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;collection, const nlohmann::json &amp;query, nlohmann::json &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletManager::HardwareWallet</name>
    <filename>d4/d06/structsatox_1_1wallet_1_1WalletManager_1_1HardwareWallet.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d4/d06/structsatox_1_1wallet_1_1WalletManager_1_1HardwareWallet.html</anchorfile>
      <anchor>a1717afd955174dec6a7123a4c26b0004</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>d4/d06/structsatox_1_1wallet_1_1WalletManager_1_1HardwareWallet.html</anchorfile>
      <anchor>a0d37ec7b3c623abb8ae14ea9abe4b6ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d4/d06/structsatox_1_1wallet_1_1WalletManager_1_1HardwareWallet.html</anchorfile>
      <anchor>aa60ef6ffc126625214982a7134119471</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>model</name>
      <anchorfile>d4/d06/structsatox_1_1wallet_1_1WalletManager_1_1HardwareWallet.html</anchorfile>
      <anchor>a598481989184ed724a81ea70d2486cfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>firmwareVersion</name>
      <anchorfile>d4/d06/structsatox_1_1wallet_1_1WalletManager_1_1HardwareWallet.html</anchorfile>
      <anchor>a4e9ca2847fcbecd97b25990503966cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d4/d06/structsatox_1_1wallet_1_1WalletManager_1_1HardwareWallet.html</anchorfile>
      <anchor>a1ebfa2ee3d85f8e9b7db1533a800a848</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>supportedFeatures</name>
      <anchorfile>d4/d06/structsatox_1_1wallet_1_1WalletManager_1_1HardwareWallet.html</anchorfile>
      <anchor>a9b4de6671f0c0be7031ee4351e7e32cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d4/d06/structsatox_1_1wallet_1_1WalletManager_1_1HardwareWallet.html</anchorfile>
      <anchor>a57eefcf1d040552208416d641ce82b2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::pqc::HybridCrypto</name>
    <filename>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</filename>
    <class kind="class">satox::security::pqc::HybridCrypto::Impl</class>
    <member kind="function">
      <type></type>
      <name>HybridCrypto</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a0df4980ee6f6e29c42f8c109b03243a3</anchor>
      <arglist>(MLKEM::SecurityLevel kemLevel=MLKEM::SecurityLevel::Level3, MLDSA::SecurityLevel dsaLevel=MLDSA::SecurityLevel::Level3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HybridCrypto</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a359c7441d41eff4b0e55fcde2057eeb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateHybridKeyPair</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>ae41c32e671e7b09ef78dd1728fc4d697</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>encrypt</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a38561f9efc29fb5c3b4649fac6e39667</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;ciphertext)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decrypt</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a5bfc98f37cade1de61fa301a3fe79c38</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;ciphertext, const std::vector&lt; uint8_t &gt; &amp;privateKey, std::vector&lt; uint8_t &gt; &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sign</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a6b81de3bb70db76ac508f8f93090374a</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;privateKey, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>ad49e57783cd3a92645d0e607a61707dc</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;signature, const std::vector&lt; uint8_t &gt; &amp;publicKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rotateKeys</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a5a1f29cdde44d36bc5b6e343276089d5</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;oldPrivateKey, std::vector&lt; uint8_t &gt; &amp;newPublicKey, std::vector&lt; uint8_t &gt; &amp;newPrivateKey)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a58d4eccde28f310417fe33d74e3e2dc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>adc0b4fed405ea427f8078e0c6963849d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCiphertextSize</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a8aa04ef774a5d88b1b4bb1c0d239cef3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSignatureSize</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a95357aa84d8ab19eb5f90f7d41c2bbf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a07b73548a004c0a7c6e5bb4abfdf5748</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a71ff8ab9eb7fa9ae53b884dd43cd2563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HybridCrypto</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a0df4980ee6f6e29c42f8c109b03243a3</anchor>
      <arglist>(MLKEM::SecurityLevel kemLevel=MLKEM::SecurityLevel::Level3, MLDSA::SecurityLevel dsaLevel=MLDSA::SecurityLevel::Level3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HybridCrypto</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a359c7441d41eff4b0e55fcde2057eeb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateHybridKeyPair</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>ae41c32e671e7b09ef78dd1728fc4d697</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>encrypt</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a38561f9efc29fb5c3b4649fac6e39667</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;ciphertext)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decrypt</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a5bfc98f37cade1de61fa301a3fe79c38</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;ciphertext, const std::vector&lt; uint8_t &gt; &amp;privateKey, std::vector&lt; uint8_t &gt; &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sign</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a6b81de3bb70db76ac508f8f93090374a</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;privateKey, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>ad49e57783cd3a92645d0e607a61707dc</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;signature, const std::vector&lt; uint8_t &gt; &amp;publicKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rotateKeys</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a5a1f29cdde44d36bc5b6e343276089d5</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;oldPrivateKey, std::vector&lt; uint8_t &gt; &amp;newPublicKey, std::vector&lt; uint8_t &gt; &amp;newPrivateKey)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a58d4eccde28f310417fe33d74e3e2dc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>adc0b4fed405ea427f8078e0c6963849d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCiphertextSize</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a8aa04ef774a5d88b1b4bb1c0d239cef3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSignatureSize</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a95357aa84d8ab19eb5f90f7d41c2bbf3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a07b73548a004c0a7c6e5bb4abfdf5748</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto.html</anchorfile>
      <anchor>a71ff8ab9eb7fa9ae53b884dd43cd2563</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::APIManager::Impl</name>
    <filename>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>a110550cb56c782e771e7d8dbc9d04644</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>a04296c697c8013af5d0f4c39b619c7a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>aed6b4288949e69758aad0b57ac867904</anchor>
      <arglist>(const Config &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>aae4e1f4e576f4ce387becfb3d766e938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>a791f7be56a42404dbfbb4426c34a5ca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>aa7489dba4bf24731a9c7bd45397bac02</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerEndpoint</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>ab7f8c237b5630a12ebe56de66e52d624</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;path, RequestHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unregisterEndpoint</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>a0d7226d8256c9e1935d41f64fc033e37</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerWebSocketHandler</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>aa0753214c500463c53475d1eefc14935</anchor>
      <arglist>(const std::string &amp;path, WebSocketHandler handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unregisterWebSocketHandler</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>a2f920109cb6d9cc7616f29b9d88c4d3e</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendWebSocketMessage</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>a8fae10d42dddf73e5e8ce1969b4f8af7</anchor>
      <arglist>(const std::string &amp;client_id, const WebSocketMessage &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastWebSocketMessage</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>abb126360ab05521129f1f4e0f202b3ec</anchor>
      <arglist>(const WebSocketMessage &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setRateLimit</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>a630eaa227d96e9f9a3cae002c75a856e</anchor>
      <arglist>(int requests_per_minute)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRateLimited</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>a388d164d0ef4b3299185579700807272</anchor>
      <arglist>(const std::string &amp;client_ip) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>a6bf73c608c8036de8adf65ea80dcda69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearError</name>
      <anchorfile>dd/d93/classsatox_1_1core_1_1APIManager_1_1Impl.html</anchorfile>
      <anchor>a93ccbf296dc2313392c7adc46192355f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::cloud::AWSManager::Impl</name>
    <filename>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>aa95977d8e6729a3ac0a6fc67dbd9bab6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>abf074ea960936ff65e1f141345e5d3a6</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>ae33c970a9f90aa5ad3077888a07b8049</anchor>
      <arglist>(const AWSConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>a54a5116f94bf9a653157370caee19724</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>executeQuery</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>a252523299b9db4308bae675f1880c9e6</anchor>
      <arglist>(const std::string &amp;service, const nlohmann::json &amp;)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>executeTransaction</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>af187100fd7d1d87ba313bafcb4ac497b</anchor>
      <arglist>(const std::string &amp;service, const std::vector&lt; nlohmann::json &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>uploadFile</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>a395375e3e7a46e2c5671b3f1c54397ea</anchor>
      <arglist>(const std::string &amp;bucket, const std::string &amp;path, const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>downloadFile</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>a8b5d511a3ef7918b17e68f810f324a75</anchor>
      <arglist>(const std::string &amp;bucket, const std::string &amp;path, const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>invokeFunction</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>ab59cc36b78fdd541fb32d2b594b460e3</anchor>
      <arglist>(const std::string &amp;function_name, const nlohmann::json &amp;)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getStatus</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>aa20c372ba6aba35978e6697906d29329</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d9/d48/classsatox_1_1core_1_1cloud_1_1AWSManager_1_1Impl.html</anchorfile>
      <anchor>af7fab25232da4ca975e33c6428986b71</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::cloud::FirebaseManager::Impl</name>
    <filename>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a32d5c6c1b7d8cc49f2cb4e4806923fa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>acc2c1b32dddff96dedf13f8d7a1674ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>ac36347915dd21a4fdafe718413fc9e80</anchor>
      <arglist>(const FirebaseConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>ac20fab8d5e7754c69a58a543c12b0f7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>readData</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>ac8fcc8bce1d084d37bce0d69930c2921</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>writeData</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a8b1dcbbb60017613b3faa2601ca1f57f</anchor>
      <arglist>(const std::string &amp;path, const nlohmann::json &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>updateData</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a1b25d43f2d1948c1b30def87461808bc</anchor>
      <arglist>(const std::string &amp;path, const nlohmann::json &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>deleteData</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>ad8ee145cfda6285f051cf9f971e78079</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>queryData</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>afedf4630733814d65944b8336439f7d3</anchor>
      <arglist>(const std::string &amp;path, const nlohmann::json &amp;query)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>executeQuery</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a7fa2fd7a803138b7c469143992078eb3</anchor>
      <arglist>(const std::string &amp;service, const nlohmann::json &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>executeTransaction</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a9b2dde8fb410319ac3b8edff6b32d142</anchor>
      <arglist>(const std::string &amp;service, const std::vector&lt; nlohmann::json &gt; &amp;actions)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>subscribe</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a0ddecbc4a4dbda7009f45f453a45490d</anchor>
      <arglist>(const std::string &amp;path, std::function&lt; void(const nlohmann::json &amp;)&gt; callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>abfc18ab68810dcb728ca662b8e989590</anchor>
      <arglist>(const std::string &amp;subscription_id)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>uploadFile</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>ac54bdd9161cd3705145765cf3ed7c05d</anchor>
      <arglist>(const std::string &amp;bucket, const std::string &amp;path, const std::string &amp;file_path)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>downloadFile</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a59a3479d4651994982612b7c1e8206b7</anchor>
      <arglist>(const std::string &amp;bucket, const std::string &amp;path, const std::string &amp;local_path)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>callFunction</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>aa948f6baf9cd8d147f7542058877413a</anchor>
      <arglist>(const std::string &amp;function_name, const nlohmann::json &amp;payload)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>sendNotification</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>ae5fd0e7e0b5b898e029142799c4bac6f</anchor>
      <arglist>(const std::string &amp;token, const nlohmann::json &amp;notification)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getStatus</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a817b729f459568c12579cfe52e563b8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>dd/de2/classsatox_1_1core_1_1cloud_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a142f4d91edeecada21cb6488163f8ba9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::cloud::SupabaseManager::Impl</name>
    <filename>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>aba93be66c22c65d7a723eaa01e4cfc1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a6eac1f3c88b70d59b7a7b93cd2b38957</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a16a5ccce0c33f7493b3b50bee2b60683</anchor>
      <arglist>(const SupabaseConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>adbc5693b3b9d9fa2c44dbcc37645a003</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>executeQuery</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a41c9fee38fe4221fe310ed4907c74128</anchor>
      <arglist>(const std::string &amp;query, const nlohmann::json &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>executeTransaction</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>aaa6a6eae36eb85b3ee2e7a7210c692f2</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;queries, const std::vector&lt; nlohmann::json &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>subscribe</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a49e0e4138b38d808611ccc72202835aa</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;event, std::function&lt; void(const nlohmann::json &amp;)&gt; callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsubscribe</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a4bfecbc2cd96b3ed4edad33050fe7671</anchor>
      <arglist>(const std::string &amp;subscription_id)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>uploadFile</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a0fb0e20e2f6427a5ed63b279e74e80ea</anchor>
      <arglist>(const std::string &amp;bucket, const std::string &amp;path, const std::string &amp;file_path)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>downloadFile</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>af94b31ee36b47e7a5fe16a3c5672949e</anchor>
      <arglist>(const std::string &amp;bucket, const std::string &amp;path, const std::string &amp;local_path)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>callFunction</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a03d8d1ab0042e64dce03e7f8248f5f4f</anchor>
      <arglist>(const std::string &amp;function_name, const nlohmann::json &amp;payload)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>invokeFunction</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>addac678a8643fee6ed964b64baf4a68e</anchor>
      <arglist>(const std::string &amp;function_name, const nlohmann::json &amp;payload)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getStatus</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a253d90c636c78409f1311425d596b64d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d8/d2b/classsatox_1_1core_1_1cloud_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a8b7209f6906298b7e4c98e3aea5f7a9f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::DatabaseManager::Impl</name>
    <filename>d3/deb/classsatox_1_1core_1_1DatabaseManager_1_1Impl.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d3/deb/classsatox_1_1core_1_1DatabaseManager_1_1Impl.html</anchorfile>
      <anchor>a82a38d05de2685e53a177ff48047055c</anchor>
      <arglist>(const DatabaseConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d3/deb/classsatox_1_1core_1_1DatabaseManager_1_1Impl.html</anchorfile>
      <anchor>abbc1921535d66c659b8e62a530081bb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>connect</name>
      <anchorfile>d3/deb/classsatox_1_1core_1_1DatabaseManager_1_1Impl.html</anchorfile>
      <anchor>a6f7fd3210425886d0ada8a0e6bc0379b</anchor>
      <arglist>(DatabaseType type, const json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>d3/deb/classsatox_1_1core_1_1DatabaseManager_1_1Impl.html</anchorfile>
      <anchor>accbe45f30f749f843f27cdfa19f7f608</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>executeQuery</name>
      <anchorfile>d3/deb/classsatox_1_1core_1_1DatabaseManager_1_1Impl.html</anchorfile>
      <anchor>ac1932a1c4e61993323782f3773072f35</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;query, json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>executeTransaction</name>
      <anchorfile>d3/deb/classsatox_1_1core_1_1DatabaseManager_1_1Impl.html</anchorfile>
      <anchor>a37457fc239aab4c76d964bb24e9229fc</anchor>
      <arglist>(const std::string &amp;id, const std::vector&lt; std::string &gt; &amp;queries, json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d3/deb/classsatox_1_1core_1_1DatabaseManager_1_1Impl.html</anchorfile>
      <anchor>a74e4c6d747fa563b5da51a7dc37517c7</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::FirebaseManager::Impl</name>
    <filename>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a50b42510be82c89e610f75041a543225</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a18c80d927a06e1d842a403b194864374</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAccessToken</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a9933d306ed2d70a0cf6b813b3ec45ce1</anchor>
      <arglist>(FirebaseConnection *connection)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeHttpRequest</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a6228a25596dc17048d26b23308dbc6fb</anchor>
      <arglist>(const std::string &amp;url, const std::string &amp;method, const nlohmann::json &amp;headers, const nlohmann::json &amp;data, nlohmann::json &amp;response)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>WriteCallback</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a630f9d09069385c96fd562e99d4bd69c</anchor>
      <arglist>(void *contents, size_t size, size_t nmemb, std::string *userp)</arglist>
    </member>
    <member kind="variable">
      <type>std::mutex</type>
      <name>mutex_</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>afb88b959d881724e034c700ed3ce82a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>initialized_</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a0612f366e77810b351a06fdb093e09b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::unique_ptr&lt; FirebaseConnection &gt; &gt;</type>
      <name>connections_</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a456ecf2f836b915ac23361a7c3e81ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>last_error_</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a70c3cac553ae782742798867cae368f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FirebaseConfig</type>
      <name>config_</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>adb4f8e7b982b7a271508638d6538eca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; Firestore &gt;</type>
      <name>firestore_</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>ad97cf04291614ff2ddce57875be3745a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unique_ptr&lt; RealtimeDatabase &gt;</type>
      <name>realtime_db_</name>
      <anchorfile>da/d77/structsatox_1_1core_1_1FirebaseManager_1_1Impl.html</anchorfile>
      <anchor>a7d253dfe1e465c97067d38ce582b763a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::PerformanceOptimization::Impl</name>
    <filename>d4/de3/classsatox_1_1core_1_1PerformanceOptimization_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>d4/de3/classsatox_1_1core_1_1PerformanceOptimization_1_1Impl.html</anchorfile>
      <anchor>aeb3f408d6b7f16f037ff4db11a0ed20b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>d4/de3/classsatox_1_1core_1_1PerformanceOptimization_1_1Impl.html</anchorfile>
      <anchor>a389aa7caada8abfedc5ab2f7d4152772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToCache</name>
      <anchorfile>d4/de3/classsatox_1_1core_1_1PerformanceOptimization_1_1Impl.html</anchorfile>
      <anchor>ae6d34247b0a949947f96339c78430041</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>getFromCache</name>
      <anchorfile>d4/de3/classsatox_1_1core_1_1PerformanceOptimization_1_1Impl.html</anchorfile>
      <anchor>a63f04ae267f52f8925304358cedba25c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConnection</name>
      <anchorfile>d4/de3/classsatox_1_1core_1_1PerformanceOptimization_1_1Impl.html</anchorfile>
      <anchor>a21f107a3a9ba98890fa2a7df53b85d7e</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConnection</name>
      <anchorfile>d4/de3/classsatox_1_1core_1_1PerformanceOptimization_1_1Impl.html</anchorfile>
      <anchor>ab0178fadcdf5a55700b107d01c38d869</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToBatch</name>
      <anchorfile>d4/de3/classsatox_1_1core_1_1PerformanceOptimization_1_1Impl.html</anchorfile>
      <anchor>a9912a04e8fac71505d2b032e66f8b70d</anchor>
      <arglist>(const std::string &amp;operation, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>executeParallel</name>
      <anchorfile>d4/de3/classsatox_1_1core_1_1PerformanceOptimization_1_1Impl.html</anchorfile>
      <anchor>ac6030a8b08728515be395aec61529217</anchor>
      <arglist>(F &amp;&amp;func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>optimizeMemory</name>
      <anchorfile>d4/de3/classsatox_1_1core_1_1PerformanceOptimization_1_1Impl.html</anchorfile>
      <anchor>a30d2207cd0e11a4dfca529c93c6dc62a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::SupabaseManager::Impl</name>
    <filename>d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a95da41c32e557e9bd682af1ffb89741e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>ac66627c91c8d19b5d5592485dabcfce5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>makeHttpRequest</name>
      <anchorfile>d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>ae3ed739b00374a8a5cb59c3bcd214fed</anchor>
      <arglist>(const std::string &amp;url, const std::string &amp;method, const nlohmann::json &amp;headers, const nlohmann::json &amp;data, nlohmann::json &amp;response)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>WriteCallback</name>
      <anchorfile>d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a8cd5a22659ff77c3b6f8931aa5a37643</anchor>
      <arglist>(void *contents, size_t size, size_t nmemb, std::string *userp)</arglist>
    </member>
    <member kind="variable">
      <type>std::mutex</type>
      <name>mutex_</name>
      <anchorfile>d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a9517ada192ad7bb278d1259cbc0e3b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>initialized_</name>
      <anchorfile>d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a9d3eb9f7e7f88a3e9231e3fd8d68bbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::unique_ptr&lt; SupabaseConnection &gt; &gt;</type>
      <name>connections_</name>
      <anchorfile>d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>aa46910669e5f9056f01cb2be3400dd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>last_error_</name>
      <anchorfile>d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>ab83822bae32bf44c660dc11db1efb20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SupabaseConfig</type>
      <name>config_</name>
      <anchorfile>d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl.html</anchorfile>
      <anchor>a7b8601534f590ee5035ef9e0c2178f63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::network::CertificateRevocation::Impl</name>
    <filename>d4/d09/classsatox_1_1network_1_1CertificateRevocation_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>d4/d09/classsatox_1_1network_1_1CertificateRevocation_1_1Impl.html</anchorfile>
      <anchor>a31edcfa37ed8f79f899627f9d3bd51c0</anchor>
      <arglist>(const RevocationConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>d4/d09/classsatox_1_1network_1_1CertificateRevocation_1_1Impl.html</anchorfile>
      <anchor>a155f9e633b564fe1a25103e48e3d7943</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RevocationStatus</type>
      <name>checkRevocation</name>
      <anchorfile>d4/d09/classsatox_1_1network_1_1CertificateRevocation_1_1Impl.html</anchorfile>
      <anchor>aed4064dd2e1e15f2916b8c62f5ec31c6</anchor>
      <arglist>(X509 *cert)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateRevocationInfo</name>
      <anchorfile>d4/d09/classsatox_1_1network_1_1CertificateRevocation_1_1Impl.html</anchorfile>
      <anchor>a9e05dc2438ab6d4861f631c57c03921e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d4/d09/classsatox_1_1network_1_1CertificateRevocation_1_1Impl.html</anchorfile>
      <anchor>aa784feca9b7e1b392226e6e68f4918f5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>configure</name>
      <anchorfile>d4/d09/classsatox_1_1network_1_1CertificateRevocation_1_1Impl.html</anchorfile>
      <anchor>acbab0d65953cc97944138577ee730d51</anchor>
      <arglist>(const RevocationConfig &amp;new_config)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::network::LetsEncryptManager::Impl</name>
    <filename>d8/d7a/classsatox_1_1network_1_1LetsEncryptManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>d8/d7a/classsatox_1_1network_1_1LetsEncryptManager_1_1Impl.html</anchorfile>
      <anchor>ade2d18a4d5881cfe280b9d22b1392e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>d8/d7a/classsatox_1_1network_1_1LetsEncryptManager_1_1Impl.html</anchorfile>
      <anchor>a8bc6ec4a47ddc946290cc761fe658079</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d8/d7a/classsatox_1_1network_1_1LetsEncryptManager_1_1Impl.html</anchorfile>
      <anchor>acaeae67b07766ef1b452a887757d38b8</anchor>
      <arglist>(const Config &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d8/d7a/classsatox_1_1network_1_1LetsEncryptManager_1_1Impl.html</anchorfile>
      <anchor>a04ccd01d4feab551ece58c4cc562ebe9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Certificate</type>
      <name>getCurrentCertificate</name>
      <anchorfile>d8/d7a/classsatox_1_1network_1_1LetsEncryptManager_1_1Impl.html</anchorfile>
      <anchor>a33dda241f74b214caae4ee7405f7fd86</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renewCertificate</name>
      <anchorfile>d8/d7a/classsatox_1_1network_1_1LetsEncryptManager_1_1Impl.html</anchorfile>
      <anchor>aa276d0d4582f8729c3fa25d058b3a8d2</anchor>
      <arglist>(const std::string &amp;domain=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerUpdateCallback</name>
      <anchorfile>d8/d7a/classsatox_1_1network_1_1LetsEncryptManager_1_1Impl.html</anchorfile>
      <anchor>a3dd0b61fc5a5b0e0c6a0cf418f2238c9</anchor>
      <arglist>(CertificateUpdateCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConfigured</name>
      <anchorfile>d8/d7a/classsatox_1_1network_1_1LetsEncryptManager_1_1Impl.html</anchorfile>
      <anchor>a4168b583f8a930ede11f3a0c78f672a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d8/d7a/classsatox_1_1network_1_1LetsEncryptManager_1_1Impl.html</anchorfile>
      <anchor>ab26bd9c51de821408a79711540357172</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::network::NetworkManager::Impl</name>
    <filename>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a3515c03b73fb20bb2671299ea3d2e96b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>acba70bd1ea583a7423b4793190ae7e16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a009528c55ab5f340ff9894e15112335b</anchor>
      <arglist>(const NetworkConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shutdown</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>afe8b11709ccd2e9de9f0496fa4a64716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a8eac8f0822cb366049e08c5ede3f496d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>ae26ef55d7092a390076537e76b87ab2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isP2PRunning</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>ae52d8d577663ca00602ea9da126ae6d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRPCRunning</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a138ea493b2fef8d14fb53df461bdc438</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startP2P</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>aeee0e7e15412866b31f1e7d84675730d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopP2P</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>aa509aaa3c897a1ddf7a234e7bff5307a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectToPeer</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a8cb8d55ee8760b2a91081833b3021498</anchor>
      <arglist>(const std::string &amp;address, uint16_t port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectPeer</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a72b505bcdb904249f1ef707982327e01</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPeerConnected</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a4a87645ae62dc4a075ecb5ddb7c3b3e8</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Peer &gt;</type>
      <name>getConnectedPeers</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a72dc75cfb4c1c0c7b70733b8a4b774bb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPeerCount</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a91647776e4dfed10556979c8779a6846</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startRPC</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a306e1b205b480a8c38a4224617168074</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRPC</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a25aab9b30f6b6afcd042ba04e975508d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerRPCMethod</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>ab7f3f2cc02aa1bf02b77e4260daa8e3e</anchor>
      <arglist>(const std::string &amp;method, std::function&lt; RPCResponse(const RPCRequest &amp;)&gt; handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>callRPC</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a930fa2c1282722a2ea63a1e200acb7d1</anchor>
      <arglist>(const std::string &amp;address, const RPCRequest &amp;request, RPCCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendP2PMessage</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>ae28b044cdebc2a9ac29ec45700911a6f</anchor>
      <arglist>(const std::string &amp;peer_address, const std::vector&lt; uint8_t &gt; &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendRPCMessage</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>aac2290b9a503801353d6def56a93547c</anchor>
      <arglist>(const std::string &amp;client_address, const nlohmann::json &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerMessageCallback</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a7281c00d124e4048a9e31f49e4d58bec</anchor>
      <arglist>(MessageType type, MessageCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterMessageCallback</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a3c63cef74df31bb18841d6e7f9af6541</anchor>
      <arglist>(MessageType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerPeerCallback</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a9cf602951392d1aea9a1e48336f8b50b</anchor>
      <arglist>(PeerCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterPeerCallback</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a09c42fcb6d192f80af1856741fb12f9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>afea9c0c788ce912e7dabb3743921690d</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a38b7edd31b1a8f5cc3d112b2da6d3afe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableEncryption</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a56f9125a9ba57c9ea51d2fdffe996b9f</anchor>
      <arglist>(const SecurityConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>LetsEncryptManager::Certificate</type>
      <name>getCurrentCertificate</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a7422eb68f005eeb24aff403cf57e5476</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renewCertificate</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a3d106b720daca625a2f880b713d84c23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCertificateUpdateCallback</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>af3295a88c1e5a7b989505fbd225f3d30</anchor>
      <arglist>(CertificateUpdateCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>NetworkStats</type>
      <name>getNetworkStats</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a53b7373049cb08beab8ee2545bf369ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>abe59c85a2f5731f6a3be9edaaa35c230</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetStats</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>aa8c82ec7cb7e8f9c12410e9f6009f1d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a031ad14c76e77f28d81341aa149367e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>clearLastError</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a120543856c8d50a9eacc3b25b8871ffb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>healthCheck</name>
      <anchorfile>d2/daf/classsatox_1_1network_1_1NetworkManager_1_1Impl.html</anchorfile>
      <anchor>a63c377056feb875ffb1e76475d3ca3b9</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::NFTManager::Impl</name>
    <filename>da/d30/classsatox_1_1nft_1_1NFTManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>da/d30/classsatox_1_1nft_1_1NFTManager_1_1Impl.html</anchorfile>
      <anchor>a45f48f6265388392150c965e0c5578a5</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Impl</name>
      <anchorfile>da/d30/classsatox_1_1nft_1_1NFTManager_1_1Impl.html</anchorfile>
      <anchor>a3b81e18f76a46ef22a36fc3243f5f587</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::pqc::HybridCrypto::Impl</name>
    <filename>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>abd151c1ec6a2d261c550d203cd9a6760</anchor>
      <arglist>(MLKEM::SecurityLevel kemLevel, MLDSA::SecurityLevel dsaLevel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateHybridKeyPair</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>ac9889e7caec2d5f3f8e8ac2c9e2d558a</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hybridEncrypt</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>ae04adbafcedfd60a7e095f79f3083172</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, const std::vector&lt; uint8_t &gt; &amp;message, std::vector&lt; uint8_t &gt; &amp;ciphertext)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hybridDecrypt</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a52dc7111b594ae6b1aa6fbd7fd0e546a</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::vector&lt; uint8_t &gt; &amp;ciphertext, std::vector&lt; uint8_t &gt; &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hybridSign</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a58c8108eb8f1b2a8a2660f5e0a5052bc</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::vector&lt; uint8_t &gt; &amp;message, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hybridVerify</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a19179504ef87578eccfe07e4923332da</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rotateKeys</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a50468081cac58fd1c863246cef64ac7d</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;oldPrivateKey, std::vector&lt; uint8_t &gt; &amp;newPublicKey, std::vector&lt; uint8_t &gt; &amp;newPrivateKey)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a2052efaa5f3c9143fb752517495fc88a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a8ea1d16b78d995fb6c760723425242ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCiphertextSize</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a6b3f809c13716a649b8abb18931ef789</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSignatureSize</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a44f6c5b8aa4cc7dab85d64ede093b375</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MLKEM::SecurityLevel</type>
      <name>getKEMSecurityLevel</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>afb52761779fdedc8761c90ebdf5e2f07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MLDSA::SecurityLevel</type>
      <name>getDSASecurityLevel</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a70f33404c0610760b5716eabe796be4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a37f552cbccd7bae2cfd0b111333a8c01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a56ca453921ad9aedcebac4eaccbb5d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>abd151c1ec6a2d261c550d203cd9a6760</anchor>
      <arglist>(MLKEM::SecurityLevel kemLevel, MLDSA::SecurityLevel dsaLevel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateHybridKeyPair</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>ac9889e7caec2d5f3f8e8ac2c9e2d558a</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hybridEncrypt</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>ae04adbafcedfd60a7e095f79f3083172</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, const std::vector&lt; uint8_t &gt; &amp;message, std::vector&lt; uint8_t &gt; &amp;ciphertext)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hybridDecrypt</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a52dc7111b594ae6b1aa6fbd7fd0e546a</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::vector&lt; uint8_t &gt; &amp;ciphertext, std::vector&lt; uint8_t &gt; &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hybridSign</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a58c8108eb8f1b2a8a2660f5e0a5052bc</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::vector&lt; uint8_t &gt; &amp;message, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hybridVerify</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a19179504ef87578eccfe07e4923332da</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rotateKeys</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a50468081cac58fd1c863246cef64ac7d</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;oldPrivateKey, std::vector&lt; uint8_t &gt; &amp;newPublicKey, std::vector&lt; uint8_t &gt; &amp;newPrivateKey)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a2052efaa5f3c9143fb752517495fc88a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a8ea1d16b78d995fb6c760723425242ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCiphertextSize</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a6b3f809c13716a649b8abb18931ef789</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSignatureSize</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a44f6c5b8aa4cc7dab85d64ede093b375</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MLKEM::SecurityLevel</type>
      <name>getKEMSecurityLevel</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>afb52761779fdedc8761c90ebdf5e2f07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MLDSA::SecurityLevel</type>
      <name>getDSASecurityLevel</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a70f33404c0610760b5716eabe796be4a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a37f552cbccd7bae2cfd0b111333a8c01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl.html</anchorfile>
      <anchor>a56ca453921ad9aedcebac4eaccbb5d31</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::pqc::KeyManager::Impl</name>
    <filename>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a5d7f41946c233f1af838e6765b282af2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateAndStoreKey</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a31f512c9ccbc94e42d305486564a7886</anchor>
      <arglist>(const std::string &amp;keyId, MLKEM::SecurityLevel kemLevel, MLDSA::SecurityLevel dsaLevel, const std::chrono::seconds &amp;expirationTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>retrieveKey</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a7e5f182b3b7662d2ae9ead3726e22414</anchor>
      <arglist>(const std::string &amp;keyId, std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey, KeyMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rotateKey</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a19b0f569708f4b8a495ec6051d944450</anchor>
      <arglist>(const std::string &amp;keyId, MLKEM::SecurityLevel newKemLevel, MLDSA::SecurityLevel newDsaLevel, const std::chrono::seconds &amp;newExpirationTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteKey</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a2794b0e6405df2ac365f386586caee9f</anchor>
      <arglist>(const std::string &amp;keyId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; KeyMetadata &gt;</type>
      <name>listKeys</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a78c1d41e5b010ee5435b61ba7b77bc41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKeyActive</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>ab0ac42fd9cf9e4afb8b2aab41b6c3033</anchor>
      <arglist>(const std::string &amp;keyId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateKeyMetadata</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>aa8440335ab22070e7be0df6f183ec683</anchor>
      <arglist>(const std::string &amp;keyId, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a3a3fc866d8a9f64ff21a211900e7d52f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>aa49586d14eae262c63e346396d97e370</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a5d7f41946c233f1af838e6765b282af2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateAndStoreKey</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a31f512c9ccbc94e42d305486564a7886</anchor>
      <arglist>(const std::string &amp;keyId, MLKEM::SecurityLevel kemLevel, MLDSA::SecurityLevel dsaLevel, const std::chrono::seconds &amp;expirationTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>retrieveKey</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a7e5f182b3b7662d2ae9ead3726e22414</anchor>
      <arglist>(const std::string &amp;keyId, std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey, KeyMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rotateKey</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a19b0f569708f4b8a495ec6051d944450</anchor>
      <arglist>(const std::string &amp;keyId, MLKEM::SecurityLevel newKemLevel, MLDSA::SecurityLevel newDsaLevel, const std::chrono::seconds &amp;newExpirationTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteKey</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a2794b0e6405df2ac365f386586caee9f</anchor>
      <arglist>(const std::string &amp;keyId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; KeyMetadata &gt;</type>
      <name>listKeys</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a78c1d41e5b010ee5435b61ba7b77bc41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKeyActive</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>ab0ac42fd9cf9e4afb8b2aab41b6c3033</anchor>
      <arglist>(const std::string &amp;keyId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateKeyMetadata</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>aa8440335ab22070e7be0df6f183ec683</anchor>
      <arglist>(const std::string &amp;keyId, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>a3a3fc866d8a9f64ff21a211900e7d52f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl.html</anchorfile>
      <anchor>aa49586d14eae262c63e346396d97e370</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::pqc::MLDSA::Impl</name>
    <filename>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a344efea625dad11f9d8afb59386e5804</anchor>
      <arglist>(SecurityLevel level)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateKeyPair</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a8cb7425f50a94880732f21edd84c80bc</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sign</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>ae582d2b6f72fe04a3030765707fef49f</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::vector&lt; uint8_t &gt; &amp;message, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a484bc668e3f649338e40d339fd8e8c62</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>ac998438b67142a8f7f2df1a9d6e1624c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a544cbfa96b9e26b9b9807cf56d645af1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSignatureSize</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a30a62d37f08f7f027cb9baefb077e92a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SecurityLevel</type>
      <name>getSecurityLevel</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a5e0e37813d592ed69c589fe2ad61712e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a856ac8b8408b29ed7aca9546bbd1c1f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a8e4949a0c00bf2c264fa4f11e2f3f4f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a344efea625dad11f9d8afb59386e5804</anchor>
      <arglist>(SecurityLevel level)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateKeyPair</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a8cb7425f50a94880732f21edd84c80bc</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sign</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>ae582d2b6f72fe04a3030765707fef49f</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::vector&lt; uint8_t &gt; &amp;message, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a484bc668e3f649338e40d339fd8e8c62</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>ac998438b67142a8f7f2df1a9d6e1624c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a544cbfa96b9e26b9b9807cf56d645af1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSignatureSize</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a30a62d37f08f7f027cb9baefb077e92a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SecurityLevel</type>
      <name>getSecurityLevel</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a5e0e37813d592ed69c589fe2ad61712e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a856ac8b8408b29ed7aca9546bbd1c1f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>db/d3a/classsatox_1_1security_1_1pqc_1_1MLDSA_1_1Impl.html</anchorfile>
      <anchor>a8e4949a0c00bf2c264fa4f11e2f3f4f1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::pqc::MLKEM::Impl</name>
    <filename>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a307cdbb17cbe53e932efbd8ea1ba9414</anchor>
      <arglist>(SecurityLevel level)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateKeyPair</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>ab801fec57bfac5ab0d3a4be1ed0aa31b</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>encapsulate</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a443f9e64c3e5be35cd44168a65fca02e</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;ciphertext, std::vector&lt; uint8_t &gt; &amp;sharedSecret)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decapsulate</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a022a922778b37742577865800876552b</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::vector&lt; uint8_t &gt; &amp;ciphertext, std::vector&lt; uint8_t &gt; &amp;sharedSecret)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a6717d413b0de8fcecd484be53130a456</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a891d5460e19a4c1e5e4cd5a0e63488a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCiphertextSize</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a9b1050b904f25cb75288ed3f60dbbda2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSharedSecretSize</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>afb8ecc81821fe130440e6496288ae5e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SecurityLevel</type>
      <name>getSecurityLevel</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a2cc3e4e30ffad2002abf06e85ce704a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a2e444fe5c33cff046bf8315aa25ceed2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a9abce4f7fbb53bb85fdadd3d85ef4cfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a307cdbb17cbe53e932efbd8ea1ba9414</anchor>
      <arglist>(SecurityLevel level)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateKeyPair</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>ab801fec57bfac5ab0d3a4be1ed0aa31b</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>encapsulate</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a443f9e64c3e5be35cd44168a65fca02e</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;ciphertext, std::vector&lt; uint8_t &gt; &amp;sharedSecret)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decapsulate</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a022a922778b37742577865800876552b</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::vector&lt; uint8_t &gt; &amp;ciphertext, std::vector&lt; uint8_t &gt; &amp;sharedSecret)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a6717d413b0de8fcecd484be53130a456</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a891d5460e19a4c1e5e4cd5a0e63488a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCiphertextSize</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a9b1050b904f25cb75288ed3f60dbbda2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSharedSecretSize</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>afb8ecc81821fe130440e6496288ae5e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SecurityLevel</type>
      <name>getSecurityLevel</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a2cc3e4e30ffad2002abf06e85ce704a6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a2e444fe5c33cff046bf8315aa25ceed2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d7/d59/classsatox_1_1security_1_1pqc_1_1MLKEM_1_1Impl.html</anchorfile>
      <anchor>a9abce4f7fbb53bb85fdadd3d85ef4cfd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::SecurityManager::Impl</name>
    <filename>dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl.html</filename>
    <member kind="function">
      <type></type>
      <name>Impl</name>
      <anchorfile>dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl.html</anchorfile>
      <anchor>ad3229277125171e3fa61ee97cce0a0a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initializePQC</name>
      <anchorfile>dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl.html</anchorfile>
      <anchor>a2bced7efcba15b72437f0c1d3a5e5d42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadDefaultConfig</name>
      <anchorfile>dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl.html</anchorfile>
      <anchor>a78780a65c8f2b5c829ca580bf1e9a076</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initializeCaches</name>
      <anchorfile>dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl.html</anchorfile>
      <anchor>a3bc20862d67baa04a83ea6a48c17f48a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>encrypt</name>
      <anchorfile>dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl.html</anchorfile>
      <anchor>a13aa87fe4a33526e6f9879500887f2dd</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data, std::vector&lt; uint8_t &gt; &amp;encryptedData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decrypt</name>
      <anchorfile>dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl.html</anchorfile>
      <anchor>aad5a51c2e44437b0edbae70dc233be2c</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;encryptedData, std::vector&lt; uint8_t &gt; &amp;decryptedData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sign</name>
      <anchorfile>dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl.html</anchorfile>
      <anchor>a73d891014fdbd8a122fba0f6d78b7755</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl.html</anchorfile>
      <anchor>ae0be4ed056d3c5343dc4947c0fb43495</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data, const std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl.html</anchorfile>
      <anchor>a2eae8e95261bf3eb8078ff288b94bd15</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::QueryOptimizer::IndexInfo</name>
    <filename>d4/da3/structsatox_1_1database_1_1QueryOptimizer_1_1IndexInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d4/da3/structsatox_1_1database_1_1QueryOptimizer_1_1IndexInfo.html</anchorfile>
      <anchor>a474aebdd59ff456e349334cf4d300db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>table</name>
      <anchorfile>d4/da3/structsatox_1_1database_1_1QueryOptimizer_1_1IndexInfo.html</anchorfile>
      <anchor>a4fcdd8ef4616674e1087094617f35aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>columns</name>
      <anchorfile>d4/da3/structsatox_1_1database_1_1QueryOptimizer_1_1IndexInfo.html</anchorfile>
      <anchor>ad590bbadd8b4b514e58c6d61d137c08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isUnique</name>
      <anchorfile>d4/da3/structsatox_1_1database_1_1QueryOptimizer_1_1IndexInfo.html</anchorfile>
      <anchor>a87101831743e4ec7c2d8459e3b5c28f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>d4/da3/structsatox_1_1database_1_1QueryOptimizer_1_1IndexInfo.html</anchorfile>
      <anchor>a49153b3cbd30841facbf2f7875fbbcb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>selectivity</name>
      <anchorfile>d4/da3/structsatox_1_1database_1_1QueryOptimizer_1_1IndexInfo.html</anchorfile>
      <anchor>a4305b91cef8a3c27a4b1869bf1f09c29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::Input</name>
    <filename>d3/de8/structsatox_1_1core_1_1Input.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>txid</name>
      <anchorfile>d3/de8/structsatox_1_1core_1_1Input.html</anchorfile>
      <anchor>adec03d6f7b53d955fe2d6257a8111aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>vout</name>
      <anchorfile>d3/de8/structsatox_1_1core_1_1Input.html</anchorfile>
      <anchor>a8dd9087f6f79be91c37e43aea0070afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>script_sig</name>
      <anchorfile>d3/de8/structsatox_1_1core_1_1Input.html</anchorfile>
      <anchor>a65fc3811376a0ace48af5eb864827cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>d3/de8/structsatox_1_1core_1_1Input.html</anchorfile>
      <anchor>a14281c9c9c1ec2c3545a933394ba8cc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>address</name>
      <anchorfile>d3/de8/structsatox_1_1core_1_1Input.html</anchorfile>
      <anchor>a9572d42db01ddf53203ab6807d697c11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::Input</name>
    <filename>d4/d63/structsatox_1_1core_1_1TransactionManager_1_1Input.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>prev_tx_hash</name>
      <anchorfile>d4/d63/structsatox_1_1core_1_1TransactionManager_1_1Input.html</anchorfile>
      <anchor>a3f51cb5ff6876a76ea3d60ed7a4cf6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>prev_tx_index</name>
      <anchorfile>d4/d63/structsatox_1_1core_1_1TransactionManager_1_1Input.html</anchorfile>
      <anchor>af482750934017c513e4c396353bd6b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>script_sig</name>
      <anchorfile>d4/d63/structsatox_1_1core_1_1TransactionManager_1_1Input.html</anchorfile>
      <anchor>ade54c032e135fb8d09aa70bf247f9539</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>sequence</name>
      <anchorfile>d4/d63/structsatox_1_1core_1_1TransactionManager_1_1Input.html</anchorfile>
      <anchor>acece465d163b18795167369fe43d6a6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::InputValidator</name>
    <filename>d2/dca/classsatox_1_1security_1_1InputValidator.html</filename>
    <member kind="function">
      <type></type>
      <name>InputValidator</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a8da8cb2df0c29148d1bd213072de823c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~InputValidator</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a72041eeae490d0556d1ab07fd8a7f721</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>ab6e0c314e9a8c71d287ddca6df45e5b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a6e00e69c5883aef73ae0764367c50bf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>ae8c50595ec35ea30b7b5c7d9cdde790e</anchor>
      <arglist>(const std::string &amp;input, const std::string &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerValidator</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a25d6179c7a414d9f16912b1ba980d151</anchor>
      <arglist>(const std::string &amp;type, std::function&lt; bool(const std::string &amp;)&gt; validator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeValidator</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a86592cf7bb5775efefd7f02581a3f066</anchor>
      <arglist>(const std::string &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateEmail</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>ac8c2dd1d2b76c9c6f03b23b1472d6f5a</anchor>
      <arglist>(const std::string &amp;email)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateUrl</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a9ee9ccc42a9f8e90c6b80000dba0d10c</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateIpAddress</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a9425e8ff6124f13158558465841b5b92</anchor>
      <arglist>(const std::string &amp;ip)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateJson</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>aa72072541beb6610e2e2bb9dc0e34d95</anchor>
      <arglist>(const std::string &amp;json)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateXml</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>afe35376ab5bde4f0ac07399ef8908a38</anchor>
      <arglist>(const std::string &amp;xml)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validatePhoneNumber</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a81c91554ce96d02da652735c4a44f5df</anchor>
      <arglist>(const std::string &amp;phone)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateUsername</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>ad89e804356d078b6efb69045e9410799</anchor>
      <arglist>(const std::string &amp;username)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validatePassword</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a21f8a07f3937428c257adfd4a2f32e5e</anchor>
      <arglist>(const std::string &amp;password)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateHexString</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a926435869914efbbb7b27dc8def02d45</anchor>
      <arglist>(const std::string &amp;hex)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateBase64</name>
      <anchorfile>d2/dca/classsatox_1_1security_1_1InputValidator.html</anchorfile>
      <anchor>a1cd2d1ed3dc223939f1916523cd8b4d9</anchor>
      <arglist>(const std::string &amp;base64)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::InvVector</name>
    <filename>d7/dc5/structsatox_1_1InvVector.html</filename>
    <member kind="function">
      <type></type>
      <name>InvVector</name>
      <anchorfile>d7/dc5/structsatox_1_1InvVector.html</anchorfile>
      <anchor>a3f055a1278d3fe579a81b1b005d75116</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>type</name>
      <anchorfile>d7/dc5/structsatox_1_1InvVector.html</anchorfile>
      <anchor>a95dd176801cc2af76aec2c78a3df3efc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint256</type>
      <name>hash</name>
      <anchorfile>d7/dc5/structsatox_1_1InvVector.html</anchorfile>
      <anchor>a2be02a158130394795e6a8f16192d415</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::IPFSClient</name>
    <filename>d6/def/classsatox_1_1IPFSClient.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>add</name>
      <anchorfile>d6/def/classsatox_1_1IPFSClient.html</anchorfile>
      <anchor>a0fe463774f4241a5a09df8fc188914d8</anchor>
      <arglist>(const std::string &amp;data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>get</name>
      <anchorfile>d6/def/classsatox_1_1IPFSClient.html</anchorfile>
      <anchor>a01644c3b10b68c3f7bb336c6d6f4653a</anchor>
      <arglist>(const std::string &amp;hash)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IPFSClient</name>
      <anchorfile>d6/def/classsatox_1_1IPFSClient.html</anchorfile>
      <anchor>ade9985791e0e86843abd0bb30fbe7c47</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::IPFSConfig</name>
    <filename>db/d79/structsatox_1_1ipfs_1_1IPFSConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>api_endpoint</name>
      <anchorfile>db/d79/structsatox_1_1ipfs_1_1IPFSConfig.html</anchorfile>
      <anchor>a413cdc229b397110163c68cbd28035eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>gateway_endpoint</name>
      <anchorfile>db/d79/structsatox_1_1ipfs_1_1IPFSConfig.html</anchorfile>
      <anchor>ac9e37e7051da733ee720a2aa78e857ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>pinning_endpoint</name>
      <anchorfile>db/d79/structsatox_1_1ipfs_1_1IPFSConfig.html</anchorfile>
      <anchor>a53a7d56aaa6906224f064cc60b1db0ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>api_key</name>
      <anchorfile>db/d79/structsatox_1_1ipfs_1_1IPFSConfig.html</anchorfile>
      <anchor>a2302fd498075860879b0a02a8e4dbc98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>secret_key</name>
      <anchorfile>db/d79/structsatox_1_1ipfs_1_1IPFSConfig.html</anchorfile>
      <anchor>aa0252a82ea3876e64854a81979088ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout_ms</name>
      <anchorfile>db/d79/structsatox_1_1ipfs_1_1IPFSConfig.html</anchorfile>
      <anchor>a323089c639edc99b9d80c2b51052717d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_retries</name>
      <anchorfile>db/d79/structsatox_1_1ipfs_1_1IPFSConfig.html</anchorfile>
      <anchor>a7c4846d9eb5779d33c1defbea4dc4516</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_pinning</name>
      <anchorfile>db/d79/structsatox_1_1ipfs_1_1IPFSConfig.html</anchorfile>
      <anchor>a6be75a6402e104a6dacb154650562a7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_gateway</name>
      <anchorfile>db/d79/structsatox_1_1ipfs_1_1IPFSConfig.html</anchorfile>
      <anchor>a5334f573c01da5ed37a6038fc76129fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::IpfsConfig</name>
    <filename>d5/d5f/structsatox_1_1ipfs_1_1IpfsConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d5/d5f/structsatox_1_1ipfs_1_1IpfsConfig.html</anchorfile>
      <anchor>a842eb88fb579d8a9405486b5a0d711b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLogging</name>
      <anchorfile>d5/d5f/structsatox_1_1ipfs_1_1IpfsConfig.html</anchorfile>
      <anchor>ac41d0017eadc9d4c3e6d4c3229189d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logPath</name>
      <anchorfile>d5/d5f/structsatox_1_1ipfs_1_1IpfsConfig.html</anchorfile>
      <anchor>ad2c1efd7964b25b8d3ba824a12852457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalConfig</name>
      <anchorfile>d5/d5f/structsatox_1_1ipfs_1_1IpfsConfig.html</anchorfile>
      <anchor>a40c27a7d8d4e690b6149636f01698a86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::IPFSContent</name>
    <filename>dc/d95/structsatox_1_1ipfs_1_1IPFSContent.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>cid</name>
      <anchorfile>dc/d95/structsatox_1_1ipfs_1_1IPFSContent.html</anchorfile>
      <anchor>a011cd139155ed61572ce045c255d03df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>data</name>
      <anchorfile>dc/d95/structsatox_1_1ipfs_1_1IPFSContent.html</anchorfile>
      <anchor>a7df92c51e2b586f8a6c9f75a9e390327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>content_type</name>
      <anchorfile>dc/d95/structsatox_1_1ipfs_1_1IPFSContent.html</anchorfile>
      <anchor>a61c07794435e8cddef906cf7ac0cdbb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>upload_time</name>
      <anchorfile>dc/d95/structsatox_1_1ipfs_1_1IPFSContent.html</anchorfile>
      <anchor>aac1b82af79ef33d52787abd272ec6cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_access_time</name>
      <anchorfile>dc/d95/structsatox_1_1ipfs_1_1IPFSContent.html</anchorfile>
      <anchor>a5c747d5fa85d80b33284456c8bb3308e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_pinned</name>
      <anchorfile>dc/d95/structsatox_1_1ipfs_1_1IPFSContent.html</anchorfile>
      <anchor>a9c19ccee476487074fb42a6399681e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>dc/d95/structsatox_1_1ipfs_1_1IPFSContent.html</anchorfile>
      <anchor>ab005c8a869dd44d21d511f5572484785</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletManager::IPFSData</name>
    <filename>de/dfa/structsatox_1_1wallet_1_1WalletManager_1_1IPFSData.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>de/dfa/structsatox_1_1wallet_1_1WalletManager_1_1IPFSData.html</anchorfile>
      <anchor>a70cf78af23651571c465c716c65d6602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>data</name>
      <anchorfile>de/dfa/structsatox_1_1wallet_1_1WalletManager_1_1IPFSData.html</anchorfile>
      <anchor>a22d92c6008edbedc7e3acdcd12b914a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>de/dfa/structsatox_1_1wallet_1_1WalletManager_1_1IPFSData.html</anchorfile>
      <anchor>a4404b520d69bd29159d9ef7a9d8bd86a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>de/dfa/structsatox_1_1wallet_1_1WalletManager_1_1IPFSData.html</anchorfile>
      <anchor>a082a30fd7ed45fb12adc7e84d217716e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::ipfs::IpfsException</name>
    <filename>d6/dea/classsatox_1_1ipfs_1_1IpfsException.html</filename>
    <member kind="function">
      <type></type>
      <name>IpfsException</name>
      <anchorfile>d6/dea/classsatox_1_1ipfs_1_1IpfsException.html</anchorfile>
      <anchor>acf74b5ea3aac45db5e9d8179cc0a9d4a</anchor>
      <arglist>(IpfsErrorCode code, const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>d6/dea/classsatox_1_1ipfs_1_1IpfsException.html</anchorfile>
      <anchor>ab36baac48f0e16fe1df7b19b473aef26</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>IpfsErrorCode</type>
      <name>code</name>
      <anchorfile>d6/dea/classsatox_1_1ipfs_1_1IpfsException.html</anchorfile>
      <anchor>a007542f299227c374014bafe73a645be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>message</name>
      <anchorfile>d6/dea/classsatox_1_1ipfs_1_1IpfsException.html</anchorfile>
      <anchor>aaa771465094886fd1e7b84e5c803b5ad</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::IPFSFile</name>
    <filename>d4/de9/classsatox_1_1database_1_1IPFSFile.html</filename>
    <base>satox::database::DataModel</base>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>ac87137d74e74e9d6bd11696338a9970d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fromJson</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>a04558312d35b37e43ea368b0fda44cde</anchor>
      <arglist>(const nlohmann::json &amp;j) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTableName</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>a0a24fc0888003072df25d03962b6e542</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>abb1933c0cf1bff7825857fc83209d099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>ae0605d4f41ae9a2f266b7dba85557324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mimeType</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>acc3d55ac5776a07dbd6e2ba4ddd8cafd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>size</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>a6b28ffa4b7b7a38a76be28a202f16d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>a48e719db5927b58ae8007dba85995384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>aad66d1a26486b7240dd997b65cdfdf83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>createdAt</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>acf81d4c4636d5088ac62be56fde287ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>updatedAt</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>aaab876b7c071ca17ff3171114c6ee55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>pins</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>aec565c46ac3c675822db5dc4861be781</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>content</name>
      <anchorfile>d4/de9/classsatox_1_1database_1_1IPFSFile.html</anchorfile>
      <anchor>aa12ea5f27384b6f22cdb9cf9e5b30fb6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::IpfsHealth</name>
    <filename>de/d98/structsatox_1_1ipfs_1_1IpfsHealth.html</filename>
    <member kind="variable">
      <type>IpfsStatus</type>
      <name>status</name>
      <anchorfile>de/d98/structsatox_1_1ipfs_1_1IpfsHealth.html</anchorfile>
      <anchor>aba8ea56eb4686f80a4f6c7bdca38bed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>healthy</name>
      <anchorfile>de/d98/structsatox_1_1ipfs_1_1IpfsHealth.html</anchorfile>
      <anchor>a2efec5baa7c7857d18b127cac50e3535</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>de/d98/structsatox_1_1ipfs_1_1IpfsHealth.html</anchorfile>
      <anchor>a6863f96091682d6b15c6191b82656e35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastCheck</name>
      <anchorfile>de/d98/structsatox_1_1ipfs_1_1IpfsHealth.html</anchorfile>
      <anchor>af4a81498a6f068f58415e1e1c9cdf08c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>consecutiveFailures</name>
      <anchorfile>de/d98/structsatox_1_1ipfs_1_1IpfsHealth.html</anchorfile>
      <anchor>a9c8c0e0a350313baa2d662d864d49238</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>details</name>
      <anchorfile>de/d98/structsatox_1_1ipfs_1_1IpfsHealth.html</anchorfile>
      <anchor>aa773cc23640cb961a11a9d1bc6d4c057</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::ipfs::IpfsInitializationException</name>
    <filename>da/de9/classsatox_1_1ipfs_1_1IpfsInitializationException.html</filename>
    <base>satox::ipfs::IpfsException</base>
    <member kind="function">
      <type></type>
      <name>IpfsInitializationException</name>
      <anchorfile>da/de9/classsatox_1_1ipfs_1_1IpfsInitializationException.html</anchorfile>
      <anchor>a17e503a4ee3ec474d6cccaced88241d0</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::IPFSManager</name>
    <filename>da/d68/classsatox_1_1core_1_1IPFSManager.html</filename>
    <class kind="struct">satox::core::IPFSManager::ContentInfo</class>
    <class kind="struct">satox::core::IPFSManager::IPFSStats</class>
    <class kind="struct">satox::core::IPFSManager::NodeInfo</class>
    <member kind="enumeration">
      <type></type>
      <name>NodeState</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a4f2354fde22f6659e90afecad0324cd4</anchor>
      <arglist></arglist>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a4f2354fde22f6659e90afecad0324cd4add652546039b18970b8dcf2cff824268">UNINITIALIZED</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a4f2354fde22f6659e90afecad0324cd4a86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a4f2354fde22f6659e90afecad0324cd4a9a14f95e151eec641316e7c784ce832d">CONNECTING</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a4f2354fde22f6659e90afecad0324cd4aa5afd6edd5336d91316964e493936858">CONNECTED</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a4f2354fde22f6659e90afecad0324cd4a99c8ce56e7ab246445d3b134724428f3">DISCONNECTED</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a4f2354fde22f6659e90afecad0324cd4abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ContentType</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a832b720982f017fbadef80ad085f82c9</anchor>
      <arglist></arglist>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a832b720982f017fbadef80ad085f82c9a9fc5887c030f7a3e19821ebec457e719">FILE</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a832b720982f017fbadef80ad085f82c9a28766b4be065d0c806c2e9c9d914af48">DIRECTORY</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a832b720982f017fbadef80ad085f82c9a03e6a84229fd741f5f8af29ab67e06a0">SYMLINK</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a832b720982f017fbadef80ad085f82c9a633d6abff0a3fc22404347728d195059">RAW</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a832b720982f017fbadef80ad085f82c9a0ecd11c1d7a287401d148a23bbd7a2f8">JSON</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a832b720982f017fbadef80ad085f82c9a61a96ffcb251bb9bf0abf8fec19d0ea8">TEXT</enumvalue>
      <enumvalue file="da/d68/classsatox_1_1core_1_1IPFSManager.html" anchor="a832b720982f017fbadef80ad085f82c9a98ad0e8750ae10ad556ed7a62affb452">BINARY</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, NodeState)&gt;</type>
      <name>NodeCallback</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a4145f783b5446ddda19bd78f23fed242</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const ContentInfo &amp;)&gt;</type>
      <name>ContentCallback</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a910bbf9cf9577b15bc90033f73c88bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a67204d8e16d217a27810db8f815feeec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a92ef843a042051db78e3e9f08f2bd249</anchor>
      <arglist>(const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>af90485015cad2e5186b34224e8d53490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectNode</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>abf80114e01707465169a2b2600abf0cb</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnectNode</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>ab4179597853c122552a42276bd000b7c</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeConnected</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>ad9e028ba25f886e947c3dffd94384307</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>NodeInfo</type>
      <name>getNodeInfo</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a6377fedfb6277dcbff41083e47b0cc4a</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NodeInfo &gt;</type>
      <name>getAllNodes</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>aa4e5c45db36d9ca46c1872617ae79953</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NodeInfo &gt;</type>
      <name>getNodesByState</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a543ae98669a652366098eebafe38fb24</anchor>
      <arglist>(NodeState state) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addContent</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a19db82353ef8bd94324b99fc6a51e13e</anchor>
      <arglist>(const std::string &amp;path, ContentType type, const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addContentFromFile</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>acceeede9331e28e4879e165b4b35e388</anchor>
      <arglist>(const std::string &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addContentFromDirectory</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>ac7fd0b1c165afbe2046872cfcc9da0e1</anchor>
      <arglist>(const std::string &amp;dirPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getContent</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>af0f3ea95b69eed51e06f48831754d278</anchor>
      <arglist>(const std::string &amp;hash, std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getContentToFile</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a6afb5bdc327407bb14b0fd3830880b08</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;filePath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pinContent</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a9d155dc965635524e6f09c86fc4a6345</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unpinContent</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a31a8a8dd3cad76d74c8bc3eeff2f410c</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContentPinned</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a84d4c0339b7340285517fe2dc8e764de</anchor>
      <arglist>(const std::string &amp;hash) const</arglist>
    </member>
    <member kind="function">
      <type>ContentInfo</type>
      <name>getContentInfo</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a0a158a075cc37ed6ea4e07806ecf3e2c</anchor>
      <arglist>(const std::string &amp;hash) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ContentInfo &gt;</type>
      <name>getContentByType</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a8c40556af129dbbbaca67952d913bac8</anchor>
      <arglist>(ContentType type) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ContentInfo &gt;</type>
      <name>getContentByTag</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>afca1ed8c7a6dcfb98c157a97f4f343c8</anchor>
      <arglist>(const std::string &amp;tag) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeContent</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a90bb5756c38930654142012baa1c549d</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ContentInfo &gt;</type>
      <name>searchContent</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a1daefc158d0251db2252a41d17607972</anchor>
      <arglist>(const std::string &amp;query) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ContentInfo &gt;</type>
      <name>findContentByHash</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>af725f78fc2cc27eccc2c40242f8e57b6</anchor>
      <arglist>(const std::string &amp;hash) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ContentInfo &gt;</type>
      <name>findContentByName</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a3a9228af1b63bb24452e80f67e7464d2</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ContentInfo &gt;</type>
      <name>findContentByMimeType</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a94fa82c30be489627069c1964452e72d</anchor>
      <arglist>(const std::string &amp;mimeType) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateContentMetadata</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a647a5e274d4f8fc18fc4d3ef47ab966c</anchor>
      <arglist>(const std::string &amp;hash, const nlohmann::json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addContentTag</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a5449cfc9f90a3cf6b21f447d310a7177</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeContentTag</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>ac8813a43227fb527c5a8ac8169366853</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateContentName</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a73319cc1f9205b483c1a0e90cc79ae55</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateContentMimeType</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>ac176c504cd48c6d730243b8006a38df5</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;mimeType)</arglist>
    </member>
    <member kind="function">
      <type>IPFSStats</type>
      <name>getStats</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>ab95fee3f4aeb00e452259d5525ff7f95</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a80e002f663f10c32d28acccb79317ba5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a3531e0df26c16e97d566cdbd6683ad23</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerNodeCallback</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a071c7dff0ab6a59977241deb96d79376</anchor>
      <arglist>(NodeCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerContentCallback</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a5c79736bf053d1939d7b22e2422a2d6c</anchor>
      <arglist>(ContentCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>aac14aed86ca2737d8e3802ed029f44d5</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterNodeCallback</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>ac6f4ef60de3275b48bf3c46055a9d0c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterContentCallback</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>ab4be7e7ee0f5601b511134453dfaf846</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a69c0e981510bde9ffe6248fbb3799acd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>ad288b571ae829a710534c35a6c331fa0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>a69de98be242e4e78b1a31018cef69f23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IPFSManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>da/d68/classsatox_1_1core_1_1IPFSManager.html</anchorfile>
      <anchor>acaa8da9841075249cf584f8efdea738a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::ipfs::IPFSManager</name>
    <filename>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</filename>
    <class kind="struct">satox::ipfs::IPFSManager::IPFSStatistics</class>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const IPFSContent &amp;)&gt;</type>
      <name>ContentCallback</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a314d4a5df041074715474296484f319a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a506f97c8d372da27d07fa004a9ab6aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, uint32_t)&gt;</type>
      <name>ProgressCallback</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>aa206e2539be53b03cefd7f1eed0e73ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IPFSManager</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ab2bcc702581a3e3ff03b93bc4c2687a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IPFSManager</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a91480e94e687485894e4d0d095443e38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>af90ecdacfa823b017392da62c0678b48</anchor>
      <arglist>(const IPFSConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a4814321a30a9d6d9c036d1ba32292999</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a56e75bc5053beac9bd93f41250a8afca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>addContent</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>aa57632d2038acd679f1b3156eb53a524</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data, const std::string &amp;content_type, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeContent</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a2b77b26d9a3cfece17ac3ee0ba030641</anchor>
      <arglist>(const std::string &amp;cid)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; IPFSContent &gt;</type>
      <name>getContent</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a80e0cf79cf7e2752273f217b8c792c77</anchor>
      <arglist>(const std::string &amp;cid)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listContent</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a74ee9228bce23fd6b47e5a5c831baf54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pinContent</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ab2d3def8433e6dbe624fd1139526e2e4</anchor>
      <arglist>(const std::string &amp;cid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unpinContent</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>aed42c2320b455e50c07cd47f59da2eaa</anchor>
      <arglist>(const std::string &amp;cid)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContentPinned</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a3d86d48acffbdaf838880d7549aa7bf2</anchor>
      <arglist>(const std::string &amp;cid) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listPinnedContent</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a0b1d8a19d763d64d88485c194ff6e192</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getGatewayUrl</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a6630c514da18c5d62236cb4d3f1d8b9e</anchor>
      <arglist>(const std::string &amp;cid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGatewayEnabled</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>aae1317725399d984944a8f2be4ff222f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>batchAddContent</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a3bd89c60a9b99fddf6e40ecc81c1f8eb</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; std::vector&lt; uint8_t &gt;, std::string &gt; &gt; &amp;contents)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>batchPinContent</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>aebe37c42ab231352e7972bf0cc74f32f</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;cids)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>batchUnpinContent</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a10e333840ae8c2424f3af4667ace8f6c</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;cids)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateMetadata</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a414d2224a69bb7c67f8e9a7660afd6a1</anchor>
      <arglist>(const std::string &amp;cid, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::unordered_map&lt; std::string, std::string &gt; &gt;</type>
      <name>getMetadata</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ace48c728027b0e2b2935275c784724bf</anchor>
      <arglist>(const std::string &amp;cid) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setContentType</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a2cd97bfd8d48866c5883b54a8b26031e</anchor>
      <arglist>(const std::string &amp;cid, const std::string &amp;content_type)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>getContentType</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>af18b4a84f9c5aa476203688b101b680a</anchor>
      <arglist>(const std::string &amp;cid) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; IPFSStatistics &gt;</type>
      <name>getStatistics</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a6ced8073baa75915be9c85692ff208b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a4cd78ef412109d4b73232423ba590b16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCached</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a5b8b57dab33beef24bea5a65990165e2</anchor>
      <arglist>(const std::string &amp;cid) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; IPFSContent &gt;</type>
      <name>getFromCache</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a6a77c4b73fc08d750b8dca4815bb39cc</anchor>
      <arglist>(const std::string &amp;cid) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerContentCallback</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>af84da298c8b16479760250925a1e9bff</anchor>
      <arglist>(ContentCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>af03dbe1599f4a2219bef4e220e0f3b80</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerProgressCallback</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ad9853399e863abaac5dd32dccfa4bc3a</anchor>
      <arglist>(ProgressCallback callback)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IPFSManager</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a40536d64d16ed7db27479e989380f70e</anchor>
      <arglist>(const IPFSManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>IPFSManager &amp;</type>
      <name>operator=</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>afcc46097b8523df3020969ceba6f7e5d</anchor>
      <arglist>(const IPFSManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IPFSManager</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>aaf3918b9feb2971999973d3f4d98d94c</anchor>
      <arglist>(IPFSManager &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>IPFSManager &amp;</type>
      <name>operator=</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>afbe3b0b8d356dddb89ff797f7e0239c0</anchor>
      <arglist>(IPFSManager &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a76ff34895cf25537ff058bd924b28d07</anchor>
      <arglist>(const Config &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a4814321a30a9d6d9c036d1ba32292999</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a1efb48f701d83fb5c920a205341e1581</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>acc423fae6de4216c059b021b637c46dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ab66d6d0dcb619d6f076acf54c63108db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addFile</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ac96dc9011864d8dcb02ea67b6f63bc53</anchor>
      <arglist>(const std::string &amp;filePath, std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addFileData</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ae11612bcf8d3b54e5b98c1a45677424c</anchor>
      <arglist>(const std::string &amp;data, std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getFile</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>aab0d7bcf595ac18514699c837133ce34</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;outputPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getFile</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a28070141097d5c40a6b7693d1f71417f</anchor>
      <arglist>(const std::string &amp;hash, std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pinFile</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>aa5edaa5c19783cb4f0b6d3d129561e9f</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unpinFile</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>addb88feae94e49828d7d9b40939773d0</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getPinnedFiles</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a9c56eb97498f1483a28d01e2357861fa</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;pinnedFiles)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a56e75bc5053beac9bd93f41250a8afca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>addData</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a12395f3ca53505a4fa7fb4f178f69be0</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>getData</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ae4f07aec234d5e91fd70cb922d809d1e</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pinHash</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a9ef16d4c47ac745fc8245a3373bdc5fd</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unpinHash</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a573888753b63f5a27fc6488fed7b3097</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listPinnedHashes</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a72dc15f52f9785738c6670d9760bb52c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getIPFSInfo</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>acb19998539261fb6dfd4f9e2bc53fae8</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>getIPFSHistory</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>aeb85edd2fa150860ed9667fdd51c134a</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>getIPFSBalances</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ade2883c74be4b22f92fb991b9bc82624</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>getIPFSTransactions</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ad1ddfed80362783f3fdc76e097f18d13</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getIPFSAddresses</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ac6bd2e475874dab87865c432c9ac009e</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>getIPFSAddressBalances</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>ad4c55f7d28ea26b41090f1f461a180d3</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>getIPFSAddressTransactions</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>aafd38a3484439ef2b458cfb7e3fd62ab</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>getIPFSAddressHistory</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>a33e69ec89dc1c27045ca3adef4a348a4</anchor>
      <arglist>(const std::string &amp;ipfs_hash)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IPFSManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>dc/d29/classsatox_1_1ipfs_1_1IPFSManager.html</anchorfile>
      <anchor>afc2a6f5b4736789c3ea3ae00f2ef7853</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::ipfs::IpfsOperationException</name>
    <filename>d7/dbb/classsatox_1_1ipfs_1_1IpfsOperationException.html</filename>
    <base>satox::ipfs::IpfsException</base>
    <member kind="function">
      <type></type>
      <name>IpfsOperationException</name>
      <anchorfile>d7/dbb/classsatox_1_1ipfs_1_1IpfsOperationException.html</anchorfile>
      <anchor>a6c453fc23b0318599294e35bab458271</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::IpfsResult</name>
    <filename>d1/d5f/structsatox_1_1ipfs_1_1IpfsResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d1/d5f/structsatox_1_1ipfs_1_1IpfsResult.html</anchorfile>
      <anchor>a34de3a44c6a1d8a36b1da331da26e4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d1/d5f/structsatox_1_1ipfs_1_1IpfsResult.html</anchorfile>
      <anchor>aaaac96d5f9113c81b890f7ddd04e4878</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>d1/d5f/structsatox_1_1ipfs_1_1IpfsResult.html</anchorfile>
      <anchor>a89a7b4b18c27e2e1d6fef7fb8a013a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>duration</name>
      <anchorfile>d1/d5f/structsatox_1_1ipfs_1_1IpfsResult.html</anchorfile>
      <anchor>a5614cf3a3c46f0ea2855c50a5754f068</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::IPFSManager::IPFSStatistics</name>
    <filename>d0/d7a/structsatox_1_1ipfs_1_1IPFSManager_1_1IPFSStatistics.html</filename>
    <member kind="variable">
      <type>uint64_t</type>
      <name>total_content</name>
      <anchorfile>d0/d7a/structsatox_1_1ipfs_1_1IPFSManager_1_1IPFSStatistics.html</anchorfile>
      <anchor>ad0ad98d3e34150d3eb3aa24c2ada00a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>total_size</name>
      <anchorfile>d0/d7a/structsatox_1_1ipfs_1_1IPFSManager_1_1IPFSStatistics.html</anchorfile>
      <anchor>a64ce95711e54b7132f003ae71d18158e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>pinned_content</name>
      <anchorfile>d0/d7a/structsatox_1_1ipfs_1_1IPFSManager_1_1IPFSStatistics.html</anchorfile>
      <anchor>ab608020b690d2f2d920ff45ed29f2bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>pinned_size</name>
      <anchorfile>d0/d7a/structsatox_1_1ipfs_1_1IPFSManager_1_1IPFSStatistics.html</anchorfile>
      <anchor>a34d9df99be8da1793aa260d3dfc474ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_sync_time</name>
      <anchorfile>d0/d7a/structsatox_1_1ipfs_1_1IPFSManager_1_1IPFSStatistics.html</anchorfile>
      <anchor>a4d382d710c3b595318e74b6e50c2913d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::IPFSManager::IPFSStats</name>
    <filename>d9/daf/structsatox_1_1core_1_1IPFSManager_1_1IPFSStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>totalNodes</name>
      <anchorfile>d9/daf/structsatox_1_1core_1_1IPFSManager_1_1IPFSStats.html</anchorfile>
      <anchor>a149544df7d146cef3de0c9498d8acf8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>connectedNodes</name>
      <anchorfile>d9/daf/structsatox_1_1core_1_1IPFSManager_1_1IPFSStats.html</anchorfile>
      <anchor>a9dc55cf57552ffc8afa6c50fabba3c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>totalContent</name>
      <anchorfile>d9/daf/structsatox_1_1core_1_1IPFSManager_1_1IPFSStats.html</anchorfile>
      <anchor>a0554960e8dbeda421fad7794d70bdf69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>totalSize</name>
      <anchorfile>d9/daf/structsatox_1_1core_1_1IPFSManager_1_1IPFSStats.html</anchorfile>
      <anchor>a7c8061c52e57c16988aba829f0a847e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; ContentType, size_t &gt;</type>
      <name>contentTypeDistribution</name>
      <anchorfile>d9/daf/structsatox_1_1core_1_1IPFSManager_1_1IPFSStats.html</anchorfile>
      <anchor>a33f7f83b75dcc6b89ba91032e3ba2db8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, size_t &gt;</type>
      <name>mimeTypeDistribution</name>
      <anchorfile>d9/daf/structsatox_1_1core_1_1IPFSManager_1_1IPFSStats.html</anchorfile>
      <anchor>acace53a98aa94fcb51a33307ad7d05cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastUpdated</name>
      <anchorfile>d9/daf/structsatox_1_1core_1_1IPFSManager_1_1IPFSStats.html</anchorfile>
      <anchor>acf655a061f643b84a2e92576bfb81504</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::IpfsStats</name>
    <filename>d6/dea/structsatox_1_1ipfs_1_1IpfsStats.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>totalOperations</name>
      <anchorfile>d6/dea/structsatox_1_1ipfs_1_1IpfsStats.html</anchorfile>
      <anchor>ac3444065bb4b3a98d97d7a019e03f1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>successfulOperations</name>
      <anchorfile>d6/dea/structsatox_1_1ipfs_1_1IpfsStats.html</anchorfile>
      <anchor>a56cd812c7e4713be01c7704bd5f674cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>failedOperations</name>
      <anchorfile>d6/dea/structsatox_1_1ipfs_1_1IpfsStats.html</anchorfile>
      <anchor>ab951f9343311b710b691c2277393ef21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastOperation</name>
      <anchorfile>d6/dea/structsatox_1_1ipfs_1_1IpfsStats.html</anchorfile>
      <anchor>ab78aed7eaf677dc6bde58b1622cccd2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>averageOperationTime</name>
      <anchorfile>d6/dea/structsatox_1_1ipfs_1_1IpfsStats.html</anchorfile>
      <anchor>ab9a02fc94570a52bff441108b591e191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>d6/dea/structsatox_1_1ipfs_1_1IpfsStats.html</anchorfile>
      <anchor>a50f10955d3510f7a121cb48cf91cb52f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::PluginManager::IPlugin</name>
    <filename>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IPlugin</name>
      <anchorfile>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</anchorfile>
      <anchor>a449bb9943a4ad78c12ea4640173f932e</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>initialize</name>
      <anchorfile>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</anchorfile>
      <anchor>a47548776f662f362427c48b31305fe4e</anchor>
      <arglist>(const nlohmann::json &amp;config)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>start</name>
      <anchorfile>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</anchorfile>
      <anchor>a8afdf4159ed6fe94d980db6fcc4e3cda</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>stop</name>
      <anchorfile>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</anchorfile>
      <anchor>a03c816acd554e63a9c262a5c972de8e4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>pause</name>
      <anchorfile>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</anchorfile>
      <anchor>a81d0bde02a069122d4fe29f566c25f24</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>resume</name>
      <anchorfile>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</anchorfile>
      <anchor>aae5e4dff74b9b251249cd4079a4927fd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>update</name>
      <anchorfile>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</anchorfile>
      <anchor>abdacc447bbcb95e18bea44eccab5eca5</anchor>
      <arglist>(const nlohmann::json &amp;config)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginInfo</type>
      <name>getInfo</name>
      <anchorfile>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</anchorfile>
      <anchor>a39d3937b9050b662417a29aa3ac92a93</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PluginState</type>
      <name>getState</name>
      <anchorfile>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</anchorfile>
      <anchor>a65654110eb4ebe09973c2c13c5d82bc9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getLastError</name>
      <anchorfile>d4/d0c/classsatox_1_1core_1_1PluginManager_1_1IPlugin.html</anchorfile>
      <anchor>a3b4fdca83a0c800d32acf4609ad7799a</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::PluginManager::IPluginFactory</name>
    <filename>d9/d38/classsatox_1_1core_1_1PluginManager_1_1IPluginFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IPluginFactory</name>
      <anchorfile>d9/d38/classsatox_1_1core_1_1PluginManager_1_1IPluginFactory.html</anchorfile>
      <anchor>ad69ec776ddea49e3dec6a49f716ac4a4</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; IPlugin &gt;</type>
      <name>createPlugin</name>
      <anchorfile>d9/d38/classsatox_1_1core_1_1PluginManager_1_1IPluginFactory.html</anchorfile>
      <anchor>a2725f70aaf6e6cd620064c1fe2bf01a1</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::IShutdownable</name>
    <filename>d2/dcd/classsatox_1_1core_1_1IShutdownable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IShutdownable</name>
      <anchorfile>d2/dcd/classsatox_1_1core_1_1IShutdownable.html</anchorfile>
      <anchor>a0daa60db08c2579033dd4f631b62b694</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>shutdown</name>
      <anchorfile>d2/dcd/classsatox_1_1core_1_1IShutdownable.html</anchorfile>
      <anchor>a48a5f36cb4b1bdedd88cdba239fd6571</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::blockchain::Kawpow</name>
    <filename>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</filename>
    <member kind="function">
      <type></type>
      <name>Kawpow</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>aebdf9ede65bad2edbcfb390395a79577</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Kawpow</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>a0b25926844fc37464174091691a959fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Kawpow</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>a5a1892ea9b7a92c02134e7c83ba2d61a</anchor>
      <arglist>(const Kawpow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Kawpow &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>a252c2b495876ba320f56eba050cd29e5</anchor>
      <arglist>(const Kawpow &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Kawpow</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>a89c490db4ad9165c855548cf68bff84b</anchor>
      <arglist>(Kawpow &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>Kawpow &amp;</type>
      <name>operator=</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>a019986a544d0d1bf6a7fa0f2faf6318c</anchor>
      <arglist>(Kawpow &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>computeHash</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>a478ba815600c918718842f45027ef362</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;header, uint64_t nonce, std::vector&lt; uint8_t &gt; &amp;hash, std::vector&lt; uint8_t &gt; &amp;mix_hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyHash</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>a51f46e944a0f264c6d072a1ee74b88f2</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;header, uint64_t nonce, const std::vector&lt; uint8_t &gt; &amp;mix_hash, const std::vector&lt; uint8_t &gt; &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initializeCache</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>a3e90a95165a5a7e37dddf6cc1017d179</anchor>
      <arglist>(uint64_t block_number)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initializeDataset</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>ae747a725cbcd0006531d819afd07fa8a</anchor>
      <arglist>(uint64_t block_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>ab55e7a063a2821ffc23a56bf8974b388</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearDataset</name>
      <anchorfile>d5/d7c/classsatox_1_1blockchain_1_1Kawpow.html</anchorfile>
      <anchor>ab122a9d04c1b00dd2cda8c5214afc997</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KeccakF_1600_State</name>
    <filename>d2/d53/structKeccakF__1600__State.html</filename>
    <member kind="variable">
      <type>uint64_t</type>
      <name>A</name>
      <anchorfile>d2/d53/structKeccakF__1600__State.html</anchorfile>
      <anchor>a69964663fb05c2cc06b0845875d377b0</anchor>
      <arglist>[KECCAK_F_1600_LANES]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KeccakSponge</name>
    <filename>d5/d44/structKeccakSponge.html</filename>
    <member kind="variable">
      <type>KeccakF_1600_State</type>
      <name>state</name>
      <anchorfile>d5/d44/structKeccakSponge.html</anchorfile>
      <anchor>a75ef43dcced885c993dc23dc7ca4f7d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>rate</name>
      <anchorfile>d5/d44/structKeccakSponge.html</anchorfile>
      <anchor>acc0dce0c65cb081a56b7a0d00d252095</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>capacity</name>
      <anchorfile>d5/d44/structKeccakSponge.html</anchorfile>
      <anchor>a446652b9b6512721fe445fdd07529ab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>bitsInQueue</name>
      <anchorfile>d5/d44/structKeccakSponge.html</anchorfile>
      <anchor>a574b4bf5fe89c609b31897e212435a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>bitsAvailableForSqueezing</name>
      <anchorfile>d5/d44/structKeccakSponge.html</anchorfile>
      <anchor>aec5d296778b4ab46170db4524e2a99d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char</type>
      <name>queue</name>
      <anchorfile>d5/d44/structKeccakSponge.html</anchorfile>
      <anchor>a6a8426de53638383c816912e4d85f5fe</anchor>
      <arglist>[KECCAK_SPONGE_BLOCKSIZE]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::pqc::KeyManager</name>
    <filename>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</filename>
    <class kind="class">satox::security::pqc::KeyManager::Impl</class>
    <member kind="function">
      <type></type>
      <name>KeyManager</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a7a8b31a3f1bafa65c815223b89610dc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KeyManager</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>afadecefff8c59a78d6989477b8b94af0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateAndStoreKey</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a4bd2bc01d877e2819bd66586da1be065</anchor>
      <arglist>(const std::string &amp;keyId, const std::string &amp;algorithm, int securityLevel, const std::string &amp;metadata=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getKey</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a4921768394a10144d0e21b28d47bdceb</anchor>
      <arglist>(const std::string &amp;keyId, std::vector&lt; uint8_t &gt; &amp;key, KeyMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rotateKey</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a6b676d88a80fceddcbaa1a7533f92d38</anchor>
      <arglist>(const std::string &amp;keyId, const std::string &amp;newMetadata=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteKey</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a3ba531a928f06963211c985bd3aff4c0</anchor>
      <arglist>(const std::string &amp;keyId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listKeys</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a9ec8265aad35d0714a337e4aae338ced</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; KeyMetadata &gt;</type>
      <name>listKeyMetadata</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a5190d2fb1450f515998a117203f1fd45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKeyValid</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a2705b9c30e5d508f2507d0d41ccd2fea</anchor>
      <arglist>(const std::string &amp;keyId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKeyExpired</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a42ff3ec665d1f74809eaedb1d0db6c87</anchor>
      <arglist>(const std::string &amp;keyId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateKeyMetadata</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a75249f23c3a040e25b691bfbeef2da05</anchor>
      <arglist>(const std::string &amp;keyId, const std::string &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setKeyExpiration</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>aa2356bd6f556ef61e25f676e292ddec9</anchor>
      <arglist>(const std::string &amp;keyId, const std::chrono::system_clock::time_point &amp;expiration)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a58460498c6dbecca9a0c816d3a967df5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a5190a2764a1ca5061a22da47926d517e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyManager</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a7a8b31a3f1bafa65c815223b89610dc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KeyManager</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>afadecefff8c59a78d6989477b8b94af0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateAndStoreKey</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a4bd2bc01d877e2819bd66586da1be065</anchor>
      <arglist>(const std::string &amp;keyId, const std::string &amp;algorithm, int securityLevel, const std::string &amp;metadata=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getKey</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a4921768394a10144d0e21b28d47bdceb</anchor>
      <arglist>(const std::string &amp;keyId, std::vector&lt; uint8_t &gt; &amp;key, KeyMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rotateKey</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a6b676d88a80fceddcbaa1a7533f92d38</anchor>
      <arglist>(const std::string &amp;keyId, const std::string &amp;newMetadata=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteKey</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a3ba531a928f06963211c985bd3aff4c0</anchor>
      <arglist>(const std::string &amp;keyId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listKeys</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a82ab17774d4973ab9414e58175d9f18d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; KeyMetadata &gt;</type>
      <name>listKeyMetadata</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a5190d2fb1450f515998a117203f1fd45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKeyValid</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a2705b9c30e5d508f2507d0d41ccd2fea</anchor>
      <arglist>(const std::string &amp;keyId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isKeyExpired</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a42ff3ec665d1f74809eaedb1d0db6c87</anchor>
      <arglist>(const std::string &amp;keyId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateKeyMetadata</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a75249f23c3a040e25b691bfbeef2da05</anchor>
      <arglist>(const std::string &amp;keyId, const std::string &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setKeyExpiration</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>aa2356bd6f556ef61e25f676e292ddec9</anchor>
      <arglist>(const std::string &amp;keyId, const std::chrono::system_clock::time_point &amp;expiration)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a58460498c6dbecca9a0c816d3a967df5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager.html</anchorfile>
      <anchor>a5190a2764a1ca5061a22da47926d517e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::wallet::KeyManager</name>
    <filename>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</filename>
    <class kind="struct">satox::wallet::KeyManager::KeyPair</class>
    <member kind="function">
      <type></type>
      <name>KeyManager</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>abde755e82446b4ea45250bd971a56c65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KeyManager</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>a80eae26fdc3eed6d231ec45f1b928fb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>a78304d3036d313ddba88e1501e34ae6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanup</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>a85b5608659960d122c8b829bd99d4f8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateKeyPair</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>ac1216cb4dd6d1b086ae86e0ef8d3ebdf</anchor>
      <arglist>(KeyPair &amp;keyPair)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deriveKeyPairFromSeed</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>a66aa9b759bdb3847610f37492de4cf9e</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;seed, KeyPair &amp;keyPair)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deriveKeyPairFromPrivateKey</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>aefdec54b2aeef392c395f6e898ed558c</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, KeyPair &amp;keyPair)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deriveChildKeyPair</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>a805ba62946ba100ebca3935417493d7d</anchor>
      <arglist>(const KeyPair &amp;parent, uint32_t index, KeyPair &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validatePrivateKey</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>afe94a968617a97550cb3bc5ff89f9721</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validatePublicKey</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>a2f892259d850a4174b3b1ef8586cf924</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateKeyPair</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>a91b7f573d808522f6378ca33de44c4d5</anchor>
      <arglist>(const KeyPair &amp;keyPair) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>privateKeyToPublicKey</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>ac3e4d64d97bf06714c9b8a82cd5abdcd</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, std::vector&lt; uint8_t &gt; &amp;publicKey) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>publicKeyToAddress</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>acb53b9f93bdbd383f86cdee3a9eca21f</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>encryptPrivateKey</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>ad2f64a157e89862c05aa6e9d526e0827</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::string &amp;password, std::vector&lt; uint8_t &gt; &amp;encrypted) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decryptPrivateKey</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>ad6aad10b97bcb5f8b08ffac982a596c8</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;encrypted, const std::string &amp;password, std::vector&lt; uint8_t &gt; &amp;privateKey) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>a0ce935549c4f5d2a7649c8fbe1cc3f9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d3/dc1/classsatox_1_1wallet_1_1KeyManager.html</anchorfile>
      <anchor>aebeeeddc2f7f64aba5057d5a451dbcbe</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::security::pqc::KeyMetadata</name>
    <filename>db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>keyId</name>
      <anchorfile>db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata.html</anchorfile>
      <anchor>a10b350f33b12be1ac27096ae5011c1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>creationTime</name>
      <anchorfile>db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata.html</anchorfile>
      <anchor>a95097cfd3ea604793e5a8f86eebec051</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>expirationTime</name>
      <anchorfile>db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata.html</anchorfile>
      <anchor>ae12974c5cc2e80c6abb0a5e67e4638a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>algorithm</name>
      <anchorfile>db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata.html</anchorfile>
      <anchor>aeb565f11379a369e8319c76eaeafcc4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>securityLevel</name>
      <anchorfile>db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata.html</anchorfile>
      <anchor>ac3196260e1bb974159b7baec2cb2241d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata.html</anchorfile>
      <anchor>a934191ff11497d2a7b22f2778fe18941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>metadata</name>
      <anchorfile>db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata.html</anchorfile>
      <anchor>af7f8ae7644adbe4218ed09842e4bbd07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::KeyManager::KeyPair</name>
    <filename>d1/dd6/structsatox_1_1wallet_1_1KeyManager_1_1KeyPair.html</filename>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>privateKey</name>
      <anchorfile>d1/dd6/structsatox_1_1wallet_1_1KeyManager_1_1KeyPair.html</anchorfile>
      <anchor>a2025e62eeda8dff038476ddd69fab0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>publicKey</name>
      <anchorfile>d1/dd6/structsatox_1_1wallet_1_1KeyManager_1_1KeyPair.html</anchorfile>
      <anchor>a106e0d17c78ba135422feeaeb5f79ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>chainCode</name>
      <anchorfile>d1/dd6/structsatox_1_1wallet_1_1KeyManager_1_1KeyPair.html</anchorfile>
      <anchor>a83860d4fa5cb0881301287e793449007</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>address</name>
      <anchorfile>d1/dd6/structsatox_1_1wallet_1_1KeyManager_1_1KeyPair.html</anchorfile>
      <anchor>a3afdbdeded0909ebcecc18c44375023a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletManager::KeyPair</name>
    <filename>d1/d74/structsatox_1_1wallet_1_1WalletManager_1_1KeyPair.html</filename>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>privateKey</name>
      <anchorfile>d1/d74/structsatox_1_1wallet_1_1WalletManager_1_1KeyPair.html</anchorfile>
      <anchor>a331420964c39290f8aee46b56729e36e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>publicKey</name>
      <anchorfile>d1/d74/structsatox_1_1wallet_1_1WalletManager_1_1KeyPair.html</anchorfile>
      <anchor>a241d20fcd33b93a915fe1ab36593d2e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>address</name>
      <anchorfile>d1/d74/structsatox_1_1wallet_1_1WalletManager_1_1KeyPair.html</anchorfile>
      <anchor>abee462f8127d4a3b9e09e9d2443184a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fingerprint</name>
      <anchorfile>d1/d74/structsatox_1_1wallet_1_1WalletManager_1_1KeyPair.html</anchorfile>
      <anchor>a8416bc4a37f7e4f5839d966544d31b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>derivationIndex</name>
      <anchorfile>d1/d74/structsatox_1_1wallet_1_1WalletManager_1_1KeyPair.html</anchorfile>
      <anchor>aedb5b0ad4b0fb5de6c5e75f55223b49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isHardwareKey</name>
      <anchorfile>d1/d74/structsatox_1_1wallet_1_1WalletManager_1_1KeyPair.html</anchorfile>
      <anchor>a577fb9b1e3cc4a5ebd268476c7b91a68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::network::LetsEncryptManager</name>
    <filename>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</filename>
    <class kind="struct">satox::network::LetsEncryptManager::Certificate</class>
    <class kind="struct">satox::network::LetsEncryptManager::Config</class>
    <class kind="class">satox::network::LetsEncryptManager::Impl</class>
    <member kind="typedef">
      <type>std::function&lt; void(const Certificate &amp;)&gt;</type>
      <name>CertificateUpdateCallback</name>
      <anchorfile>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</anchorfile>
      <anchor>adc58ef24e1d72207957391ecc548b808</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LetsEncryptManager</name>
      <anchorfile>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</anchorfile>
      <anchor>ab677520bdc05be2911259ea06962b06f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LetsEncryptManager</name>
      <anchorfile>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</anchorfile>
      <anchor>a4edfd108c6d8cfdfb3d09b560600c2ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</anchorfile>
      <anchor>a6851112d73dbcb5188490d98397c9ec6</anchor>
      <arglist>(const Config &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</anchorfile>
      <anchor>a733618cb2d1fd3a0787085dba1ad0387</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Certificate</type>
      <name>getCurrentCertificate</name>
      <anchorfile>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</anchorfile>
      <anchor>a0d845247599766f96fadfb8da6cad216</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renewCertificate</name>
      <anchorfile>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</anchorfile>
      <anchor>a4b41147d17721eb131365d2b20e72e52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerUpdateCallback</name>
      <anchorfile>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</anchorfile>
      <anchor>a4b6923c0d6ec0c2db895b420e2d136ad</anchor>
      <arglist>(CertificateUpdateCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConfigured</name>
      <anchorfile>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</anchorfile>
      <anchor>ab76df24a726d357b88ce98f9b3c08d1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>db/d46/classsatox_1_1network_1_1LetsEncryptManager.html</anchorfile>
      <anchor>acf6d7608bbc688f911c14d960242fe7c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::LoggingManager::LogConfig</name>
    <filename>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>logDir</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>a177fe2410ed2ef3495ca62bcb8a040cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logFile</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>a658f42c756cd99c5cd2b7f8c593d49fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxFileSize</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>ab06ee8a8517ac5e9fc82fe95d6265ebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxFiles</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>aa8641b1aae0fbc3d16be01e15a17954f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Level</type>
      <name>minLevel</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>a536a83864795cdedbb78d8b9c71b5706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>consoleOutput</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>a62139ffef9201a5b2b8778db3777f7a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fileOutput</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>af659665cdd95c622531e6399c30f0c70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>asyncLogging</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>ab94dd4def77e5b3db5a69ce2efe60f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>queueSize</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>a7b0048b688a28a2e81522e7b3f5f34fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>flushInterval</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>ac37f492fd06fd7125e5aac86453af0c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includeTimestamp</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>a9b47f9ccd49506cc576a4aa1e2ed73cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includeThreadId</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>a90d797a5087d6949092d4359403a0608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>includeSource</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>a612fa4b8fd81be267542e77c9865e288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logFormat</name>
      <anchorfile>dc/d1a/structsatox_1_1core_1_1LoggingManager_1_1LogConfig.html</anchorfile>
      <anchor>ae171dbdf23d311765b5fba52d77c25ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::LoggingManager::LogEntry</name>
    <filename>dc/d6e/structsatox_1_1core_1_1LoggingManager_1_1LogEntry.html</filename>
    <member kind="variable">
      <type>Level</type>
      <name>level</name>
      <anchorfile>dc/d6e/structsatox_1_1core_1_1LoggingManager_1_1LogEntry.html</anchorfile>
      <anchor>aa1f0775f3de16dc4e04cc43d0b49766d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>dc/d6e/structsatox_1_1core_1_1LoggingManager_1_1LogEntry.html</anchorfile>
      <anchor>abc5faa5939ef8c1da25a2ccb073da59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>source</name>
      <anchorfile>dc/d6e/structsatox_1_1core_1_1LoggingManager_1_1LogEntry.html</anchorfile>
      <anchor>ad0100c13a7fbee8a40c6cf7bf8ef42b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>threadId</name>
      <anchorfile>dc/d6e/structsatox_1_1core_1_1LoggingManager_1_1LogEntry.html</anchorfile>
      <anchor>aa6a2d1848fa5d176ec9e17d7406416b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>dc/d6e/structsatox_1_1core_1_1LoggingManager_1_1LogEntry.html</anchorfile>
      <anchor>af53e6cbb30f54e4e9f636ec1414be8d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>dc/d6e/structsatox_1_1core_1_1LoggingManager_1_1LogEntry.html</anchorfile>
      <anchor>af9177f2f0d5567e1dd784377adf7e16f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::LoggingManager</name>
    <filename>de/d20/classsatox_1_1core_1_1LoggingManager.html</filename>
    <class kind="struct">satox::core::LoggingManager::LogConfig</class>
    <class kind="struct">satox::core::LoggingManager::LogEntry</class>
    <class kind="struct">satox::core::LoggingManager::LogStats</class>
    <member kind="enumeration">
      <type></type>
      <name>Level</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>ae730d6634badaf14c55b0bd2222a12d6</anchor>
      <arglist></arglist>
      <enumvalue file="de/d20/classsatox_1_1core_1_1LoggingManager.html" anchor="ae730d6634badaf14c55b0bd2222a12d6a2d3e4144aa384b18849ab9a8abad74d6">TRACE</enumvalue>
      <enumvalue file="de/d20/classsatox_1_1core_1_1LoggingManager.html" anchor="ae730d6634badaf14c55b0bd2222a12d6adc30ec20708ef7b0f641ef78b7880a15">DEBUG</enumvalue>
      <enumvalue file="de/d20/classsatox_1_1core_1_1LoggingManager.html" anchor="ae730d6634badaf14c55b0bd2222a12d6a551b723eafd6a31d444fcb2f5920fbd3">INFO</enumvalue>
      <enumvalue file="de/d20/classsatox_1_1core_1_1LoggingManager.html" anchor="ae730d6634badaf14c55b0bd2222a12d6a059e9861e0400dfbe05c98a841f3f96b">WARNING</enumvalue>
      <enumvalue file="de/d20/classsatox_1_1core_1_1LoggingManager.html" anchor="ae730d6634badaf14c55b0bd2222a12d6abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="de/d20/classsatox_1_1core_1_1LoggingManager.html" anchor="ae730d6634badaf14c55b0bd2222a12d6a19da7170bea36556dde582519795f3fc">FATAL</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const LogEntry &amp;)&gt;</type>
      <name>LogCallback</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a769bf1bcdbd15c0fb2c7b332c783345a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoggingManager</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>aa5f76b2e6c642c6e955f2ebb351fc0e1</anchor>
      <arglist>(const LoggingManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LoggingManager &amp;</type>
      <name>operator=</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>ac47c1c5fb9fa3f2d428b1f8ce0167db8</anchor>
      <arglist>(const LoggingManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LoggingManager</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a64b1344f6662cfc7770ccd76d00409e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LoggingManager</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a26ff378eaa0f7c05c965b49045f900ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a7f7059eb63639dd3b9a380100e701624</anchor>
      <arglist>(const LogConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a6e141bd715f2662dc56330cc6fd1b5a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a4e4fdfcf9214939212937ade23b205b6</anchor>
      <arglist>(Level level, const std::string &amp;message, const std::string &amp;source=&quot;&quot;, const nlohmann::json &amp;metadata=nlohmann::json())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trace</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>ae9ef9ae2a6636831a40fd90f6cb16297</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;source=&quot;&quot;, const nlohmann::json &amp;metadata=nlohmann::json())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>aaff148860237a894f2f166e2eca8441d</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;source=&quot;&quot;, const nlohmann::json &amp;metadata=nlohmann::json())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>info</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>ab09bef73a872beac5e5e1b6a3d2ae608</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;source=&quot;&quot;, const nlohmann::json &amp;metadata=nlohmann::json())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warning</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a78e6eb72676677c7d7efaa495e3b498c</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;source=&quot;&quot;, const nlohmann::json &amp;metadata=nlohmann::json())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a7b48a11b120e0d68779127afbf215d21</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;source=&quot;&quot;, const nlohmann::json &amp;metadata=nlohmann::json())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fatal</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a2785cf8d1ba1e773023d6ed27a7d3553</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;source=&quot;&quot;, const nlohmann::json &amp;metadata=nlohmann::json())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogLevel</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a0531c705e99cb83f1c9eb78cb1cf3cfb</anchor>
      <arglist>(Level level)</arglist>
    </member>
    <member kind="function">
      <type>Level</type>
      <name>getLogLevel</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>acb879e3b90cc959e905adb2cd6fbc0d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogFormat</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a69c61031886b08ed0e37344d174a677d</anchor>
      <arglist>(const std::string &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLogFormat</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>ab15aa66eb7918ce8d6d6706ed2d7bbdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flush</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a98443cef16b63778b08cdad7c90c5a75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a803583b9fd08c4847e705c3e567e7d34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCallback</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>ae8a820df53a0591a37e611dec49a433b</anchor>
      <arglist>(LogCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterCallback</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>aa12a2b73380fe18d6dc5a325003ef68c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LogStats</type>
      <name>getStats</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a9b9ce266537db81b033558d4a36a40d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a439ac12b0056274529e30a3475aaecbf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>de/d20/classsatox_1_1core_1_1LoggingManager.html</anchorfile>
      <anchor>a50f0c63f66ec88c518c496ff4355680e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::LoggingManager::LogStats</name>
    <filename>d0/d61/structsatox_1_1core_1_1LoggingManager_1_1LogStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>totalEntries</name>
      <anchorfile>d0/d61/structsatox_1_1core_1_1LoggingManager_1_1LogStats.html</anchorfile>
      <anchor>ad315c024fe1c6732ec8354c2724a52bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>entriesByLevel</name>
      <anchorfile>d0/d61/structsatox_1_1core_1_1LoggingManager_1_1LogStats.html</anchorfile>
      <anchor>a781da98e7fb886a34e9765dc4592d7a6</anchor>
      <arglist>[6]</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>droppedEntries</name>
      <anchorfile>d0/d61/structsatox_1_1core_1_1LoggingManager_1_1LogStats.html</anchorfile>
      <anchor>a83d009b4c510917addfe5fff2b9fb7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>queueSize</name>
      <anchorfile>d0/d61/structsatox_1_1core_1_1LoggingManager_1_1LogStats.html</anchorfile>
      <anchor>ac7d8a3c18fc68fa397e9a61d9ba497d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastFlush</name>
      <anchorfile>d0/d61/structsatox_1_1core_1_1LoggingManager_1_1LogStats.html</anchorfile>
      <anchor>af9db0b2c63ebfcbcf7e4d2acc6024364</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::blockchain::LRUCache</name>
    <filename>d2/d84/classsatox_1_1blockchain_1_1LRUCache.html</filename>
    <templarg>typename T</templarg>
    <member kind="function">
      <type></type>
      <name>LRUCache</name>
      <anchorfile>d2/d84/classsatox_1_1blockchain_1_1LRUCache.html</anchorfile>
      <anchor>a671bbbecaf1011ae0ec518c789b4e55e</anchor>
      <arglist>(size_t capacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put</name>
      <anchorfile>d2/d84/classsatox_1_1blockchain_1_1LRUCache.html</anchorfile>
      <anchor>a170c01139fd7942d3c3184e78ef26d93</anchor>
      <arglist>(const std::string &amp;key, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>d2/d84/classsatox_1_1blockchain_1_1LRUCache.html</anchorfile>
      <anchor>a4d5a3345ecfeaa0ea5c315e815c5147b</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; T &gt;</type>
      <name>get</name>
      <anchorfile>d2/d84/classsatox_1_1blockchain_1_1LRUCache.html</anchorfile>
      <anchor>aa855e793665a2a6968dc0897be72e70a</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>d2/d84/classsatox_1_1blockchain_1_1LRUCache.html</anchorfile>
      <anchor>ada0d8047ff0698e29c911fc7f4751029</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::MerkleTree</name>
    <filename>d0/de2/classsatox_1_1core_1_1MerkleTree.html</filename>
    <member kind="function">
      <type></type>
      <name>MerkleTree</name>
      <anchorfile>d0/de2/classsatox_1_1core_1_1MerkleTree.html</anchorfile>
      <anchor>a4dc4cbd9f39b3dbc5166f13af47ed844</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MerkleTree</name>
      <anchorfile>d0/de2/classsatox_1_1core_1_1MerkleTree.html</anchorfile>
      <anchor>af960ea492f0ba4cde30bed71c3a928cd</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MerkleTree</name>
      <anchorfile>d0/de2/classsatox_1_1core_1_1MerkleTree.html</anchorfile>
      <anchor>a3bca7636a0e75fbe6a740426fc9379f8</anchor>
      <arglist>(const MerkleTree &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>MerkleTree &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/de2/classsatox_1_1core_1_1MerkleTree.html</anchorfile>
      <anchor>a18c5da965129417729b3d208aac9a5ad</anchor>
      <arglist>(const MerkleTree &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MerkleTree</name>
      <anchorfile>d0/de2/classsatox_1_1core_1_1MerkleTree.html</anchorfile>
      <anchor>a5f3cc6158d5b348fceff9630a2494699</anchor>
      <arglist>(MerkleTree &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>MerkleTree &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/de2/classsatox_1_1core_1_1MerkleTree.html</anchorfile>
      <anchor>a886d5e205c625277d36f04a4135400b5</anchor>
      <arglist>(MerkleTree &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildTree</name>
      <anchorfile>d0/de2/classsatox_1_1core_1_1MerkleTree.html</anchorfile>
      <anchor>ab1b66e9ee4d06f07a721b1f0f3eedd4b</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;transactions)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getRoot</name>
      <anchorfile>d0/de2/classsatox_1_1core_1_1MerkleTree.html</anchorfile>
      <anchor>af616c48f0d2e0a3e39cd9f637dd9d8c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getProof</name>
      <anchorfile>d0/de2/classsatox_1_1core_1_1MerkleTree.html</anchorfile>
      <anchor>a8b02a10da12fe0c6040545df4a185ff3</anchor>
      <arglist>(const std::string &amp;transaction) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyProof</name>
      <anchorfile>d0/de2/classsatox_1_1core_1_1MerkleTree.html</anchorfile>
      <anchor>aa5bf3805b9aec9ca935963771143dfe4</anchor>
      <arglist>(const std::string &amp;transaction, const std::string &amp;root, const std::vector&lt; std::string &gt; &amp;proof) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::MessageHandler</name>
    <filename>d1/def/classsatox_1_1core_1_1MessageHandler.html</filename>
    <member kind="typedef">
      <type>std::function&lt; void(const NetworkMessage &amp;)&gt;</type>
      <name>MessageCallback</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>a71256453f9fc22bd7c80a3ebda136d07</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageHandler</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>adf9d791fc56f268d63ce31902f3fadcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MessageHandler</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>a4ab1747d7a9c4e7210052bf15bf549d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enqueueMessage</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>a845ed3aaa94fc544eb1a09af50dfaf31</anchor>
      <arglist>(const NetworkMessage &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processNextMessage</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>aff2564461adcd67f3fb7bd4a36f0e7d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startProcessing</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>ac23b890a665b9b64d1754d5c879f5b6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopProcessing</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>adab2c8f3f9779818e5d60998b770cb6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generateRequestId</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>aef9a891ede6f3fb01b2070c6cb34e05b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; NetworkMessage &gt;</type>
      <name>waitForResponse</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>a21b5cf8188e023b66bde01b7d3acbb3e</anchor>
      <arglist>(const std::string &amp;requestId, std::chrono::milliseconds timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleResponse</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>a9665d75b87b954618c86e55340eacff8</anchor>
      <arglist>(const NetworkMessage &amp;response)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessageCallback</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>a188e998fbbda6ca8a3edb50223b9ab8e</anchor>
      <arglist>(MessageCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorCallback</name>
      <anchorfile>d1/def/classsatox_1_1core_1_1MessageHandler.html</anchorfile>
      <anchor>ae70c74bc1688e5129d05d20ce1a3f7e1</anchor>
      <arglist>(std::function&lt; void(const std::string &amp;)&gt; callback)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::MigrationManager::MigrationConfig</name>
    <filename>d3/def/structsatox_1_1database_1_1MigrationManager_1_1MigrationConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>migrations_table</name>
      <anchorfile>d3/def/structsatox_1_1database_1_1MigrationManager_1_1MigrationConfig.html</anchorfile>
      <anchor>a8db96ff476a7baf11f37466d2741b133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>migrations_path</name>
      <anchorfile>d3/def/structsatox_1_1database_1_1MigrationManager_1_1MigrationConfig.html</anchorfile>
      <anchor>a867c2eee9c53e46dc6d693a3ec12b804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>auto_migrate</name>
      <anchorfile>d3/def/structsatox_1_1database_1_1MigrationManager_1_1MigrationConfig.html</anchorfile>
      <anchor>aba0db811da3b9cbe95aa0969adbc0142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>validate_migrations</name>
      <anchorfile>d3/def/structsatox_1_1database_1_1MigrationManager_1_1MigrationConfig.html</anchorfile>
      <anchor>affbd761f65ceec76b3b4bd0e83e33135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>timeout</name>
      <anchorfile>d3/def/structsatox_1_1database_1_1MigrationManager_1_1MigrationConfig.html</anchorfile>
      <anchor>aaee38de63096977386ab67185fb5cd25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::MigrationManager::MigrationInfo</name>
    <filename>d7/df6/structsatox_1_1database_1_1MigrationManager_1_1MigrationInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>d7/df6/structsatox_1_1database_1_1MigrationManager_1_1MigrationInfo.html</anchorfile>
      <anchor>a116b9230ca3162ec234edaae21f085d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d7/df6/structsatox_1_1database_1_1MigrationManager_1_1MigrationInfo.html</anchorfile>
      <anchor>a0272b40a7d70899cb50137b6975c9329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>d7/df6/structsatox_1_1database_1_1MigrationManager_1_1MigrationInfo.html</anchorfile>
      <anchor>a0c0c6dba18d41869dbbf6449d45e386f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>applied_at</name>
      <anchorfile>d7/df6/structsatox_1_1database_1_1MigrationManager_1_1MigrationInfo.html</anchorfile>
      <anchor>a9db3dfeb417143917e1aafd1a8bb4baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>checksum</name>
      <anchorfile>d7/df6/structsatox_1_1database_1_1MigrationManager_1_1MigrationInfo.html</anchorfile>
      <anchor>a3aa372d779b2785a63c4bf6701f083eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d7/df6/structsatox_1_1database_1_1MigrationManager_1_1MigrationInfo.html</anchorfile>
      <anchor>acd24ddee64531e8e419f5da90cd53859</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d7/df6/structsatox_1_1database_1_1MigrationManager_1_1MigrationInfo.html</anchorfile>
      <anchor>ac146217a0407f12c43196a57a0140c22</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::MigrationManager</name>
    <filename>df/d7c/classsatox_1_1database_1_1MigrationManager.html</filename>
    <class kind="struct">satox::database::MigrationManager::MigrationConfig</class>
    <class kind="struct">satox::database::MigrationManager::MigrationInfo</class>
    <class kind="struct">satox::database::MigrationManager::MigrationStats</class>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a3dd19ee5ac7e22f8d6b5f6207677e204</anchor>
      <arglist>(const MigrationConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a4848c6a53030352da074401e24913c13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createMigration</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>ab94e397c95f27ab0ea5f769c0eec2b3c</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;description)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>applyMigration</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a2d5bbdc4d7733cdad9a03cad2bfd851a</anchor>
      <arglist>(const std::string &amp;version)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rollbackMigration</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a860ffb5d147a7f424f0cd7eed8556e67</anchor>
      <arglist>(const std::string &amp;version)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateMigrations</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a206b94237d2500f30eaf814de8ea84e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MigrationInfo &gt;</type>
      <name>getMigrationHistory</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a88b35b9e1b72331e7e72d6d2c822a06f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MigrationInfo &gt;</type>
      <name>getPendingMigrations</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>ae49edaf95cc2ddb68f9c203a260b9974</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MigrationStats</type>
      <name>getStats</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a772737329ba6ba80f5ccf05938e98992</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getCurrentVersion</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a85422acb43fa781848c6c7673f0bb485</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUpToDate</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>ad9601a19d754acf930ef93c9eec7cb6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>migrateUp</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a2497e610a78430783ecbe7e4321c375a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>migrateDown</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>aaf757e4f7ab989c3e104eb08c9e229c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>migrateToVersion</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>aff94538fd758922cd045a462943ee294</anchor>
      <arglist>(const std::string &amp;version)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>migrateToLatest</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a822f5b03f50324854c846af8d0261bf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoMigrate</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a255190b955c53643ffc77bced758c8dd</anchor>
      <arglist>(bool auto_migrate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValidateMigrations</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a2b7436754923b05aa6fa5b233013e005</anchor>
      <arglist>(bool validate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeout</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a5c6c35ac20edac4c6bff4e5b71c5cb3a</anchor>
      <arglist>(std::chrono::seconds timeout)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>a8227489bab5e6cfba3afba94ead35f9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>ae605c3dbfcdb3872bbe533b2d80da170</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MigrationManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>df/d7c/classsatox_1_1database_1_1MigrationManager.html</anchorfile>
      <anchor>adfcf2d7aa34ddb67b71da5695c9f7c81</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::MigrationManager::MigrationStats</name>
    <filename>d0/d53/structsatox_1_1database_1_1MigrationManager_1_1MigrationStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>total_migrations</name>
      <anchorfile>d0/d53/structsatox_1_1database_1_1MigrationManager_1_1MigrationStats.html</anchorfile>
      <anchor>a1542ceb392593f72999fe82777468aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>applied_migrations</name>
      <anchorfile>d0/d53/structsatox_1_1database_1_1MigrationManager_1_1MigrationStats.html</anchorfile>
      <anchor>ac37b292a1404306fe80d686bfd9d202d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>pending_migrations</name>
      <anchorfile>d0/d53/structsatox_1_1database_1_1MigrationManager_1_1MigrationStats.html</anchorfile>
      <anchor>a23e5e8c3183bf3d5e643d06ee66e7b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>failed_migrations</name>
      <anchorfile>d0/d53/structsatox_1_1database_1_1MigrationManager_1_1MigrationStats.html</anchorfile>
      <anchor>a3944b781d5179351b6f98c8b968fe617</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>avg_migration_time</name>
      <anchorfile>d0/d53/structsatox_1_1database_1_1MigrationManager_1_1MigrationStats.html</anchorfile>
      <anchor>a75ca81cac6dae0ea970adbbdb2adeea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>current_version</name>
      <anchorfile>d0/d53/structsatox_1_1database_1_1MigrationManager_1_1MigrationStats.html</anchorfile>
      <anchor>a008679db6c0bb6821c805d1890faa60c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>latest_version</name>
      <anchorfile>d0/d53/structsatox_1_1database_1_1MigrationManager_1_1MigrationStats.html</anchorfile>
      <anchor>afeb513172a0cae410f5e501710f4f95b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::MiningInfo</name>
    <filename>d4/ddc/structsatox_1_1blockchain_1_1MiningInfo.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>height</name>
      <anchorfile>d4/ddc/structsatox_1_1blockchain_1_1MiningInfo.html</anchorfile>
      <anchor>ab12749dd49dd863756e2c091ec214505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>difficulty</name>
      <anchorfile>d4/ddc/structsatox_1_1blockchain_1_1MiningInfo.html</anchorfile>
      <anchor>a938889c7a7b7bdd4e778ad4fd7ec864b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>target</name>
      <anchorfile>d4/ddc/structsatox_1_1blockchain_1_1MiningInfo.html</anchorfile>
      <anchor>aaf8ceeb40a19a0689ba81daf1e78bfb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>reward</name>
      <anchorfile>d4/ddc/structsatox_1_1blockchain_1_1MiningInfo.html</anchorfile>
      <anchor>a0374999e580344e8e94ae889802d8902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>d4/ddc/structsatox_1_1blockchain_1_1MiningInfo.html</anchorfile>
      <anchor>a26b95ed799813e64c2beb6dbd98dc6aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>d4/ddc/structsatox_1_1blockchain_1_1MiningInfo.html</anchorfile>
      <anchor>a5a1d3dbb5aa7ea696a5d9c90c016f412</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::pqc::MLDSA</name>
    <filename>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</filename>
    <class kind="class">satox::security::pqc::MLDSA::Impl</class>
    <member kind="enumeration">
      <type></type>
      <name>SecurityLevel</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>aeed164fbe548fc220ca287c432eae9cc</anchor>
      <arglist></arglist>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca0cbbfd5a182368f83190bf23d2bd5fde">Level2</enumvalue>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca68290d8bb76fe3ceb98d34e8b068f6be">Level3</enumvalue>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca69d39c12009d5b7d336c5e87ca922392">Level5</enumvalue>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca0cbbfd5a182368f83190bf23d2bd5fde">Level2</enumvalue>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca68290d8bb76fe3ceb98d34e8b068f6be">Level3</enumvalue>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca69d39c12009d5b7d336c5e87ca922392">Level5</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SecurityLevel</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>aeed164fbe548fc220ca287c432eae9cc</anchor>
      <arglist></arglist>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca0cbbfd5a182368f83190bf23d2bd5fde">Level2</enumvalue>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca68290d8bb76fe3ceb98d34e8b068f6be">Level3</enumvalue>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca69d39c12009d5b7d336c5e87ca922392">Level5</enumvalue>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca0cbbfd5a182368f83190bf23d2bd5fde">Level2</enumvalue>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca68290d8bb76fe3ceb98d34e8b068f6be">Level3</enumvalue>
      <enumvalue file="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html" anchor="aeed164fbe548fc220ca287c432eae9cca69d39c12009d5b7d336c5e87ca922392">Level5</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>MLDSA</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a96372fd4aaa77e50682ca51cbbcc679a</anchor>
      <arglist>(SecurityLevel level=SecurityLevel::Level3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MLDSA</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>adeafc886ef0deabc3083e6fb0f196acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateKeyPair</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>ac748f656dbdbbcdaf652ab7f3ab190ae</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sign</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a8465cc26cae1015d1b5c0d8aa3ef5295</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;privateKey, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a518b043b5c997f96e76750d69125efa1</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;signature, const std::vector&lt; uint8_t &gt; &amp;publicKey)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>acaa83b6f9418f27804a15769f2e239ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a30a78eceebfda8789eae4ec74999bd5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSignatureSize</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a96298ba6b7cf59702565747655e40423</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SecurityLevel</type>
      <name>getSecurityLevel</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a5ad4969305d306b6b8484ab80d8db783</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a3af097b6a9e77778071759f303431c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a3f23d34c6164e1cc75c1012992fcef24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MLDSA</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a96372fd4aaa77e50682ca51cbbcc679a</anchor>
      <arglist>(SecurityLevel level=SecurityLevel::Level3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MLDSA</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>adeafc886ef0deabc3083e6fb0f196acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateKeyPair</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>ac748f656dbdbbcdaf652ab7f3ab190ae</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sign</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a8465cc26cae1015d1b5c0d8aa3ef5295</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;privateKey, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a518b043b5c997f96e76750d69125efa1</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message, const std::vector&lt; uint8_t &gt; &amp;signature, const std::vector&lt; uint8_t &gt; &amp;publicKey)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>acaa83b6f9418f27804a15769f2e239ab</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a30a78eceebfda8789eae4ec74999bd5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSignatureSize</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a96298ba6b7cf59702565747655e40423</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SecurityLevel</type>
      <name>getSecurityLevel</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>aa4679f60cbedd52308597c962e4980ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a3af097b6a9e77778071759f303431c71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA.html</anchorfile>
      <anchor>a3f23d34c6164e1cc75c1012992fcef24</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::pqc::MLKEM</name>
    <filename>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</filename>
    <class kind="class">satox::security::pqc::MLKEM::Impl</class>
    <member kind="enumeration">
      <type></type>
      <name>SecurityLevel</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>ad4b148c35e9eae7df4ac85231487f6ec</anchor>
      <arglist></arglist>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca63664aa8bee7544118de87bf48d529ee">Level1</enumvalue>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca68290d8bb76fe3ceb98d34e8b068f6be">Level3</enumvalue>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca69d39c12009d5b7d336c5e87ca922392">Level5</enumvalue>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca63664aa8bee7544118de87bf48d529ee">Level1</enumvalue>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca68290d8bb76fe3ceb98d34e8b068f6be">Level3</enumvalue>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca69d39c12009d5b7d336c5e87ca922392">Level5</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SecurityLevel</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>ad4b148c35e9eae7df4ac85231487f6ec</anchor>
      <arglist></arglist>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca63664aa8bee7544118de87bf48d529ee">Level1</enumvalue>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca68290d8bb76fe3ceb98d34e8b068f6be">Level3</enumvalue>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca69d39c12009d5b7d336c5e87ca922392">Level5</enumvalue>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca63664aa8bee7544118de87bf48d529ee">Level1</enumvalue>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca68290d8bb76fe3ceb98d34e8b068f6be">Level3</enumvalue>
      <enumvalue file="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html" anchor="ad4b148c35e9eae7df4ac85231487f6eca69d39c12009d5b7d336c5e87ca922392">Level5</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>MLKEM</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a52c73657cc41364c1e715fd59854405a</anchor>
      <arglist>(SecurityLevel level=SecurityLevel::Level3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MLKEM</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a5a597bc5a575d13340b81defa6fd1b43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateKeyPair</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>aafec756d46a235a04d198cc5ded7e5ba</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>encapsulate</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a47e8c22640047421b8f55e4e9a348b03</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;ciphertext, std::vector&lt; uint8_t &gt; &amp;sharedSecret)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decapsulate</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a40501c583b4c09c63de7c54aadbb7bd7</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::vector&lt; uint8_t &gt; &amp;ciphertext, std::vector&lt; uint8_t &gt; &amp;sharedSecret)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a1dd4ceeb17a87376368507a30b80ff6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a7dc4257db86a5b1b4cd7fb6db1791d8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCiphertextSize</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a17f5a99d44527e760cc1769be24bedd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSharedSecretSize</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a223f61018531cd27da5897f8125ce109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SecurityLevel</type>
      <name>getSecurityLevel</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>aa7aec49ef9298922e736f206aa45cad6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a4dfcef989693f185272924797a6c7850</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>add5f8a91323363d50800f4409a7c3c9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MLKEM</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a52c73657cc41364c1e715fd59854405a</anchor>
      <arglist>(SecurityLevel level=SecurityLevel::Level3)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MLKEM</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a5a597bc5a575d13340b81defa6fd1b43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateKeyPair</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>aafec756d46a235a04d198cc5ded7e5ba</anchor>
      <arglist>(std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>encapsulate</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a47e8c22640047421b8f55e4e9a348b03</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey, std::vector&lt; uint8_t &gt; &amp;ciphertext, std::vector&lt; uint8_t &gt; &amp;sharedSecret)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decapsulate</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a40501c583b4c09c63de7c54aadbb7bd7</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::vector&lt; uint8_t &gt; &amp;ciphertext, std::vector&lt; uint8_t &gt; &amp;sharedSecret)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPublicKeySize</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a1dd4ceeb17a87376368507a30b80ff6a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getPrivateKeySize</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a7dc4257db86a5b1b4cd7fb6db1791d8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCiphertextSize</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a17f5a99d44527e760cc1769be24bedd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSharedSecretSize</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a223f61018531cd27da5897f8125ce109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SecurityLevel</type>
      <name>getSecurityLevel</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>ae2eafe26b805bd1f6f3fa5d1756008ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>a4dfcef989693f185272924797a6c7850</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM.html</anchorfile>
      <anchor>add5f8a91323363d50800f4409a7c3c9f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletManager::MultisigTransaction</name>
    <filename>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>txid</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>aa0d5931ad871355f13fe569c6fd3c4ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>walletId</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>a190ff63205f1a2650a6b92383dd4600d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>inputs</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>a992e0c695913b56f8a13ddf87a018a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>outputs</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>acb033df2d2a42e02b52eadc0a67a3fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>a3a906a2f2356e1fd6561ded5d0466b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>assetName</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>a3cfa57ea21eced3f177ae9b61c602dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>signatures</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>a97a609719dade8dcf08eb8907a1f1ad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>requiredSignatures</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>a2e53f6960ccc7e2e39468327eeba8874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>currentSignatures</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>af19df53bda1290649c19227f30fe108e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>createdAt</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>a590d729900e68ee9acf34a14e67451ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>expiresAt</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>ac2ad589f95264141c414e281828e8b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d1/d3c/structsatox_1_1wallet_1_1WalletManager_1_1MultisigTransaction.html</anchorfile>
      <anchor>a2b22ebbd27064fce1ef17cbe6a488560</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::NetworkConfig</name>
    <filename>d5/de8/structsatox_1_1blockchain_1_1NetworkConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>host</name>
      <anchorfile>d5/de8/structsatox_1_1blockchain_1_1NetworkConfig.html</anchorfile>
      <anchor>a2943b34f048c9c410f5daebc99d220ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>port</name>
      <anchorfile>d5/de8/structsatox_1_1blockchain_1_1NetworkConfig.html</anchorfile>
      <anchor>a7a6e1e80d08b09899f583225b988de92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>username</name>
      <anchorfile>d5/de8/structsatox_1_1blockchain_1_1NetworkConfig.html</anchorfile>
      <anchor>a7e7689405309ad3e95b22c5697b0ce89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>password</name>
      <anchorfile>d5/de8/structsatox_1_1blockchain_1_1NetworkConfig.html</anchorfile>
      <anchor>ab9cb55b933c89d00b20c33acc93f8fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>timeout</name>
      <anchorfile>d5/de8/structsatox_1_1blockchain_1_1NetworkConfig.html</anchorfile>
      <anchor>a0051498bee777ef651b45a3e67dc3f22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableSSL</name>
      <anchorfile>d5/de8/structsatox_1_1blockchain_1_1NetworkConfig.html</anchorfile>
      <anchor>ab8741146bb13bbf5fd06cfaa1418c372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sslCertPath</name>
      <anchorfile>d5/de8/structsatox_1_1blockchain_1_1NetworkConfig.html</anchorfile>
      <anchor>ace82275e5fbe9fd646115da826211f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sslKeyPath</name>
      <anchorfile>d5/de8/structsatox_1_1blockchain_1_1NetworkConfig.html</anchorfile>
      <anchor>a54d94ee4607bbf704b49410e42def329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalConfig</name>
      <anchorfile>d5/de8/structsatox_1_1blockchain_1_1NetworkConfig.html</anchorfile>
      <anchor>a63281e6a41ac5b51395eb9f8ee9ec9be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::NetworkConfig</name>
    <filename>db/ded/structsatox_1_1core_1_1NetworkConfig.html</filename>
    <member kind="variable">
      <type>NetworkType</type>
      <name>type</name>
      <anchorfile>db/ded/structsatox_1_1core_1_1NetworkConfig.html</anchorfile>
      <anchor>ad0288a12fe747db473d19c1cc5453638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpcHost</name>
      <anchorfile>db/ded/structsatox_1_1core_1_1NetworkConfig.html</anchorfile>
      <anchor>a5405625a6a6e08c75308434061b04b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rpcPort</name>
      <anchorfile>db/ded/structsatox_1_1core_1_1NetworkConfig.html</anchorfile>
      <anchor>a85d2ca91e9193ced99e70cfdea1986a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpcUser</name>
      <anchorfile>db/ded/structsatox_1_1core_1_1NetworkConfig.html</anchorfile>
      <anchor>ad2f2da12adb4fadb4fb3537611623ebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>rpcPassword</name>
      <anchorfile>db/ded/structsatox_1_1core_1_1NetworkConfig.html</anchorfile>
      <anchor>a912c102edb78475044f926754c77b037</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useSSL</name>
      <anchorfile>db/ded/structsatox_1_1core_1_1NetworkConfig.html</anchorfile>
      <anchor>a60a6e0dab105efaa42a069d30bc4b81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>timeoutSeconds</name>
      <anchorfile>db/ded/structsatox_1_1core_1_1NetworkConfig.html</anchorfile>
      <anchor>a43c45e406f45625d7b0f78b36780cc7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>retryAttempts</name>
      <anchorfile>db/ded/structsatox_1_1core_1_1NetworkConfig.html</anchorfile>
      <anchor>ac52c29bb3fc1a223c5ccf23ec94c7914</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::NetworkConfig</name>
    <filename>dc/d3a/structsatox_1_1network_1_1NetworkConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>dc/d3a/structsatox_1_1network_1_1NetworkConfig.html</anchorfile>
      <anchor>ac62d0629e51212bd5808a5fea63790f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLogging</name>
      <anchorfile>dc/d3a/structsatox_1_1network_1_1NetworkConfig.html</anchorfile>
      <anchor>ac9f4816d3fe43391357cfb75d04c4a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logPath</name>
      <anchorfile>dc/d3a/structsatox_1_1network_1_1NetworkConfig.html</anchorfile>
      <anchor>a7a37f401eb8606ab738c251779397a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalConfig</name>
      <anchorfile>dc/d3a/structsatox_1_1network_1_1NetworkConfig.html</anchorfile>
      <anchor>af1aaa7bdf9021c2e4052479ada020f76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::NetworkManager::NetworkConfig</name>
    <filename>dd/d44/structsatox_1_1network_1_1NetworkManager_1_1NetworkConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>host</name>
      <anchorfile>dd/d44/structsatox_1_1network_1_1NetworkManager_1_1NetworkConfig.html</anchorfile>
      <anchor>abb3fb7860b7a7fbac4d0377eaa223270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>p2p_port</name>
      <anchorfile>dd/d44/structsatox_1_1network_1_1NetworkManager_1_1NetworkConfig.html</anchorfile>
      <anchor>ac04ca9131b192b6a6067c8fe0f2c26c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rpc_port</name>
      <anchorfile>dd/d44/structsatox_1_1network_1_1NetworkManager_1_1NetworkConfig.html</anchorfile>
      <anchor>acf0d8fd8fe695e0b9bbc057e3b58f9d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>max_connections</name>
      <anchorfile>dd/d44/structsatox_1_1network_1_1NetworkManager_1_1NetworkConfig.html</anchorfile>
      <anchor>a2fa942d0b0f078425788dae6af063a40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_ssl</name>
      <anchorfile>dd/d44/structsatox_1_1network_1_1NetworkManager_1_1NetworkConfig.html</anchorfile>
      <anchor>a4e8f5a810f1a988e84a1750216eaafb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_cert_path</name>
      <anchorfile>dd/d44/structsatox_1_1network_1_1NetworkManager_1_1NetworkConfig.html</anchorfile>
      <anchor>a924091bee5ab0410b631d93379f405b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_key_path</name>
      <anchorfile>dd/d44/structsatox_1_1network_1_1NetworkManager_1_1NetworkConfig.html</anchorfile>
      <anchor>a5ebf25790410bf78188b34d30294654f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LetsEncryptManager::Config</type>
      <name>letsencrypt_config</name>
      <anchorfile>dd/d44/structsatox_1_1network_1_1NetworkManager_1_1NetworkConfig.html</anchorfile>
      <anchor>a739fd76d8c639aa9f49a047d39af7b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SecurityConfig</type>
      <name>security</name>
      <anchorfile>dd/d44/structsatox_1_1network_1_1NetworkManager_1_1NetworkConfig.html</anchorfile>
      <anchor>a57e878c8784ede761bcb98bfe7b51f40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::NetworkConfigManager</name>
    <filename>d0/dd9/classsatox_1_1core_1_1NetworkConfigManager.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>loadConfig</name>
      <anchorfile>d0/dd9/classsatox_1_1core_1_1NetworkConfigManager.html</anchorfile>
      <anchor>a5c8557ffe8e69fabdf5fc52373b7e094</anchor>
      <arglist>(const std::string &amp;configPath=&quot;config/network.json&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>saveConfig</name>
      <anchorfile>d0/dd9/classsatox_1_1core_1_1NetworkConfigManager.html</anchorfile>
      <anchor>a18b12b3b7a88862bd0b8620aebe9936d</anchor>
      <arglist>(const std::string &amp;configPath=&quot;config/network.json&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const NetworkConfig &amp;</type>
      <name>getConfig</name>
      <anchorfile>d0/dd9/classsatox_1_1core_1_1NetworkConfigManager.html</anchorfile>
      <anchor>a43a60a854799bb593415cc3fb90e4d4f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateConfig</name>
      <anchorfile>d0/dd9/classsatox_1_1core_1_1NetworkConfigManager.html</anchorfile>
      <anchor>a88567d3a7c141dce2619df29a2580b91</anchor>
      <arglist>(const NetworkConfig &amp;config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NetworkConfigManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d0/dd9/classsatox_1_1core_1_1NetworkConfigManager.html</anchorfile>
      <anchor>a35569132badcb19534096805934c806e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>networkTypeToString</name>
      <anchorfile>d0/dd9/classsatox_1_1core_1_1NetworkConfigManager.html</anchorfile>
      <anchor>a40dfe9621e1d80949e36f7d1c960f424</anchor>
      <arglist>(NetworkType type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NetworkType</type>
      <name>stringToNetworkType</name>
      <anchorfile>d0/dd9/classsatox_1_1core_1_1NetworkConfigManager.html</anchorfile>
      <anchor>afeb22340a32b2e2c962cb6cd828f5412</anchor>
      <arglist>(const std::string &amp;type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::network::NetworkException</name>
    <filename>d5/db6/classsatox_1_1network_1_1NetworkException.html</filename>
    <member kind="function">
      <type></type>
      <name>NetworkException</name>
      <anchorfile>d5/db6/classsatox_1_1network_1_1NetworkException.html</anchorfile>
      <anchor>a25b11c15f1f151967b8d06ff2e326bee</anchor>
      <arglist>(NetworkErrorCode code, const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>d5/db6/classsatox_1_1network_1_1NetworkException.html</anchorfile>
      <anchor>a40ea8df522df1db371fcdcaea28fc363</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>NetworkErrorCode</type>
      <name>code</name>
      <anchorfile>d5/db6/classsatox_1_1network_1_1NetworkException.html</anchorfile>
      <anchor>a49114341a365bf79ea92584218dc72f3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>message</name>
      <anchorfile>d5/db6/classsatox_1_1network_1_1NetworkException.html</anchorfile>
      <anchor>a867dad6f054bd6b59c823770db4ddaa0</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::NetworkHealth</name>
    <filename>de/d87/structsatox_1_1network_1_1NetworkHealth.html</filename>
    <member kind="variable">
      <type>NetworkStatus</type>
      <name>status</name>
      <anchorfile>de/d87/structsatox_1_1network_1_1NetworkHealth.html</anchorfile>
      <anchor>a094a3effd668f35bddd0d8dd6c6d00ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>healthy</name>
      <anchorfile>de/d87/structsatox_1_1network_1_1NetworkHealth.html</anchorfile>
      <anchor>a21451598eab7e46acd5ece27e981a9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>de/d87/structsatox_1_1network_1_1NetworkHealth.html</anchorfile>
      <anchor>a761cce53a3443f2abe635e79d62d5039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastCheck</name>
      <anchorfile>de/d87/structsatox_1_1network_1_1NetworkHealth.html</anchorfile>
      <anchor>a9b7a6f16393bf219090867dcb4e1abae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>consecutiveFailures</name>
      <anchorfile>de/d87/structsatox_1_1network_1_1NetworkHealth.html</anchorfile>
      <anchor>a20344106f7de46ffe30d202e08563661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>details</name>
      <anchorfile>de/d87/structsatox_1_1network_1_1NetworkHealth.html</anchorfile>
      <anchor>a264dd249d4711c3f1276cc681e07e6c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::network::NetworkInitializationException</name>
    <filename>d9/dfa/classsatox_1_1network_1_1NetworkInitializationException.html</filename>
    <base>satox::network::NetworkException</base>
    <member kind="function">
      <type></type>
      <name>NetworkInitializationException</name>
      <anchorfile>d9/dfa/classsatox_1_1network_1_1NetworkInitializationException.html</anchorfile>
      <anchor>a5266b75f1cf7c1a6edf4024b3dacf572</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::NetworkInterface</name>
    <filename>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>NetworkInterface</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>aa4153b3164eeb5c540cd6f0db45676e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NetworkInterface</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a5d85643e6b44de50a76cfd1104208b7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NetworkInterface</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>add2288586f872b9ed8c9f5558472fe8a</anchor>
      <arglist>(const NetworkInterface &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>NetworkInterface &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>af180f35436c530496bf659a9c6e7d3d9</anchor>
      <arglist>(const NetworkInterface &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NetworkInterface</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a7c12e298782717f680d7b1d6ab7836b4</anchor>
      <arglist>(NetworkInterface &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>NetworkInterface &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>ab92de6cb019c819343ec867a9c48b4ea</anchor>
      <arglist>(NetworkInterface &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a79f3ce0481b48306da23b51049059455</anchor>
      <arglist>(const std::string &amp;address, uint16_t port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a03ee7120c3d8d7cee0b0c2c92e22f2cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a2d4bda12bda8022cc18b98ce70c9fca2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sendMessage</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a99f99ff6e32385c17d7105e68b13453b</anchor>
      <arglist>(const NetworkMessage &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessageCallback</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a176bb64344072355aa8e706af637a16b</anchor>
      <arglist>(std::function&lt; void(const NetworkMessage &amp;)&gt; callback)</arglist>
    </member>
    <member kind="function">
      <type>NetworkResponse</type>
      <name>waitForResponse</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>ad3543350dc2848be54d1102125ebb7e5</anchor>
      <arglist>(const std::string &amp;requestId, std::chrono::milliseconds timeout=std::chrono::seconds(30))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>handleResponse</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>adc28f5f7241ced861feb691be61cb82d</anchor>
      <arglist>(const NetworkMessage &amp;response)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getPeers</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>ac5711a797cb2902f3d4aafc7bbd24425</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPeer</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a428738938876b23899b61222f193d68b</anchor>
      <arglist>(const std::string &amp;address, uint16_t port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeer</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>ad779a365a1d901d4fc613fc7f3333877</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcastMessage</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>ac280e92dca6bc7faf3de160dc0bede6c</anchor>
      <arglist>(const NetworkMessage &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLatestBlock</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a9c005cce6778916bc964303606ff64e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getBlockByHash</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>af4661bc16515675317f2ce1e7a6bab2d</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTransactionByHash</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>ae631e6e658f98a70b8c5726f9264b01a</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getBalance</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a738678646ce5ef43ae07d13211f4d094</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sendTransaction</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>aed28092a56c4b98c7a16fe06bd76f6c3</anchor>
      <arglist>(const std::string &amp;transaction)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NetworkMessage &gt;</type>
      <name>getMessages</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>aa43a0f71992e67835290af2abfac074c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorCallback</name>
      <anchorfile>d2/dfe/classsatox_1_1core_1_1NetworkInterface.html</anchorfile>
      <anchor>a543be0fa65933723b904dd3e0aba4e20</anchor>
      <arglist>(std::function&lt; void(const std::string &amp;)&gt; callback)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::NetworkManager</name>
    <filename>d5/d44/classsatox_1_1core_1_1NetworkManager.html</filename>
    <class kind="struct">satox::core::NetworkManager::ConnectionInfo</class>
    <class kind="struct">satox::core::NetworkManager::NetworkStats</class>
    <member kind="enumeration">
      <type></type>
      <name>NetworkType</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a84022d88a370f07dc58ff2f276004570</anchor>
      <arglist></arglist>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a84022d88a370f07dc58ff2f276004570a9ff86ed474dbbbbe88b28ee45ec70994">MAINNET</enumvalue>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a84022d88a370f07dc58ff2f276004570ace8400aeb0c47ce5cd8e37a3a54e557b">TESTNET</enumvalue>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a84022d88a370f07dc58ff2f276004570ad10d9759c6b71ea71a78e3a55bafc4d5">REGTEST</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConnectionState</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a07ff072d52fc409fbe89c399bd71f1fa</anchor>
      <arglist></arglist>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a07ff072d52fc409fbe89c399bd71f1faa99c8ce56e7ab246445d3b134724428f3">DISCONNECTED</enumvalue>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a07ff072d52fc409fbe89c399bd71f1faa9a14f95e151eec641316e7c784ce832d">CONNECTING</enumvalue>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a07ff072d52fc409fbe89c399bd71f1faaa5afd6edd5336d91316964e493936858">CONNECTED</enumvalue>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a07ff072d52fc409fbe89c399bd71f1faaad793e31fab5703fc5b990cf40f8a585">DISCONNECTING</enumvalue>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a07ff072d52fc409fbe89c399bd71f1faabb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NodeType</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a5c09eab48e770bfb56c5c65a7207097e</anchor>
      <arglist></arglist>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a5c09eab48e770bfb56c5c65a7207097eaba7de5bc6888294e5884b024a4c894f1">FULL</enumvalue>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a5c09eab48e770bfb56c5c65a7207097eaf8589806bbf66241917092b2a6e18c6f">LIGHT</enumvalue>
      <enumvalue file="d5/d44/classsatox_1_1core_1_1NetworkManager.html" anchor="a5c09eab48e770bfb56c5c65a7207097ea71f01f32e90440fd6039511dde69e995">ARCHIVE</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, ConnectionState)&gt;</type>
      <name>ConnectionCallback</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a557759b7e583bf98d58c4421e661f80d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;, const nlohmann::json &amp;)&gt;</type>
      <name>MessageCallback</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a499b68605c687c37a85e7ee5aad09ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a3624f7021d3699a307a46d8241968017</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a60e4d9e10df8587656e930d47b650b20</anchor>
      <arglist>(const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>af19800903297a83dad5db2b2e33da421</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a538c8198939f47b0e15447df701e993b</anchor>
      <arglist>(const std::string &amp;address, uint16_t port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a66ad8a88fd450c4df94c0a4b66644ab1</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a31fa408b8b61bc59b801cddc424289f8</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>ConnectionState</type>
      <name>getConnectionState</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>af0c32a82eb97cefbc6798e8af5386920</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ConnectionInfo &gt;</type>
      <name>getConnections</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a198a340882a222e8f6f8d55667f6da09</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConnectionInfo</type>
      <name>getConnectionInfo</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a8ab3b83a244080d07178eaacf5a78aa3</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendMessage</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a0d8460f04707e52cb2420410112b7132</anchor>
      <arglist>(const std::string &amp;address, const std::string &amp;type, const nlohmann::json &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastMessage</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>accc86abda1b734b3890b36aafd6ad3c0</anchor>
      <arglist>(const std::string &amp;type, const nlohmann::json &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>subscribeToMessages</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>acd52402e2730e1d120dd9e6b2a3ad8fd</anchor>
      <arglist>(const std::string &amp;type, MessageCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unsubscribeFromMessages</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a661460968db0d80c0bc580dfdd5c5777</anchor>
      <arglist>(const std::string &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNetworkType</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a5496724f9804ee087608769e073f6551</anchor>
      <arglist>(NetworkType type)</arglist>
    </member>
    <member kind="function">
      <type>NetworkType</type>
      <name>getNetworkType</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>ab6758b981f657d9c6ce2f51ab0d45b53</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNodeType</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a3e32976d94000a8760a8128ee2433885</anchor>
      <arglist>(NodeType type)</arglist>
    </member>
    <member kind="function">
      <type>NodeType</type>
      <name>getNodeType</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>ac229667211f653f9f7c77f3271b3ae8a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setMaxConnections</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a625544fdb358a882b02b339a298763e3</anchor>
      <arglist>(size_t max)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getMaxConnections</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>ac7767df73b07426412c600347ecb5c3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setConnectionTimeout</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>aed5601f62e79ab3b99692a52000b1956</anchor>
      <arglist>(std::chrono::milliseconds timeout)</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::milliseconds</type>
      <name>getConnectionTimeout</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a4393059d3e10db1b934b088f32cce5ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>discoverNodes</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a43d5c70732e7c13579f9adefb8831fa4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addNode</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a5cecd830ad857acf15b2b00e6a5b18ba</anchor>
      <arglist>(const std::string &amp;address, uint16_t port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeNode</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>aedbe27826188e57c2baec57994835077</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeKnown</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>aaaf3f158d674c35048266e53b9c37a2e</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>NetworkStats</type>
      <name>getStats</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a67281277576821792839e0cdaef41253</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>ab90b3ad9ab857f7fa8352e364d5545a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a789bdbfcbe4a1e88bf34493d95be7177</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerConnectionCallback</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a75b3e273cd9663c8a5aa8984d00d6288</anchor>
      <arglist>(ConnectionCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>af40612da9711427b9ec3e99aba9a7642</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterConnectionCallback</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a74a5efffa88c036177aac9a36a15ffee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a64cb419310b40bcfd6f71ae356b8f1db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a116784bd68432ad30bfd3924bb94ee8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a73e73340eece466ef4fd1de37bfa75d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NetworkManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d5/d44/classsatox_1_1core_1_1NetworkManager.html</anchorfile>
      <anchor>a005891a357a019f087dd0fd20d92ad3d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::network::NetworkManager</name>
    <filename>d0/da4/classsatox_1_1network_1_1NetworkManager.html</filename>
    <class kind="class">satox::network::NetworkManager::Impl</class>
    <class kind="struct">satox::network::NetworkManager::NetworkConfig</class>
    <class kind="struct">satox::network::NetworkManager::NetworkStats</class>
    <class kind="struct">satox::network::NetworkManager::RPCRequest</class>
    <class kind="struct">satox::network::NetworkManager::RPCResponse</class>
    <class kind="struct">satox::network::NetworkManager::SecurityConfig</class>
    <member kind="enumeration">
      <type></type>
      <name>MessageType</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a46f8f6f4073c6cf6d121235fea6abe8c</anchor>
      <arglist></arglist>
      <enumvalue file="d0/da4/classsatox_1_1network_1_1NetworkManager.html" anchor="a46f8f6f4073c6cf6d121235fea6abe8caba0f80fd6dc71eb760cb83b97b8d3035">P2P_MESSAGE</enumvalue>
      <enumvalue file="d0/da4/classsatox_1_1network_1_1NetworkManager.html" anchor="a46f8f6f4073c6cf6d121235fea6abe8ca1f2b7d58390dd9ed323d33e211bb09b6">RPC_REQUEST</enumvalue>
      <enumvalue file="d0/da4/classsatox_1_1network_1_1NetworkManager.html" anchor="a46f8f6f4073c6cf6d121235fea6abe8ca9a325d5a48aef8c80e4c212d68924eb8">RPC_RESPONSE</enumvalue>
      <enumvalue file="d0/da4/classsatox_1_1network_1_1NetworkManager.html" anchor="a46f8f6f4073c6cf6d121235fea6abe8ca0d895a0a05a7cce9b2c0c8bb252f78cc">HEARTBEAT</enumvalue>
      <enumvalue file="d0/da4/classsatox_1_1network_1_1NetworkManager.html" anchor="a46f8f6f4073c6cf6d121235fea6abe8cafcfc11b740f8aad4ccf8f5e733f3a4e9">PEER_DISCOVERY</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::vector&lt; uint8_t &gt; &amp;)&gt;</type>
      <name>MessageCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a61c81a830c70a4c6658f5ecaba122094</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, bool)&gt;</type>
      <name>PeerCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ae937e3dc0502a142ab5ac47167368aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const RPCResponse &amp;)&gt;</type>
      <name>RPCCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a8e964c5477010502865f09f3831544fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(MessageType, const std::string &amp;, const std::vector&lt; uint8_t &gt; &amp;)&gt;</type>
      <name>MessageCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a55e4d3ad1fcfcd3bc97859be527fe7ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, bool)&gt;</type>
      <name>PeerCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ae937e3dc0502a142ab5ac47167368aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a42ee5c83f93fc704b6470fa20c8848f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LetsEncryptManager::CertificateUpdateCallback</type>
      <name>CertificateUpdateCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ad6f5c730e8da45ddc99fec42d3788795</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NetworkManager</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a90d4295054a04b7860e9ad6685347e72</anchor>
      <arglist>(const std::string &amp;type, int port)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NetworkManager</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a243b2bb2a7bd8496dcf8795a05b4911c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a140719fdaa1a26d9533c976149276384</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a7b3e64713927bf383ba5146520d8ae48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a1b5c99bf017bfcddb202e6f11ed598ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startListening</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a70d04335690fe349dcd6a9802d5dcc65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stopListening</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>aeb9fefad1fe4ea84afb08dc38b5132e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a7b1b6a98118ae20332b2b5fc4ba94776</anchor>
      <arglist>(const std::string &amp;address, int port)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a4982164741dc9b17aba2cc773f92f71c</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcast</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a06307bd7c4e4f960286752409e224443</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>send</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ac90367907199ad3113c8fd105ee65916</anchor>
      <arglist>(const std::string &amp;address, const std::vector&lt; uint8_t &gt; &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerMessageCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a7ab137d83a02921ed48515e1a98bed75</anchor>
      <arglist>(MessageCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerPeerCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a8637c7ddba487b54048c49dd6ebc48c8</anchor>
      <arglist>(PeerCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getConnectedPeers</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a93f8a93d8d0cea17f0aea885704f8e8d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPeerConnected</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ace8c83d0fedce17114aea903566ca4c9</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPeerCount</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ac1671eafd426dbc8031cdf40bece67a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a0b483bf2832c88547d6e0a80194a7952</anchor>
      <arglist>(const NetworkConfig &amp;config=NetworkConfig{})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shutdown</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a7b3e64713927bf383ba5146520d8ae48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a9d1515ad852f2f2fbc82925cec61fe9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a32e9e41b455b2da9753e48fe0e9f7de6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a45c5bce667450a3cc15b5baeb0e55ee7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isP2PRunning</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a0f53c40765516fd288cd7dfe377b8eae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRPCRunning</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>acc3a11eefe463db6184565867518d076</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startP2P</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>aea2316b0381413f4fc7c76444f35ccf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopP2P</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a1db68300569b25205ad413ed550b83a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectToPeer</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a7b3bd1e14fca9953461ea3f501df24f7</anchor>
      <arglist>(const std::string &amp;address, uint16_t port)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectPeer</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>abfb9e0633c18a16fc972a1d9c0d409ce</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPeerConnected</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ace8c83d0fedce17114aea903566ca4c9</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Peer &gt;</type>
      <name>getConnectedPeers</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a297e4876d10872975b333924b588b85b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPeerCount</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ac1671eafd426dbc8031cdf40bece67a9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startRPC</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a52d35cc9b3411614d850fd16454ef06f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopRPC</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a577b14e32e0cb39b9348be7a2ac64822</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerRPCMethod</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ac47d4c2bf60b0b7f131ed350ca4cfb43</anchor>
      <arglist>(const std::string &amp;method, std::function&lt; RPCResponse(const RPCRequest &amp;)&gt; handler)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>callRPC</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a835c255045db787f429de83cd5d66fbe</anchor>
      <arglist>(const std::string &amp;address, const RPCRequest &amp;request, RPCCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendP2PMessage</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a386383c2347d0bfb94b61f5ab359489d</anchor>
      <arglist>(const std::string &amp;peer_address, const std::vector&lt; uint8_t &gt; &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sendRPCMessage</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>aff092c3045f529e4ba6b46c45efa426d</anchor>
      <arglist>(const std::string &amp;client_address, const nlohmann::json &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerMessageCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a6b76f8d53986fe5580e4a36c91572204</anchor>
      <arglist>(MessageType type, MessageCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterMessageCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a19224836d039a8329fd589229693f0e6</anchor>
      <arglist>(MessageType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerPeerCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a8637c7ddba487b54048c49dd6ebc48c8</anchor>
      <arglist>(PeerCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterPeerCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>adce4d53d623845faa17659dbc78ae11c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ac306afebb77c6b57f69e8578e796dd37</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a853ddd2e2f41ce7430354ab9ec00f873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableEncryption</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a5514868aab271932db2852e38751afda</anchor>
      <arglist>(const SecurityConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableSSL</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a7b5e235a3e76498913920b5ae7bd070b</anchor>
      <arglist>(const SecurityConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disableSSL</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a873a2fa3e7fbe4f8dba63d4869ee045c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LetsEncryptManager::Certificate</type>
      <name>getCurrentCertificate</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>aa6be25b5659470fad7c93255d056ac3c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>renewCertificate</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a73407d67c9b8812885f0c280732d1f3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCertificateUpdateCallback</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a3d2762652371a04455b0563e12d72a83</anchor>
      <arglist>(CertificateUpdateCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>NetworkStats</type>
      <name>getNetworkStats</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a014af406f3e29fd3ba59740b3a354b28</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a8addda877f2a249f8d75f00f1bf133ec</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetStats</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ae967e67c5ccef0cfc6a868ec99c5c6c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>a1b5c99bf017bfcddb202e6f11ed598ad</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>clearLastError</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ab5b0b228aa8c8993beae7816c03ed963</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>healthCheck</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>aa01ba3d876f0dfd0742dbc402f40fadf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NetworkManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d0/da4/classsatox_1_1network_1_1NetworkManager.html</anchorfile>
      <anchor>ac22a0eebf8c41d1468bb123136dfdd27</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::NetworkMessage</name>
    <filename>d9/d7d/structsatox_1_1core_1_1NetworkMessage.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>d9/d7d/structsatox_1_1core_1_1NetworkMessage.html</anchorfile>
      <anchor>a68c1c73db8a63ebb135d9d0abac5df2b</anchor>
      <arglist></arglist>
      <enumvalue file="d9/d7d/structsatox_1_1core_1_1NetworkMessage.html" anchor="a68c1c73db8a63ebb135d9d0abac5df2ba4d34f53389ed7f28ca91fc31ea360a66">BLOCK</enumvalue>
      <enumvalue file="d9/d7d/structsatox_1_1core_1_1NetworkMessage.html" anchor="a68c1c73db8a63ebb135d9d0abac5df2bae6bed345f53943469741d7295552fcd4">TRANSACTION</enumvalue>
      <enumvalue file="d9/d7d/structsatox_1_1core_1_1NetworkMessage.html" anchor="a68c1c73db8a63ebb135d9d0abac5df2ba6a01b26840f250bc60df5edeace07458">SYNC_REQUEST</enumvalue>
      <enumvalue file="d9/d7d/structsatox_1_1core_1_1NetworkMessage.html" anchor="a68c1c73db8a63ebb135d9d0abac5df2ba7565d0adc6cb61e08998ae6dcd004a0b">SYNC_RESPONSE</enumvalue>
      <enumvalue file="d9/d7d/structsatox_1_1core_1_1NetworkMessage.html" anchor="a68c1c73db8a63ebb135d9d0abac5df2bae07ff41a486c27c095a15898dcca34d1">PING</enumvalue>
      <enumvalue file="d9/d7d/structsatox_1_1core_1_1NetworkMessage.html" anchor="a68c1c73db8a63ebb135d9d0abac5df2ba15c94917c8795679ecb650ed760c27f0">PONG</enumvalue>
      <enumvalue file="d9/d7d/structsatox_1_1core_1_1NetworkMessage.html" anchor="a68c1c73db8a63ebb135d9d0abac5df2babb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>d9/d7d/structsatox_1_1core_1_1NetworkMessage.html</anchorfile>
      <anchor>a6017d1a112a7cf3694b99516fc6a2e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>payload</name>
      <anchorfile>d9/d7d/structsatox_1_1core_1_1NetworkMessage.html</anchorfile>
      <anchor>aa6e3478dfb0e87889c1bb9c364a4c79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sender</name>
      <anchorfile>d9/d7d/structsatox_1_1core_1_1NetworkMessage.html</anchorfile>
      <anchor>a552e212ed7af5d02e02f14cdcaec3be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>d9/d7d/structsatox_1_1core_1_1NetworkMessage.html</anchorfile>
      <anchor>a25fb2c45ee954e6b62de9c5102666a31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>requestId</name>
      <anchorfile>d9/d7d/structsatox_1_1core_1_1NetworkMessage.html</anchorfile>
      <anchor>ae1d1bbb0b2a8f387b05500e2d0cc03eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::network::NetworkOperationException</name>
    <filename>d7/d97/classsatox_1_1network_1_1NetworkOperationException.html</filename>
    <base>satox::network::NetworkException</base>
    <member kind="function">
      <type></type>
      <name>NetworkOperationException</name>
      <anchorfile>d7/d97/classsatox_1_1network_1_1NetworkOperationException.html</anchorfile>
      <anchor>a7318977bf6dabdc20aaceed7d28cd2b3</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::NetworkResponse</name>
    <filename>d8/d93/structsatox_1_1core_1_1NetworkResponse.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d8/d93/structsatox_1_1core_1_1NetworkResponse.html</anchorfile>
      <anchor>a6b4a4352ba67329cce32632b896ac410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>data</name>
      <anchorfile>d8/d93/structsatox_1_1core_1_1NetworkResponse.html</anchorfile>
      <anchor>aee2c13de7437202054bfdf0c000a451b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d8/d93/structsatox_1_1core_1_1NetworkResponse.html</anchorfile>
      <anchor>a6c4a10dd6560c3486dde41a3b9a581e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>d8/d93/structsatox_1_1core_1_1NetworkResponse.html</anchorfile>
      <anchor>a93c9967166e4e07d433dd35978475ebb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::NetworkResult</name>
    <filename>d6/da1/structsatox_1_1network_1_1NetworkResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d6/da1/structsatox_1_1network_1_1NetworkResult.html</anchorfile>
      <anchor>a349b4aa82cdbe57cc75e2ac824245c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d6/da1/structsatox_1_1network_1_1NetworkResult.html</anchorfile>
      <anchor>a267a39df01883de00b84f0341900602c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>d6/da1/structsatox_1_1network_1_1NetworkResult.html</anchorfile>
      <anchor>a92cfbbc1af122505ed00fad27076f834</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>duration</name>
      <anchorfile>d6/da1/structsatox_1_1network_1_1NetworkResult.html</anchorfile>
      <anchor>a3809cf70275368229d2381855547d2bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::NetworkManager::NetworkStats</name>
    <filename>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>totalConnections</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a07903d48568b8ca45236719019e93da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>activeConnections</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a36f3894a65694e1ac3a18ef23f3971ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>failedConnections</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>ab874c4546c3c865826adbaa110026356</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>totalBytesReceived</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a947ccb16d41c2505cbd14038ea602984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>totalBytesSent</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a73351ec2d13a966b880ce10d629a7f77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>averageLatency</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>af334ab455b328d6a00ed19e7030ef0ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastSync</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a1fbe3832466337c79b4b0435475cfdf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastBlock</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a782cad6d251b91721952bd0f6f772b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>blockHeight</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a5ac23ffe0f232e2524bbe518a86218ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>peerCount</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a973fc3474490e1be2145ff8ba6e5e29a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>da/d17/structsatox_1_1core_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>af9511140f269d6c36b6cd2e036fffa15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::NetworkManager::NetworkStats</name>
    <filename>d2/d76/structsatox_1_1network_1_1NetworkManager_1_1NetworkStats.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>active_connections</name>
      <anchorfile>d2/d76/structsatox_1_1network_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a676efa4a379e66244684031dbeeb805d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>total_connections</name>
      <anchorfile>d2/d76/structsatox_1_1network_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a6910f74a91b22a443e7873f9589dc4c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bytes_sent</name>
      <anchorfile>d2/d76/structsatox_1_1network_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>abb3ee68f520fc00c0330fb76fd2b9a0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bytes_received</name>
      <anchorfile>d2/d76/structsatox_1_1network_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>aa3217ab27d8841863306a70ccf4effe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>errors</name>
      <anchorfile>d2/d76/structsatox_1_1network_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a8137b2137de35a6ea5f969a6d1ba0042</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>uptime_seconds</name>
      <anchorfile>d2/d76/structsatox_1_1network_1_1NetworkManager_1_1NetworkStats.html</anchorfile>
      <anchor>a8a861d7ed1453bc36ff0e4c6151e433c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::NetworkStats</name>
    <filename>d0/d63/structsatox_1_1network_1_1NetworkStats.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>totalOperations</name>
      <anchorfile>d0/d63/structsatox_1_1network_1_1NetworkStats.html</anchorfile>
      <anchor>a2bdd3967398c6af425af24c2fbf2b881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>successfulOperations</name>
      <anchorfile>d0/d63/structsatox_1_1network_1_1NetworkStats.html</anchorfile>
      <anchor>a04d0e0a9665dea5daa5697a63d3ad49e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>failedOperations</name>
      <anchorfile>d0/d63/structsatox_1_1network_1_1NetworkStats.html</anchorfile>
      <anchor>a31b03834659fcf2d92670be854ee5546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastOperation</name>
      <anchorfile>d0/d63/structsatox_1_1network_1_1NetworkStats.html</anchorfile>
      <anchor>a359e69a9b7248c5a9146efcdd130b4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>averageOperationTime</name>
      <anchorfile>d0/d63/structsatox_1_1network_1_1NetworkStats.html</anchorfile>
      <anchor>a40adb220dbeffb63bc86142a9a4803d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>d0/d63/structsatox_1_1network_1_1NetworkStats.html</anchorfile>
      <anchor>af6c1961299688d41e74cbca981f15440</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::NFT</name>
    <filename>d6/dc4/structsatox_1_1core_1_1NFT.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d6/dc4/structsatox_1_1core_1_1NFT.html</anchorfile>
      <anchor>ab218392aa28398fcb27649a54342b2b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>tokenId</name>
      <anchorfile>d6/dc4/structsatox_1_1core_1_1NFT.html</anchorfile>
      <anchor>ac6523330581aa1cfa7b518cc037990bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>contractAddress</name>
      <anchorfile>d6/dc4/structsatox_1_1core_1_1NFT.html</anchorfile>
      <anchor>a3c6fe30d9330353aa5a719119cd96c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>d6/dc4/structsatox_1_1core_1_1NFT.html</anchorfile>
      <anchor>aa19685b803cf6dd5da216713e166772d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>creator</name>
      <anchorfile>d6/dc4/structsatox_1_1core_1_1NFT.html</anchorfile>
      <anchor>ae3c72a4e5d0214e91d4c680decfb0905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>uri</name>
      <anchorfile>d6/dc4/structsatox_1_1core_1_1NFT.html</anchorfile>
      <anchor>ac30818752bf89d7ac9afab15bff21fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NFTMetadata</type>
      <name>metadata</name>
      <anchorfile>d6/dc4/structsatox_1_1core_1_1NFT.html</anchorfile>
      <anchor>acdca35664d3808358245bffcc5b33caf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>createdAt</name>
      <anchorfile>d6/dc4/structsatox_1_1core_1_1NFT.html</anchorfile>
      <anchor>ab506760b5a9a06b04ca16fc967f6aac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>d6/dc4/structsatox_1_1core_1_1NFT.html</anchorfile>
      <anchor>aed380e44a19200c024e3d87f902c670d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>additionalData</name>
      <anchorfile>d6/dc4/structsatox_1_1core_1_1NFT.html</anchorfile>
      <anchor>a1d6c0e98be1dbf3926f1b79af88c722b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::NFTManager::NFT</name>
    <filename>dc/d40/structsatox_1_1core_1_1NFTManager_1_1NFT.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>dc/d40/structsatox_1_1core_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a8996905a490dc74cb683a358a2fbe6f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>assetId</name>
      <anchorfile>dc/d40/structsatox_1_1core_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a1cc5b06d8b77ca1171b46a47aab24ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NFTMetadata</type>
      <name>metadata</name>
      <anchorfile>dc/d40/structsatox_1_1core_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a34188a1d69674c274febac0cbdd3842f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NFTState</type>
      <name>state</name>
      <anchorfile>dc/d40/structsatox_1_1core_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a701dc3ab944c3f2340744a06707f5587</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>transactionId</name>
      <anchorfile>dc/d40/structsatox_1_1core_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>af95cc9de1012a5b6df5c801246e3a49b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>mintTime</name>
      <anchorfile>dc/d40/structsatox_1_1core_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a315db9b2826e432d47a01518695831f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>history</name>
      <anchorfile>dc/d40/structsatox_1_1core_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a47cf0ccc66a256ac8b01365bd239b1ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalData</name>
      <anchorfile>dc/d40/structsatox_1_1core_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a2d502543808dcf422fc74d0d0a37df13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::NFT</name>
    <filename>d5/dec/classsatox_1_1database_1_1NFT.html</filename>
    <base>satox::database::DataModel</base>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a5d32b12af3292b4b3baf5c07aae51c2c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fromJson</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>af889549dbaae6189a78145ea9d07735e</anchor>
      <arglist>(const nlohmann::json &amp;j) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTableName</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a15803738c70147086703b9b30d228722</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>afb77f1b6004ac6d95765a69761b29c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>assetId</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a0a5a36d04aa9cc932389d4c78832a224</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a08639636aa4cb3e7216fca757e5b1102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>creator</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a21db7bfcb9310edb8f337c2d196c4838</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a21f2e635309f3d5a125b4c617e42a61e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a49ecc6ae6ed45758329515f2436bc870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>createdAt</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a6310d94d0bcbe146866e720a934b3a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>updatedAt</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a8f3bfec2133999c4d7f319d072ce73a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>tokenURI</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a902e240456117fc9652af65ae422f211</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>history</name>
      <anchorfile>d5/dec/classsatox_1_1database_1_1NFT.html</anchorfile>
      <anchor>a0bedc66788e0a311d031df3ae13990b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::NFT</name>
    <filename>d1/d54/classsatox_1_1NFT.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d1/d54/classsatox_1_1NFT.html</anchorfile>
      <anchor>a505de319419328095e0077bdb20d3dd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d1/d54/classsatox_1_1NFT.html</anchorfile>
      <anchor>a279fcc0c063b08d82f05fe8b01a4041f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>d1/d54/classsatox_1_1NFT.html</anchorfile>
      <anchor>a12c27f2017c6deaa70e730bbced18749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>d1/d54/classsatox_1_1NFT.html</anchorfile>
      <anchor>a6e926d9e21691e837ea2613c8c2b3989</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>collection</name>
      <anchorfile>d1/d54/classsatox_1_1NFT.html</anchorfile>
      <anchor>ac439357edbf4ab5744ec630d8036cd0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>d1/d54/classsatox_1_1NFT.html</anchorfile>
      <anchor>ae2c67064dd74dd867b848f765b762006</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTManager::NFT</name>
    <filename>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a8b01250af8b6439458adce670cadac69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>contractAddress</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a9138a886241297c36ecbaa00f11fe48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a4d9d426814fdd0590c2ce5b3780d9cfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>creator</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>ad37f9248492adfbddd02e4027d4f5695</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NFTMetadata</type>
      <name>metadata</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a18677b72eba5181a8622271e62fbafb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>tokenId</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a291fc9ded97d864c818523f9009b4447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>tokenURI</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a09efb330f5b983145138aec62d6d315e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isTransferable</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>ad2b62101d40b7e63a66dd37ff3d5d87d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isBurnable</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a0e7136abdb8f9ba3f13a9c643bbd1fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>royaltyRecipient</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a663641cb36368dde98c4b0e2ee6b8f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>royaltyBasisPoints</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a4c514c948bde24c3ae59cff7b6a83319</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>createdAt</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>ab438424e9ace94fd1885870d5a830b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>updatedAt</name>
      <anchorfile>d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT.html</anchorfile>
      <anchor>a09b48668ce27cd708033316e93d51472</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NftConfig</name>
    <filename>d1/d8d/structsatox_1_1nft_1_1NftConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d1/d8d/structsatox_1_1nft_1_1NftConfig.html</anchorfile>
      <anchor>a9864ad8d2f47b6ccebdab5e1d892cb26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLogging</name>
      <anchorfile>d1/d8d/structsatox_1_1nft_1_1NftConfig.html</anchorfile>
      <anchor>a8227a2e5564c110b589dde6fc19e954d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logPath</name>
      <anchorfile>d1/d8d/structsatox_1_1nft_1_1NftConfig.html</anchorfile>
      <anchor>abdd612bb9c001c17c5a9c4e6587a4af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalConfig</name>
      <anchorfile>d1/d8d/structsatox_1_1nft_1_1NftConfig.html</anchorfile>
      <anchor>acf51c7972abac25295491f84871ba8db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTError</name>
    <filename>db/d41/structsatox_1_1nft_1_1NFTError.html</filename>
    <member kind="function">
      <type></type>
      <name>NFTError</name>
      <anchorfile>db/d41/structsatox_1_1nft_1_1NFTError.html</anchorfile>
      <anchor>af359dcc232cbd09d6f72092b4b135cd5</anchor>
      <arglist>(NFTErrorCode c=NFTErrorCode::NONE, const std::string &amp;msg=&quot;&quot;, const std::string &amp;det=&quot;&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>NFTErrorCode</type>
      <name>code</name>
      <anchorfile>db/d41/structsatox_1_1nft_1_1NFTError.html</anchorfile>
      <anchor>a93f7819ceb0a422bf3db3f87ca15986a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>db/d41/structsatox_1_1nft_1_1NFTError.html</anchorfile>
      <anchor>a3e91b59fe4d604d2ba3fadbffb53530d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>details</name>
      <anchorfile>db/d41/structsatox_1_1nft_1_1NFTError.html</anchorfile>
      <anchor>a0426adc8ced500f364d8e131246b6c13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTManager::NFTEvent</name>
    <filename>d4/d86/structsatox_1_1nft_1_1NFTManager_1_1NFTEvent.html</filename>
    <member kind="variable">
      <type>NFTEventType</type>
      <name>type</name>
      <anchorfile>d4/d86/structsatox_1_1nft_1_1NFTManager_1_1NFTEvent.html</anchorfile>
      <anchor>aa0ba2a09192683bd1049c9d0c7c9ae01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>nftId</name>
      <anchorfile>d4/d86/structsatox_1_1nft_1_1NFTManager_1_1NFTEvent.html</anchorfile>
      <anchor>a26781746343e459084fa02665c4a72ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>contractAddress</name>
      <anchorfile>d4/d86/structsatox_1_1nft_1_1NFTManager_1_1NFTEvent.html</anchorfile>
      <anchor>af5a90f9ee2043417ce624606b3453268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>from</name>
      <anchorfile>d4/d86/structsatox_1_1nft_1_1NFTManager_1_1NFTEvent.html</anchorfile>
      <anchor>a458676c5151a5a7a3b398ed63209e467</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>to</name>
      <anchorfile>d4/d86/structsatox_1_1nft_1_1NFTManager_1_1NFTEvent.html</anchorfile>
      <anchor>ac44b622957b76d785a2ff9e336d2255d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>d4/d86/structsatox_1_1nft_1_1NFTManager_1_1NFTEvent.html</anchorfile>
      <anchor>a06e7c2d561e4fd43c11cb11b716472da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalData</name>
      <anchorfile>d4/d86/structsatox_1_1nft_1_1NFTManager_1_1NFTEvent.html</anchorfile>
      <anchor>ab09affc0f9bc8da4c0ca98e150c011ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::NFTManager::NFTEventListener</name>
    <filename>da/d4f/classsatox_1_1nft_1_1NFTManager_1_1NFTEventListener.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NFTEventListener</name>
      <anchorfile>da/d4f/classsatox_1_1nft_1_1NFTManager_1_1NFTEventListener.html</anchorfile>
      <anchor>a7a53fa4f5fabd8fdc8d5980293e88523</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>onNFTEvent</name>
      <anchorfile>da/d4f/classsatox_1_1nft_1_1NFTManager_1_1NFTEventListener.html</anchorfile>
      <anchor>afe3bf70b63e95751e71664355d462dbc</anchor>
      <arglist>(NFTEventType type, const NFT &amp;nft)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::NFTEventListener</name>
    <filename>d6/d13/classsatox_1_1NFTEventListener.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>onNFTEvent</name>
      <anchorfile>d6/d13/classsatox_1_1NFTEventListener.html</anchorfile>
      <anchor>a86a2eddb0aa352809c126b8773cb4c36</anchor>
      <arglist>(const NFT &amp;nft, const std::string &amp;event)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NFTEventListener</name>
      <anchorfile>d6/d13/classsatox_1_1NFTEventListener.html</anchorfile>
      <anchor>aa5e43e840693882127084462e1832205</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::NftException</name>
    <filename>df/da0/classsatox_1_1nft_1_1NftException.html</filename>
    <member kind="function">
      <type></type>
      <name>NftException</name>
      <anchorfile>df/da0/classsatox_1_1nft_1_1NftException.html</anchorfile>
      <anchor>aee51f608bdcb656f0d805c2eeef8f22f</anchor>
      <arglist>(NftErrorCode code, const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>df/da0/classsatox_1_1nft_1_1NftException.html</anchorfile>
      <anchor>ac062b505ee9d48dcfb7f22c180c34aa5</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>NftErrorCode</type>
      <name>code</name>
      <anchorfile>df/da0/classsatox_1_1nft_1_1NftException.html</anchorfile>
      <anchor>ac95238d6cb7242a4ea5b16387c0dfc07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>message</name>
      <anchorfile>df/da0/classsatox_1_1nft_1_1NftException.html</anchorfile>
      <anchor>a5b25e1fb1ec7d1193614742ccf2708c4</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NftHealth</name>
    <filename>df/d7f/structsatox_1_1nft_1_1NftHealth.html</filename>
    <member kind="variable">
      <type>NftStatus</type>
      <name>status</name>
      <anchorfile>df/d7f/structsatox_1_1nft_1_1NftHealth.html</anchorfile>
      <anchor>ac8099d301073a68af5e0af97975b7394</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>healthy</name>
      <anchorfile>df/d7f/structsatox_1_1nft_1_1NftHealth.html</anchorfile>
      <anchor>a3a7bfa151032ecdfa1bb9478adf2af93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>df/d7f/structsatox_1_1nft_1_1NftHealth.html</anchorfile>
      <anchor>a85866e33f32041d019777997c3aa4896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastCheck</name>
      <anchorfile>df/d7f/structsatox_1_1nft_1_1NftHealth.html</anchorfile>
      <anchor>aa8c545d999b883acde5072780f7a4726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>consecutiveFailures</name>
      <anchorfile>df/d7f/structsatox_1_1nft_1_1NftHealth.html</anchorfile>
      <anchor>a7cf719bf4c41288cfad07e34cbe38522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>details</name>
      <anchorfile>df/d7f/structsatox_1_1nft_1_1NftHealth.html</anchorfile>
      <anchor>a33513f67e4c8dac0eca978e25665ea05</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::NftInitializationException</name>
    <filename>d5/d0c/classsatox_1_1nft_1_1NftInitializationException.html</filename>
    <base>satox::nft::NftException</base>
    <member kind="function">
      <type></type>
      <name>NftInitializationException</name>
      <anchorfile>d5/d0c/classsatox_1_1nft_1_1NftInitializationException.html</anchorfile>
      <anchor>a64a6d464ee255cdea09c4344ddc9d7e9</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::NFTManager</name>
    <filename>d4/d3a/classsatox_1_1core_1_1NFTManager.html</filename>
    <class kind="struct">satox::core::NFTManager::NFT</class>
    <class kind="struct">satox::core::NFTManager::NFTMetadata</class>
    <class kind="struct">satox::core::NFTManager::NFTStats</class>
    <member kind="enumeration">
      <type></type>
      <name>NFTType</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>af4be7a0be4168eb881ead4bf28ad8bcd</anchor>
      <arglist></arglist>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="af4be7a0be4168eb881ead4bf28ad8bcda23a12f67f614b5518c7f1c2465bf95e3">IMAGE</enumvalue>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="af4be7a0be4168eb881ead4bf28ad8bcdae60ae31f67ab883c746bb71c7a145c18">VIDEO</enumvalue>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="af4be7a0be4168eb881ead4bf28ad8bcdae423b8bde9bfbfd7e9409b23b23aed91">AUDIO</enumvalue>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="af4be7a0be4168eb881ead4bf28ad8bcdac231fa48df3ee393c92dccac4dba5e7d">DOCUMENT</enumvalue>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="af4be7a0be4168eb881ead4bf28ad8bcda13f68f9aa70a6cce923c8f292fc2d3d1">COLLECTIBLE</enumvalue>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="af4be7a0be4168eb881ead4bf28ad8bcda5905c764b71b1cc658bbc4d680f78e3a">GAME_ITEM</enumvalue>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="af4be7a0be4168eb881ead4bf28ad8bcda72baef04098f035e8a320b03ad197818">CUSTOM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NFTState</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a395a9683074d1e699dd87074bafa7c07</anchor>
      <arglist></arglist>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="a395a9683074d1e699dd87074bafa7c07a98690bf632c29c17c9e4c5a64069903c">CREATED</enumvalue>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="a395a9683074d1e699dd87074bafa7c07a09bf52455b4257160d628f30fac1e202">MINTED</enumvalue>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="a395a9683074d1e699dd87074bafa7c07a19ee3f1c15c13e4a5c484ff48a8b4c8d">TRANSFERRED</enumvalue>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="a395a9683074d1e699dd87074bafa7c07aad9f8dea088d688cb5a70d7d24ea1c2b">BURNED</enumvalue>
      <enumvalue file="d4/d3a/classsatox_1_1core_1_1NFTManager.html" anchor="a395a9683074d1e699dd87074bafa7c07abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, NFTState)&gt;</type>
      <name>NFTCallback</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a6abf1a36212c5937d7c28af4585edf41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const NFTMetadata &amp;)&gt;</type>
      <name>NFTMetadataCallback</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a85e2f0210dc1e54173acfe1cda17f2f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt;</type>
      <name>NFTErrorCallback</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ad509290626dff52c92ca981c4bcc032a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NFTManager</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a76d7fe61a8627c15c3bf744aec1fe27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NFTManager</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a3476022883c9b8a45a493c76d7b72492</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NFTManager</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ac1e7f79ccffdab8ac44541a81d61f690</anchor>
      <arglist>(const NFTManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>NFTManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a8d712dacc19bc3caa76e017a150ef809</anchor>
      <arglist>(const NFTManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NFTManager</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a74e89bbf35d5fdb3e56cb02e619dcfaf</anchor>
      <arglist>(NFTManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>NFTManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>adaebbfd5850a0d48abfc5f1e29a1dee7</anchor>
      <arglist>(NFTManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ae039bf4fac54d4189153a986f7e4a307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NFT</type>
      <name>mintNFT</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a31f6dd0b1e6cdf49963dc39d69d823f1</anchor>
      <arglist>(const std::string &amp;contractAddress, const std::string &amp;creator, const NFTMetadata &amp;metadata, const std::string &amp;uri=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transferNFT</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a31e0f7fb907953c990b39f240016466b</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNFTMetadata</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ae49777fcc72d39b2b118aa832350e8cb</anchor>
      <arglist>(const std::string &amp;nftId, const NFTMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>NFT</type>
      <name>getNFT</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a1c4aa27897d5243fa7e513c78c219b28</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getNFTsByOwner</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a0f14dd4a68c0607ceae89c0c82bea933</anchor>
      <arglist>(const std::string &amp;owner)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getNFTsByContract</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a83b5616e93b6c7fb7941daa64d3818a9</anchor>
      <arglist>(const std::string &amp;contractAddress)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getAllNFTs</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>aca14787a2fe74183d5b3ef6b2f8e873a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>burnNFT</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>aa52d50256e28e0e5ab99d76203edeb14</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getNFTBalance</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a5b1498202090c8e154d4812248c4cac1</anchor>
      <arglist>(const std::string &amp;contractAddress, const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a287fc911c3cf757d5f27f75b6d9eab27</anchor>
      <arglist>(const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a4cc61fe8b17b188e2b7fb0d04b57b5b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createNFT</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a93f4c966b994a139cf881fff1dee46f6</anchor>
      <arglist>(const std::string &amp;assetId, const NFTMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mintNFT</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a0c784c752f98e9e1a95fa584a25dbe89</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transferNFT</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a10536721e17dcba856d2801177c6617a</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;newOwner)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>burnNFT</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>aa52d50256e28e0e5ab99d76203edeb14</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNFTMetadata</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ae49777fcc72d39b2b118aa832350e8cb</anchor>
      <arglist>(const std::string &amp;nftId, const NFTMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNFTExists</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a30b01963e83f08ba82a9a44555327b3c</anchor>
      <arglist>(const std::string &amp;nftId) const</arglist>
    </member>
    <member kind="function">
      <type>NFT</type>
      <name>getNFT</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a942d765f8ff8a6c0957e88d5ca72091e</anchor>
      <arglist>(const std::string &amp;nftId) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getNFTsByAsset</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a78466a11d83b4a3cf994e690dc830ad1</anchor>
      <arglist>(const std::string &amp;assetId) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getNFTsByOwner</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a9b1ac328d5ff2a26b5e67806a4e24ebc</anchor>
      <arglist>(const std::string &amp;owner) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getNFTsByType</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ab3742acbb01dcdda5ebd4a64f1124097</anchor>
      <arglist>(NFTType type) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getNFTsByState</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ad3e7697d0213f6ac234f90c7ce6a39c6</anchor>
      <arglist>(NFTState state) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateMetadata</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a195dad6abbd0e3e7e47f45cb9efc8cb4</anchor>
      <arglist>(const NFTMetadata &amp;metadata) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNFTURI</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a4065a96b2c769ca86f1cd5e1af15ed5c</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;uri)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNFTHash</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ac1802441f7c42859a91a9029e57b3abf</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addNFTAttribute</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ab60995fe78d99d52319131671f234110</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;key, const nlohmann::json &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeNFTAttribute</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a8dda6162e175eb3072a1fa80b0687bbe</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getNFTHistory</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>afbe05f8099ef42ef4f0ec4d00b482d8c</anchor>
      <arglist>(const std::string &amp;nftId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addNFTHistoryEntry</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a50a3df7697c6e5a12995f78df4c0a7f9</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>clearNFTHistory</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a5b01d760c1f4ae247cfa6bb328488d26</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>NFTStats</type>
      <name>getStats</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a4e0941fccaf656622cd2798354c69450</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>aabdf9c3b71a8359e39a4f85b402672ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a6769dd787bbb928ab8043838b2574fb9</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerNFTCallback</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ad3ad3e12652d4ed517be596784b0c97e</anchor>
      <arglist>(NFTCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerMetadataCallback</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a600fecae5ff0b69766b86cd1ea3327a9</anchor>
      <arglist>(NFTMetadataCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>aff83c64dc6c5d751ca229e2eaef9d48b</anchor>
      <arglist>(NFTErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterNFTCallback</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a2219abb18aea39dc525e452ddb8332db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterMetadataCallback</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ac510befa00de4799b070b38c8f3a0843</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a6e9f3ff06e075e2a96c5ccb32e962bac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>ab0c04e86dca5ca1215d82fc30a2902cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a5027ec54fd842407103c90e454fcafdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NFTManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d4/d3a/classsatox_1_1core_1_1NFTManager.html</anchorfile>
      <anchor>a2b8736f58b59b9c5ae78806512082b61</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::NFTManager</name>
    <filename>dc/d55/classsatox_1_1nft_1_1NFTManager.html</filename>
    <class kind="struct">satox::nft::NFTManager::CacheEntry</class>
    <class kind="struct">satox::nft::NFTManager::Error</class>
    <class kind="class">satox::nft::NFTManager::ErrorHandler</class>
    <class kind="class">satox::nft::NFTManager::Impl</class>
    <class kind="struct">satox::nft::NFTManager::NFT</class>
    <class kind="struct">satox::nft::NFTManager::NFTEvent</class>
    <class kind="class">satox::nft::NFTManager::NFTEventListener</class>
    <class kind="struct">satox::nft::NFTManager::NFTMetadata</class>
    <class kind="struct">satox::nft::NFTManager::OwnershipRecord</class>
    <class kind="class">satox::nft::NFTManager::PerformanceOptimizer</class>
    <member kind="enumeration">
      <type></type>
      <name>NFTEventType</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a88900d69d788470e3aab2c9a9512d9d9</anchor>
      <arglist></arglist>
      <enumvalue file="dc/d55/classsatox_1_1nft_1_1NFTManager.html" anchor="a88900d69d788470e3aab2c9a9512d9d9a98690bf632c29c17c9e4c5a64069903c">CREATED</enumvalue>
      <enumvalue file="dc/d55/classsatox_1_1nft_1_1NFTManager.html" anchor="a88900d69d788470e3aab2c9a9512d9d9a19ee3f1c15c13e4a5c484ff48a8b4c8d">TRANSFERRED</enumvalue>
      <enumvalue file="dc/d55/classsatox_1_1nft_1_1NFTManager.html" anchor="a88900d69d788470e3aab2c9a9512d9d9aad9f8dea088d688cb5a70d7d24ea1c2b">BURNED</enumvalue>
      <enumvalue file="dc/d55/classsatox_1_1nft_1_1NFTManager.html" anchor="a88900d69d788470e3aab2c9a9512d9d9ae100acd9b57ba49b5a72634ed9aae3dd">METADATA_UPDATED</enumvalue>
      <enumvalue file="dc/d55/classsatox_1_1nft_1_1NFTManager.html" anchor="a88900d69d788470e3aab2c9a9512d9d9a934df027736e693bb163d7b53b08255e">TRANSFERABLE_CHANGED</enumvalue>
      <enumvalue file="dc/d55/classsatox_1_1nft_1_1NFTManager.html" anchor="a88900d69d788470e3aab2c9a9512d9d9aba8f32d782f048bcd5a2e2e4350b460b">BURNABLE_CHANGED</enumvalue>
      <enumvalue file="dc/d55/classsatox_1_1nft_1_1NFTManager.html" anchor="a88900d69d788470e3aab2c9a9512d9d9a03144eb80c6490f0952d6cce93605c54">ROYALTY_CHANGED</enumvalue>
      <enumvalue file="dc/d55/classsatox_1_1nft_1_1NFTManager.html" anchor="a88900d69d788470e3aab2c9a9512d9d9aced7c3ae786da521e584c9dfbd221443">ATTRIBUTE_ADDED</enumvalue>
      <enumvalue file="dc/d55/classsatox_1_1nft_1_1NFTManager.html" anchor="a88900d69d788470e3aab2c9a9512d9d9a9c031bdf1d68555ee3d1b187508672b9">ATTRIBUTE_REMOVED</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const NFTEvent &amp;)&gt;</type>
      <name>EventCallback</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>aa3176b34fb1451e74aa1cdc62e1f22e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NFTManager</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a64f7d71ff1cd79288e540909385e14ff</anchor>
      <arglist>(const NFTManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>NFTManager &amp;</type>
      <name>operator=</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a4922407a7386ecb1e7709cfc890a310d</anchor>
      <arglist>(const NFTManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a680a0c67af2b1e67c3de94ec10f876bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a0e6937535e15d988e3228bc9305ba9d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a7b7e0f7c786d307070a792efd90b67d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ac3c72b05fe08854b97462968a5419876</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createNFT</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a5715f9c825a060e7f1fa8b758ea99dc4</anchor>
      <arglist>(const std::string &amp;contractAddress, const NFTMetadata &amp;metadata, const std::string &amp;creator, bool isTransferable=true, bool isBurnable=true, const std::string &amp;royaltyRecipient=&quot;&quot;, uint32_t royaltyBasisPoints=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transferNFT</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>acb6e7b420c99717c94f15204c968a30d</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>burnNFT</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a36e390d3372bac7e4aa8ca94b3eb21e4</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;owner)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNFTMetadata</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ac93300c9d0475b91724a3b31c53659dc</anchor>
      <arglist>(const std::string &amp;nftId, const NFTMetadata &amp;newMetadata, const std::string &amp;updater)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addNFTAttribute</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ab22e4c6f0c9c32bc2c9d0456f98e4e95</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;key, const std::string &amp;value, const std::string &amp;updater)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeNFTAttribute</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>afbc7d3c7e2232efc5de5f9b66f196e93</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;key, const std::string &amp;updater)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNFTTransferable</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a33fa85bc021da66963d466ff2ce15774</anchor>
      <arglist>(const std::string &amp;nftId, bool isTransferable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNFTBurnable</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a0139d8ca25b0fc033ac66a896cef182f</anchor>
      <arglist>(const std::string &amp;nftId, bool isBurnable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNFTRoyalty</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a67e04962fa2a385708930d7ac50539ed</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;recipient, uint32_t basisPoints)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateNFT</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a9adcdb15e63b0e24a9d9d2ca2382329d</anchor>
      <arglist>(const NFT &amp;nft)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateNFTMetadata</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>aeb87bf67f07a4c3adf8928a0a7eeef02</anchor>
      <arglist>(const NFTMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateTransfer</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ae2ce46e81a4409c30427cff5ed166998</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>NFT</type>
      <name>getNFT</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a30d71e29b2633dbd64f160646db2fe7e</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getNFTsByOwner</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ae33e951f1de1ab6c40e621dfcf4ca535</anchor>
      <arglist>(const std::string &amp;owner)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getNFTsByContract</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ac2fa3bc943009d2839ff028425326e7d</anchor>
      <arglist>(const std::string &amp;contractAddress)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getNFTsByCreator</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a1be9f0ee3bc34cdf572604fff04ca8ea</anchor>
      <arglist>(const std::string &amp;creator)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNFTTransferable</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a1073838f5bf7e8a90da0b67fc92794bb</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNFTBurnable</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ae9aec0261af04d8ff51c8ac8ac81074e</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getNFTOwner</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>add644cd5c8bad5ee07ed7059a1b9de03</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>NFTMetadata</type>
      <name>getNFTMetadata</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ab0b536209b3063eccc957c7991edab27</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>batchCreateNFTs</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a7370e76302cb7ee1eaac9fe8f1edffef</anchor>
      <arglist>(const std::string &amp;contractAddress, const std::vector&lt; NFTMetadata &gt; &amp;metadataList, const std::string &amp;creator)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>batchTransferNFTs</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a0471d1fb066eb106585f5257823cb90d</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;nftIds, const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>batchBurnNFTs</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a02ffb7e3143a7072a84120206d5d6918</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;nftIds, const std::string &amp;owner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerEventCallback</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a7d847a64a3c4fa62a12a3ceadf3e4f2a</anchor>
      <arglist>(EventCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterEventCallback</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ad99f3aeb1d8685d9fe8cb381e61215fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>getLastError</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a89ecbc9895d1c09283a316f7c1cd5e7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a66587ecba62ce958c7b932d95281cd2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; OwnershipRecord &gt;</type>
      <name>getOwnershipHistory</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a3e582619b067d8e1d4c05c9c68fd682f</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getCurrentOwner</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a8034af6677722bd4ad21eae58bbe019b</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyOwnership</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ab716d0b4a06433d35c1779075cb4b868</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;owner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCacheSize</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a93c15f365c380a1e8075e606130c25a1</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBatchSize</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>aeec29dffca0b94b06be539ae70ba14fb</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectionPoolSize</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a10c930c300bb71ba4262686810d33440</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>acb4b9a4e8bc3dff58b7ac3fc20acbdfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCacheSize</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ac7190591d65078bc276874a45c08e1c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getBatchSize</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a1e5b99f53d2c2600f77b51b917443278</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getConnectionPoolSize</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>af5fa5a9418878b8ab2939e34289297f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorCallback</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>ab9a4dcab6652fba54edb2998d84dfd60</anchor>
      <arglist>(std::function&lt; void(const NFTError &amp;)&gt; callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRecoveryCallback</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>aa17d51f564fd4ae051d690db387f7423</anchor>
      <arglist>(std::function&lt; void(const NFTError &amp;)&gt; callback)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFTError &gt;</type>
      <name>getErrorHistory</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a27a209f7f4011258c65d1466973bdae9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearErrorHistory</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a07880bb5f51464cdac2506b3f75aba48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isErrorActive</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a98bdb6083d8f31b1834a9d2c4563b855</anchor>
      <arglist>(const std::string &amp;nftId) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEventListener</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a2d9c370c9d74c33fe81d71812e12a35a</anchor>
      <arglist>(NFTEventListener *listener)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEventListener</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>add9a504379beff8026dc346773f664d3</anchor>
      <arglist>(NFTEventListener *listener)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NFTManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>dc/d55/classsatox_1_1nft_1_1NFTManager.html</anchorfile>
      <anchor>a64e23bcdc2c4a44a11d2a4e88563d6d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::NFTManager</name>
    <filename>d8/da6/classsatox_1_1NFTManager.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d8/da6/classsatox_1_1NFTManager.html</anchorfile>
      <anchor>a8de7c015421088601e2cfe88d5e9e3a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d8/da6/classsatox_1_1NFTManager.html</anchorfile>
      <anchor>a01b503451ce9498ee39dfb34dbe69205</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createNFT</name>
      <anchorfile>d8/da6/classsatox_1_1NFTManager.html</anchorfile>
      <anchor>a70d69354d9f958cf21cad3cf6e6248de</anchor>
      <arglist>(const NFT &amp;nft)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>createNFTs</name>
      <anchorfile>d8/da6/classsatox_1_1NFTManager.html</anchorfile>
      <anchor>a9b5ad21cea591c39f94b7777eebe6302</anchor>
      <arglist>(const std::vector&lt; NFT &gt; &amp;nfts)</arglist>
    </member>
    <member kind="function">
      <type>NFT</type>
      <name>getNFT</name>
      <anchorfile>d8/da6/classsatox_1_1NFTManager.html</anchorfile>
      <anchor>acfc6268a1dce43c245924b00104d7c58</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFT &gt;</type>
      <name>getNFTsByOwner</name>
      <anchorfile>d8/da6/classsatox_1_1NFTManager.html</anchorfile>
      <anchor>a974db07308a6bdd356ed2877f9cdeb80</anchor>
      <arglist>(const std::string &amp;owner)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transferNFT</name>
      <anchorfile>d8/da6/classsatox_1_1NFTManager.html</anchorfile>
      <anchor>a460e111f9a6652a65deab88e65592323</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEventListener</name>
      <anchorfile>d8/da6/classsatox_1_1NFTManager.html</anchorfile>
      <anchor>a310fcda8f74cba27a644ceb53c4856a7</anchor>
      <arglist>(NFTEventListener *listener)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEventListener</name>
      <anchorfile>d8/da6/classsatox_1_1NFTManager.html</anchorfile>
      <anchor>afe475f2a5d8706d954f7ba6cb68c3d10</anchor>
      <arglist>(NFTEventListener *listener)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NFTManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d8/da6/classsatox_1_1NFTManager.html</anchorfile>
      <anchor>afc454a0fbf23316dd6b9564c170ae4dc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::NFTManager::NFTMetadata</name>
    <filename>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a266c184631b09cafa8cd67a12ffc2f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a7d548217931becbe0bb8f54e8b62a62d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>creator</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a7c2017247c12675ac0134f6f40d0225e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a9e65041c67e891f5e75c278743bc2d4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NFTType</type>
      <name>type</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>ac5b6380327fe43a07b9c7a8e104febf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>uri</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>ad4f270fe1416f2064aa60e36a7febbf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a41d54f024ed24ae44ec08ce6a8752f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>creationTime</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>abaa3a648f3b6075d13d3c97eaf3cf11d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastModified</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a59f11d8740b0afd9760cca145904b7fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>attributes</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a92616e1506d2539c2e2304eea79a9e51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalData</name>
      <anchorfile>db/df4/structsatox_1_1core_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a41342f6623e942c402fb25561b0ddf3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::NFTMetadata</name>
    <filename>d8/df6/structsatox_1_1core_1_1NFTMetadata.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d8/df6/structsatox_1_1core_1_1NFTMetadata.html</anchorfile>
      <anchor>a0137dbaaea4016d3de9b6ba5be735078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>d8/df6/structsatox_1_1core_1_1NFTMetadata.html</anchorfile>
      <anchor>a8f287b4eb9f9fa895f5364afc0a0f135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>image</name>
      <anchorfile>d8/df6/structsatox_1_1core_1_1NFTMetadata.html</anchorfile>
      <anchor>af0d484f2b729db6aff9140f87b59c46d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>attributes</name>
      <anchorfile>d8/df6/structsatox_1_1core_1_1NFTMetadata.html</anchorfile>
      <anchor>aad02a838c2325aeec26994247aa761c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>properties</name>
      <anchorfile>d8/df6/structsatox_1_1core_1_1NFTMetadata.html</anchorfile>
      <anchor>a28b19c69eb81310b465a475cb9fe10c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTManager::NFTMetadata</name>
    <filename>d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>ab620d206dc3ea7aef13b3d2fe71e7b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a8a4932497d180ae3ec9110ab3204dbbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>image</name>
      <anchorfile>d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a5994f8264025239737f02433692f40a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>externalUrl</name>
      <anchorfile>d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a882bc24e9370492d59c2bfdd7fc79ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>attributes</name>
      <anchorfile>d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>ab28221f92d02362279da520e610d0b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalData</name>
      <anchorfile>d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata.html</anchorfile>
      <anchor>a1def8874c57af51de7abe830f84f9a42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::NftOperationException</name>
    <filename>d3/d26/classsatox_1_1nft_1_1NftOperationException.html</filename>
    <base>satox::nft::NftException</base>
    <member kind="function">
      <type></type>
      <name>NftOperationException</name>
      <anchorfile>d3/d26/classsatox_1_1nft_1_1NftOperationException.html</anchorfile>
      <anchor>a985876b53bcdbb78645b0e181d92e9a3</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NftResult</name>
    <filename>da/d7a/structsatox_1_1nft_1_1NftResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>da/d7a/structsatox_1_1nft_1_1NftResult.html</anchorfile>
      <anchor>a0e365ff8c624db1fd625138de82e2729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>da/d7a/structsatox_1_1nft_1_1NftResult.html</anchorfile>
      <anchor>a14bd75df37713c276afb89967248c913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>da/d7a/structsatox_1_1nft_1_1NftResult.html</anchorfile>
      <anchor>ab8805177d9dc2e81bf83d23d708a6dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>duration</name>
      <anchorfile>da/d7a/structsatox_1_1nft_1_1NftResult.html</anchorfile>
      <anchor>a71c18f8bc4e7db1cde167bfb78f593e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::NFTManager::NFTStats</name>
    <filename>de/d71/structsatox_1_1core_1_1NFTManager_1_1NFTStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>totalNFTs</name>
      <anchorfile>de/d71/structsatox_1_1core_1_1NFTManager_1_1NFTStats.html</anchorfile>
      <anchor>abc34fe00926d6df4d66fe6cc087363f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mintedNFTs</name>
      <anchorfile>de/d71/structsatox_1_1core_1_1NFTManager_1_1NFTStats.html</anchorfile>
      <anchor>acb04dce8589aaa36c4b57ce64ce39e8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>transferredNFTs</name>
      <anchorfile>de/d71/structsatox_1_1core_1_1NFTManager_1_1NFTStats.html</anchorfile>
      <anchor>a2419987189d089d9806509e78b9d6320</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>burnedNFTs</name>
      <anchorfile>de/d71/structsatox_1_1core_1_1NFTManager_1_1NFTStats.html</anchorfile>
      <anchor>a281264af8efdcf6efa04c0873d488039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>errorNFTs</name>
      <anchorfile>de/d71/structsatox_1_1core_1_1NFTManager_1_1NFTStats.html</anchorfile>
      <anchor>ab2445f92a441c5e4a4b9548b9cbc9dde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>averageMintTime</name>
      <anchorfile>de/d71/structsatox_1_1core_1_1NFTManager_1_1NFTStats.html</anchorfile>
      <anchor>a237da2453a07ecc0a897a93491d3376c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>averageTransferTime</name>
      <anchorfile>de/d71/structsatox_1_1core_1_1NFTManager_1_1NFTStats.html</anchorfile>
      <anchor>a424d785c2208624f04f58bfa434b2a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>typeDistribution</name>
      <anchorfile>de/d71/structsatox_1_1core_1_1NFTManager_1_1NFTStats.html</anchorfile>
      <anchor>a4a4f187fda6b774fa50ebbe93971c9d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>de/d71/structsatox_1_1core_1_1NFTManager_1_1NFTStats.html</anchorfile>
      <anchor>a318d35f2a6002559da628ee4a978d411</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NftStats</name>
    <filename>dc/d0d/structsatox_1_1nft_1_1NftStats.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>totalOperations</name>
      <anchorfile>dc/d0d/structsatox_1_1nft_1_1NftStats.html</anchorfile>
      <anchor>a7f62edfc0e7aa47d5c8a2358e95ae3e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>successfulOperations</name>
      <anchorfile>dc/d0d/structsatox_1_1nft_1_1NftStats.html</anchorfile>
      <anchor>add0778b8c04188b8f277676003f1da5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>failedOperations</name>
      <anchorfile>dc/d0d/structsatox_1_1nft_1_1NftStats.html</anchorfile>
      <anchor>a5f7e111bb6cd764c4ca9ceff9ef2ef70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastOperation</name>
      <anchorfile>dc/d0d/structsatox_1_1nft_1_1NftStats.html</anchorfile>
      <anchor>aacec6c52032f46628e91cf4366e23c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>averageOperationTime</name>
      <anchorfile>dc/d0d/structsatox_1_1nft_1_1NftStats.html</anchorfile>
      <anchor>ad9a1888e82d47fee57181e0b289383f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>dc/d0d/structsatox_1_1nft_1_1NftStats.html</anchorfile>
      <anchor>ab32467fc30c56f35e56ebea0b3bca52b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::NFTStorage</name>
    <filename>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</filename>
    <class kind="struct">satox::nft::NFTStorage::Error</class>
    <member kind="function">
      <type></type>
      <name>NFTStorage</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>aea3ab9cd174acae9ca6d5783cdc13c16</anchor>
      <arglist>(const NFTStorage &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>NFTStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a2c5b8df959cba943bc7f57bcc639b54e</anchor>
      <arglist>(const NFTStorage &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a1f513f28d725aab60bcddd04ece8fbaa</anchor>
      <arglist>(const std::string &amp;storagePath)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a4233a8349dce28833eae62d18d32b672</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>storeNFT</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>aa1c27a19abbde02f81221dc77e433b24</anchor>
      <arglist>(const NFTManager::NFT &amp;nft)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>storeNFTMetadata</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a202aa467e98bce0984d04b47b59914a8</anchor>
      <arglist>(const std::string &amp;nftId, const NFTManager::NFTMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>storeNFTBatch</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a1dbd41f955ae361adf65ab7e1c288c9b</anchor>
      <arglist>(const std::vector&lt; NFTManager::NFT &gt; &amp;nfts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>storeNFTMetadataBatch</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a76b7e8b06c784a0ec50808e10e26a30a</anchor>
      <arglist>(const std::map&lt; std::string, NFTManager::NFTMetadata &gt; &amp;metadataMap)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; NFTManager::NFT &gt;</type>
      <name>getNFT</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>affb536181fc3d7bdc07926c458cff78e</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; NFTManager::NFTMetadata &gt;</type>
      <name>getNFTMetadata</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a7d95ba2d8f4d6dc477585cc006dda02d</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFTManager::NFT &gt;</type>
      <name>getNFTsByOwner</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a4de971d65c55a4525be161bcb2115400</anchor>
      <arglist>(const std::string &amp;owner)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFTManager::NFT &gt;</type>
      <name>getNFTsByContract</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a68dc8f9e270114b8a5db30ecdec4a6bd</anchor>
      <arglist>(const std::string &amp;contractAddress)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFTManager::NFT &gt;</type>
      <name>getNFTsByCreator</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a73d7815daedd33f8c78f19b213858c6f</anchor>
      <arglist>(const std::string &amp;creator)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNFT</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>acfabd0c53a72d956f14973b04ba0a4e7</anchor>
      <arglist>(const NFTManager::NFT &amp;nft)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNFTMetadata</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>ab669ee5bca36cc7cd2e785935a0622be</anchor>
      <arglist>(const std::string &amp;nftId, const NFTManager::NFTMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNFTBatch</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a44e3fe56ec3e0c13f3aff2041340da3d</anchor>
      <arglist>(const std::vector&lt; NFTManager::NFT &gt; &amp;nfts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateNFTMetadataBatch</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a6307d37f9aa87c39a51d22f089c36691</anchor>
      <arglist>(const std::map&lt; std::string, NFTManager::NFTMetadata &gt; &amp;metadataMap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteNFT</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>afeb5ef352c173622c583450ef49147f7</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteNFTMetadata</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a7a902a1eac66be796614bc0f006c27bf</anchor>
      <arglist>(const std::string &amp;nftId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteNFTBatch</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a4ff7f3325093bac09789e1e9c140e2a1</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;nftIds)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteNFTMetadataBatch</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>af764686f439c239531601cc8f994a346</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;nftIds)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFTManager::NFT &gt;</type>
      <name>searchNFTs</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>ab1563ffc3570a229932080d5c065c819</anchor>
      <arglist>(const std::string &amp;query)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFTManager::NFT &gt;</type>
      <name>searchNFTsByMetadata</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>acba30a9b27555500bb61f845b9f9454c</anchor>
      <arglist>(const nlohmann::json &amp;metadataQuery)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; NFTManager::NFT &gt;</type>
      <name>searchNFTsByAttributes</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a7287cc0c3a5349fe15a99aef01e3618e</anchor>
      <arglist>(const std::map&lt; std::string, std::string &gt; &amp;attributes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableCache</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a6357e4d6bf9454097d53aa101ece83d0</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a163d5797e0448d0b0df916f6b6de1f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCacheSize</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a4c03aeaaaf4f299b5b698ca80645862a</anchor>
      <arglist>(size_t maxSize)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCacheSize</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>ab24eaa05295c2d0ce6bee442ba5548f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createBackup</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>af1204a234eceb6d24a5474bd0dcecf91</anchor>
      <arglist>(const std::string &amp;backupPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restoreFromBackup</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a1e173412e26f4885e61be8cbd4b6a349</anchor>
      <arglist>(const std::string &amp;backupPath)</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>getLastError</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a872d69b11a78369a55db6cc08592403f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>ad96cdd68b8565c13ae0c75c32741bc71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NFTStorage &amp;</type>
      <name>getInstance</name>
      <anchorfile>d8/d5c/classsatox_1_1nft_1_1NFTStorage.html</anchorfile>
      <anchor>a4e6919643391f916a6218e53e83c233e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::NFTValidator</name>
    <filename>de/d66/classsatox_1_1nft_1_1NFTValidator.html</filename>
    <class kind="struct">satox::nft::NFTValidator::Error</class>
    <class kind="struct">satox::nft::NFTValidator::ValidationResult</class>
    <member kind="function">
      <type></type>
      <name>NFTValidator</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a47b233c582720a9b071bb25b773c7c4e</anchor>
      <arglist>(const NFTValidator &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>NFTValidator &amp;</type>
      <name>operator=</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>ac1458f66560ac3a8c39092a9e765ee23</anchor>
      <arglist>(const NFTValidator &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a899fe2fa840b45ad7b1419aa46e25c65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>abc1ccfe13fe80494728f2f6b33e6b8f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ValidationResult</type>
      <name>validateNFT</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a6ee0a5f8b8a39717aafdd2e8c16cba72</anchor>
      <arglist>(const NFTManager::NFT &amp;nft)</arglist>
    </member>
    <member kind="function">
      <type>ValidationResult</type>
      <name>validateNFTMetadata</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a4617ed707b666e925a5be22d5367482c</anchor>
      <arglist>(const NFTManager::NFTMetadata &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>ValidationResult</type>
      <name>validateNFTTransfer</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>adb1c1cc56fc361acd89538ab9a919068</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>ValidationResult</type>
      <name>validateNFTBurn</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a4a9f82157ffb421a9eb9457f2b419d0d</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;owner)</arglist>
    </member>
    <member kind="function">
      <type>ValidationResult</type>
      <name>validateNFTRoyalty</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a861f78b02136c839181af76ebba4ff4e</anchor>
      <arglist>(const std::string &amp;nftId, const std::string &amp;recipient, uint32_t basisPoints)</arglist>
    </member>
    <member kind="function">
      <type>ValidationResult</type>
      <name>validateBatchNFTs</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>abcfe7f9187a9663f15f315e223c58a9b</anchor>
      <arglist>(const std::vector&lt; NFTManager::NFT &gt; &amp;nfts)</arglist>
    </member>
    <member kind="function">
      <type>ValidationResult</type>
      <name>validateBatchTransfers</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a8eabb3871c52a6b85bc9a78166ac9847</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;nftIds, const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>ValidationResult</type>
      <name>validateBatchBurns</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a208b11673c980bf8e7c74e4522c82104</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;nftIds, const std::string &amp;owner)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateSchema</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>aae1688c5f7c5e3f5b6a5c3c7b58973bc</anchor>
      <arglist>(const nlohmann::json &amp;schema, const nlohmann::json &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateMetadataSchema</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a81b8a34eeb1ae7ac38ebcb99aad8ba3f</anchor>
      <arglist>(const nlohmann::json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValidationRule</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a34d99333e7bee62ac2a316e2ac0e6d30</anchor>
      <arglist>(const std::string &amp;ruleName, std::function&lt; bool(const NFTManager::NFT &amp;)&gt; rule)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeValidationRule</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a2dd7d6f8aa27ff099549a8ca6cd4dee3</anchor>
      <arglist>(const std::string &amp;ruleName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasValidationRule</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>ac9de7e9f3e9dfa4f408c34c17f815eb0</anchor>
      <arglist>(const std::string &amp;ruleName) const</arglist>
    </member>
    <member kind="function">
      <type>Error</type>
      <name>getLastError</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a2a6a1bac85b504e71a1bddf276a3c35a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a167a0e7e8a52f8353985eb7db4d10bef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static NFTValidator &amp;</type>
      <name>getInstance</name>
      <anchorfile>de/d66/classsatox_1_1nft_1_1NFTValidator.html</anchorfile>
      <anchor>a018c9d4f00f271fac79d5998c62872fd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::IPFSManager::NodeInfo</name>
    <filename>dd/d25/structsatox_1_1core_1_1IPFSManager_1_1NodeInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>dd/d25/structsatox_1_1core_1_1IPFSManager_1_1NodeInfo.html</anchorfile>
      <anchor>ae5678faf6b51a33bb1387e3942b2d044</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>address</name>
      <anchorfile>dd/d25/structsatox_1_1core_1_1IPFSManager_1_1NodeInfo.html</anchorfile>
      <anchor>a2c535ad4a894364974f7d1a45340fdb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>addresses</name>
      <anchorfile>dd/d25/structsatox_1_1core_1_1IPFSManager_1_1NodeInfo.html</anchorfile>
      <anchor>a3c4d849e0a0dc54d781710d07bcfffd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>protocols</name>
      <anchorfile>dd/d25/structsatox_1_1core_1_1IPFSManager_1_1NodeInfo.html</anchorfile>
      <anchor>ac570177875fdd25239ac6a5e282c8285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>dd/d25/structsatox_1_1core_1_1IPFSManager_1_1NodeInfo.html</anchorfile>
      <anchor>a187426f7fb8a7ddeba7f4e7fdc6c5930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>agent</name>
      <anchorfile>dd/d25/structsatox_1_1core_1_1IPFSManager_1_1NodeInfo.html</anchorfile>
      <anchor>aa94d770af8b91071dc4d6306d56f6281</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NodeState</type>
      <name>state</name>
      <anchorfile>dd/d25/structsatox_1_1core_1_1IPFSManager_1_1NodeInfo.html</anchorfile>
      <anchor>ac1766df7a88f6b02e358db2011c26103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastSeen</name>
      <anchorfile>dd/d25/structsatox_1_1core_1_1IPFSManager_1_1NodeInfo.html</anchorfile>
      <anchor>a4f54c96bb2d0a5f5f995e7ebc5ef7a65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>dd/d25/structsatox_1_1core_1_1IPFSManager_1_1NodeInfo.html</anchorfile>
      <anchor>a931909806e2f2bd322e13d3cb258f91b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::OsSystemInfo</name>
    <filename>dc/d5d/structsatox_1_1core_1_1OsSystemInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>os_name</name>
      <anchorfile>dc/d5d/structsatox_1_1core_1_1OsSystemInfo.html</anchorfile>
      <anchor>a4566b07a795112a19996715546e4d889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>os_version</name>
      <anchorfile>dc/d5d/structsatox_1_1core_1_1OsSystemInfo.html</anchorfile>
      <anchor>a4959255d22566c17a70484115b571728</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>architecture</name>
      <anchorfile>dc/d5d/structsatox_1_1core_1_1OsSystemInfo.html</anchorfile>
      <anchor>a1a08661a9e1c3f2480197301974b5384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>total_memory</name>
      <anchorfile>dc/d5d/structsatox_1_1core_1_1OsSystemInfo.html</anchorfile>
      <anchor>a8bff7401c4d7535fefa24b6e3fa1639f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>available_memory</name>
      <anchorfile>dc/d5d/structsatox_1_1core_1_1OsSystemInfo.html</anchorfile>
      <anchor>a0fa26282389834924f60d55e9a0a3e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>cpu_cores</name>
      <anchorfile>dc/d5d/structsatox_1_1core_1_1OsSystemInfo.html</anchorfile>
      <anchor>a7a0bd45623e12255f00ae95d04490f15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>hostname</name>
      <anchorfile>dc/d5d/structsatox_1_1core_1_1OsSystemInfo.html</anchorfile>
      <anchor>abfafebc7b7b0e9a9db3aef088ef7027e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>dc/d5d/structsatox_1_1core_1_1OsSystemInfo.html</anchorfile>
      <anchor>aba6508801a404cfff3fd0a19e47b3c77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::OutPoint</name>
    <filename>d4/d31/structsatox_1_1OutPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>OutPoint</name>
      <anchorfile>d4/d31/structsatox_1_1OutPoint.html</anchorfile>
      <anchor>a786d52b41b8dbc0315fa8dd507f5ce9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>uint256</type>
      <name>hash</name>
      <anchorfile>d4/d31/structsatox_1_1OutPoint.html</anchorfile>
      <anchor>ade0f82c7f57d4e3c5b0f0b999fd46ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>n</name>
      <anchorfile>d4/d31/structsatox_1_1OutPoint.html</anchorfile>
      <anchor>a9016095d178666e7973c8be805d98792</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::Output</name>
    <filename>d6/de2/structsatox_1_1core_1_1Output.html</filename>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>d6/de2/structsatox_1_1core_1_1Output.html</anchorfile>
      <anchor>af5e64bde946582f2f71d88b8eb5b2ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>script_pubkey</name>
      <anchorfile>d6/de2/structsatox_1_1core_1_1Output.html</anchorfile>
      <anchor>adfd0be7728fe96e72cf7413dbfebf239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>address</name>
      <anchorfile>d6/de2/structsatox_1_1core_1_1Output.html</anchorfile>
      <anchor>ae959bfc19c32f65c8b009d8d1ec706f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>n</name>
      <anchorfile>d6/de2/structsatox_1_1core_1_1Output.html</anchorfile>
      <anchor>ad3217eec42e517298a7355f1d7a41b75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::Output</name>
    <filename>d8/d3f/structsatox_1_1core_1_1TransactionManager_1_1Output.html</filename>
    <member kind="variable">
      <type>uint64_t</type>
      <name>value</name>
      <anchorfile>d8/d3f/structsatox_1_1core_1_1TransactionManager_1_1Output.html</anchorfile>
      <anchor>a59458d05d47297625ad1b5b4ef7dfa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>script_pubkey</name>
      <anchorfile>d8/d3f/structsatox_1_1core_1_1TransactionManager_1_1Output.html</anchorfile>
      <anchor>af941a4a4a92ceb2ec4e0b52fefb864b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTManager::OwnershipRecord</name>
    <filename>d6/d96/structsatox_1_1nft_1_1NFTManager_1_1OwnershipRecord.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>owner</name>
      <anchorfile>d6/d96/structsatox_1_1nft_1_1NFTManager_1_1OwnershipRecord.html</anchorfile>
      <anchor>ac69d20a0420b74b86af1631bbbd8cc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>previousOwner</name>
      <anchorfile>d6/d96/structsatox_1_1nft_1_1NFTManager_1_1OwnershipRecord.html</anchorfile>
      <anchor>afb865c969faa39c9194e72ae89afe0ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>d6/d96/structsatox_1_1nft_1_1NFTManager_1_1OwnershipRecord.html</anchorfile>
      <anchor>adcbd7de51468e9b440c40b39b105cd6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>transactionId</name>
      <anchorfile>d6/d96/structsatox_1_1nft_1_1NFTManager_1_1OwnershipRecord.html</anchorfile>
      <anchor>aaa83032d82a57b45c3867b8e9884ee51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>reason</name>
      <anchorfile>d6/d96/structsatox_1_1nft_1_1NFTManager_1_1OwnershipRecord.html</anchorfile>
      <anchor>a39179ada7e251c8c7b9187de4e7d4941</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::P2PMessage</name>
    <filename>d6/d48/structsatox_1_1P2PMessage.html</filename>
    <member kind="function">
      <type></type>
      <name>P2PMessage</name>
      <anchorfile>d6/d48/structsatox_1_1P2PMessage.html</anchorfile>
      <anchor>a86113a4274d2f11696a0af3d275cb071</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>P2PMessage</name>
      <anchorfile>d6/d48/structsatox_1_1P2PMessage.html</anchorfile>
      <anchor>ae04769260475a6a1442a3327a21698f4</anchor>
      <arglist>(P2PMessageType type, const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="variable">
      <type>P2PMessageHeader</type>
      <name>header</name>
      <anchorfile>d6/d48/structsatox_1_1P2PMessage.html</anchorfile>
      <anchor>a1003c5de16ffa3677a6b9780787a1517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>payload</name>
      <anchorfile>d6/d48/structsatox_1_1P2PMessage.html</anchorfile>
      <anchor>af8a504e25e633ecc3535001767ab38ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::P2PMessageHeader</name>
    <filename>dd/d2a/structsatox_1_1P2PMessageHeader.html</filename>
    <member kind="function">
      <type></type>
      <name>P2PMessageHeader</name>
      <anchorfile>dd/d2a/structsatox_1_1P2PMessageHeader.html</anchorfile>
      <anchor>a82fd69eeffedbf9b4379c7f78c24d5f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>magic</name>
      <anchorfile>dd/d2a/structsatox_1_1P2PMessageHeader.html</anchorfile>
      <anchor>a529800d31d39de8cdcc3597efa357610</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>command</name>
      <anchorfile>dd/d2a/structsatox_1_1P2PMessageHeader.html</anchorfile>
      <anchor>aee0155cd14de7addc6ad26dfdd0689da</anchor>
      <arglist>[12]</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>length</name>
      <anchorfile>dd/d2a/structsatox_1_1P2PMessageHeader.html</anchorfile>
      <anchor>a515f1a00be7aa3ae0fa996e5dd3424a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>checksum</name>
      <anchorfile>dd/d2a/structsatox_1_1P2PMessageHeader.html</anchorfile>
      <anchor>a2fd40c965ea79c7268727ed08bc0d4c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetManager::PerformanceConfig</name>
    <filename>d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>max_cache_size</name>
      <anchorfile>d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>a60608acb300cacbcc4049320e702e1f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>batch_size</name>
      <anchorfile>d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>ac3fbcbfe3961f82d85ec656332e48f56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_async_processing</name>
      <anchorfile>d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>a955e6596dd723133ee2d7501e6783f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_caching</name>
      <anchorfile>d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>a98b4144c1d282b4de624e8b140f66b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>connection_pool_size</name>
      <anchorfile>d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>a9bf852ed377ed6f4e8deb40954abe977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>cache_ttl</name>
      <anchorfile>d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>a381f4c34ae8e04bb089cea71977b8e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>operation_timeout</name>
      <anchorfile>d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>a5e41ba5cbfe3d912efb9d226ca95013b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::PerformanceConfig</name>
    <filename>d2/da6/structsatox_1_1core_1_1TransactionManager_1_1PerformanceConfig.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>enable_batch_processing</name>
      <anchorfile>d2/da6/structsatox_1_1core_1_1TransactionManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>ad3b2265462b122a349fd89c4267c3b1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>batch_size</name>
      <anchorfile>d2/da6/structsatox_1_1core_1_1TransactionManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>aae009b503a471805f1574b855b9f7a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_connection_pooling</name>
      <anchorfile>d2/da6/structsatox_1_1core_1_1TransactionManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>a16fe8b275beeb008830aa1dd86aac9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pool_size</name>
      <anchorfile>d2/da6/structsatox_1_1core_1_1TransactionManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>a109afe459185b2b801a59f846e61ad5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_caching</name>
      <anchorfile>d2/da6/structsatox_1_1core_1_1TransactionManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>a74b29353059de90956376820cf48ca95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>cache_size</name>
      <anchorfile>d2/da6/structsatox_1_1core_1_1TransactionManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>aed0ab088f360b10c49287f812268f6f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_async_processing</name>
      <anchorfile>d2/da6/structsatox_1_1core_1_1TransactionManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>acd44b7d042c63b50bda0b82bb4620314</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>worker_threads</name>
      <anchorfile>d2/da6/structsatox_1_1core_1_1TransactionManager_1_1PerformanceConfig.html</anchorfile>
      <anchor>ae89ff6cf0b102dc1a4b85f9bb52fcdae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::PerformanceOptimization</name>
    <filename>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</filename>
    <class kind="class">satox::core::PerformanceOptimization::Impl</class>
    <member kind="function">
      <type></type>
      <name>PerformanceOptimization</name>
      <anchorfile>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</anchorfile>
      <anchor>a93679d45b0a31354cdbeb8672b110874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PerformanceOptimization</name>
      <anchorfile>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</anchorfile>
      <anchor>aa4aeb274d37fd0055bfdbbf601c5590e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PerformanceOptimization</name>
      <anchorfile>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</anchorfile>
      <anchor>a7954a2a7294355f32c232174db34c58a</anchor>
      <arglist>(const PerformanceOptimization &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PerformanceOptimization &amp;</type>
      <name>operator=</name>
      <anchorfile>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</anchorfile>
      <anchor>a28fbe2c7270b700c1590477c43ccc858</anchor>
      <arglist>(const PerformanceOptimization &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToCache</name>
      <anchorfile>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</anchorfile>
      <anchor>aad99178e8c4cbbd83386492e5b475879</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>getFromCache</name>
      <anchorfile>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</anchorfile>
      <anchor>a3648cbdf5e93c9077d25d450f3af358f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addConnection</name>
      <anchorfile>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</anchorfile>
      <anchor>a49504d5a3bf2394b70af7a1fc8c0c8ec</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeConnection</name>
      <anchorfile>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</anchorfile>
      <anchor>a62550e91c678e563e07f6b55e93461f1</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addToBatch</name>
      <anchorfile>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</anchorfile>
      <anchor>a74dfdd25ee36ef2569756d06f95906df</anchor>
      <arglist>(const std::string &amp;operation, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>optimizeMemory</name>
      <anchorfile>db/dd3/classsatox_1_1core_1_1PerformanceOptimization.html</anchorfile>
      <anchor>a63d5496fc81a26e8a1c4fa6e86c9ce99</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::nft::NFTManager::PerformanceOptimizer</name>
    <filename>d1/d4f/classsatox_1_1nft_1_1NFTManager_1_1PerformanceOptimizer.html</filename>
    <member kind="function">
      <type></type>
      <name>PerformanceOptimizer</name>
      <anchorfile>d1/d4f/classsatox_1_1nft_1_1NFTManager_1_1PerformanceOptimizer.html</anchorfile>
      <anchor>a897a184ca806021a86dff1ae087499e9</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PerformanceOptimizer</name>
      <anchorfile>d1/d4f/classsatox_1_1nft_1_1NFTManager_1_1PerformanceOptimizer.html</anchorfile>
      <anchor>ae8577905db3da8a2c8234ea782008049</anchor>
      <arglist>()=default</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::PluginManager::PluginConfig</name>
    <filename>d9/d3d/structsatox_1_1core_1_1PluginManager_1_1PluginConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>pluginDir</name>
      <anchorfile>d9/d3d/structsatox_1_1core_1_1PluginManager_1_1PluginConfig.html</anchorfile>
      <anchor>a8814a342edefd5ade0f8a07ec6d4e31d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>autoLoad</name>
      <anchorfile>d9/d3d/structsatox_1_1core_1_1PluginManager_1_1PluginConfig.html</anchorfile>
      <anchor>a80e798969c6c57a3102e18cfda4e763f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>autoInitialize</name>
      <anchorfile>d9/d3d/structsatox_1_1core_1_1PluginManager_1_1PluginConfig.html</anchorfile>
      <anchor>aed57f1f43f20efda295675ee9bcfcaf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>autoStart</name>
      <anchorfile>d9/d3d/structsatox_1_1core_1_1PluginManager_1_1PluginConfig.html</anchorfile>
      <anchor>a14f2db10104df908e803bfbac2b592f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>loadTimeout</name>
      <anchorfile>d9/d3d/structsatox_1_1core_1_1PluginManager_1_1PluginConfig.html</anchorfile>
      <anchor>a4e4a2420fd20b04181a3721ff504cca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>initTimeout</name>
      <anchorfile>d9/d3d/structsatox_1_1core_1_1PluginManager_1_1PluginConfig.html</anchorfile>
      <anchor>a311c8ef9fad72a1c9e75d258d3362ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>startTimeout</name>
      <anchorfile>d9/d3d/structsatox_1_1core_1_1PluginManager_1_1PluginConfig.html</anchorfile>
      <anchor>aa78955ba5e51da28a97585982bb62ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>defaultSettings</name>
      <anchorfile>d9/d3d/structsatox_1_1core_1_1PluginManager_1_1PluginConfig.html</anchorfile>
      <anchor>aa7639635613684721fb04e09adb8abca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::PluginManager::PluginInfo</name>
    <filename>d8/d1c/structsatox_1_1core_1_1PluginManager_1_1PluginInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d8/d1c/structsatox_1_1core_1_1PluginManager_1_1PluginInfo.html</anchorfile>
      <anchor>ade3a553a260e2a5c5783b309f9e85001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>d8/d1c/structsatox_1_1core_1_1PluginManager_1_1PluginInfo.html</anchorfile>
      <anchor>ae35fb6b9b964e167b6c6bc1c4dde13ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>d8/d1c/structsatox_1_1core_1_1PluginManager_1_1PluginInfo.html</anchorfile>
      <anchor>ad8ee8ead933cbee111022c032715e9d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>author</name>
      <anchorfile>d8/d1c/structsatox_1_1core_1_1PluginManager_1_1PluginInfo.html</anchorfile>
      <anchor>a335ed97967e960667605097563605ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>license</name>
      <anchorfile>d8/d1c/structsatox_1_1core_1_1PluginManager_1_1PluginInfo.html</anchorfile>
      <anchor>a69e3f00200e3b2d31e3d000c6eb04aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PluginType</type>
      <name>type</name>
      <anchorfile>d8/d1c/structsatox_1_1core_1_1PluginManager_1_1PluginInfo.html</anchorfile>
      <anchor>a4e1da73a58ea97a4f3e4537de793cd04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>dependencies</name>
      <anchorfile>d8/d1c/structsatox_1_1core_1_1PluginManager_1_1PluginInfo.html</anchorfile>
      <anchor>a8510e37929630f15864e7adb58e12216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>conflicts</name>
      <anchorfile>d8/d1c/structsatox_1_1core_1_1PluginManager_1_1PluginInfo.html</anchorfile>
      <anchor>a94d248c74eca3d212e2c088368036cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d8/d1c/structsatox_1_1core_1_1PluginManager_1_1PluginInfo.html</anchorfile>
      <anchor>a1a620c6c9e6c9a3f208192e2f02d84a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::PluginManager</name>
    <filename>d3/dce/classsatox_1_1core_1_1PluginManager.html</filename>
    <class kind="class">satox::core::PluginManager::IPlugin</class>
    <class kind="class">satox::core::PluginManager::IPluginFactory</class>
    <class kind="struct">satox::core::PluginManager::PluginConfig</class>
    <class kind="struct">satox::core::PluginManager::PluginInfo</class>
    <class kind="struct">satox::core::PluginManager::PluginStats</class>
    <member kind="enumeration">
      <type></type>
      <name>PluginState</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a9f65b9ce0035321a595d8b6f9fe840fa</anchor>
      <arglist></arglist>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="a9f65b9ce0035321a595d8b6f9fe840faa795b8a51556d0b2cf4fbc11a896f6269">UNLOADED</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="a9f65b9ce0035321a595d8b6f9fe840faab638272ceeff54912f043465e9a28c9b">LOADED</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="a9f65b9ce0035321a595d8b6f9fe840faadee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="a9f65b9ce0035321a595d8b6f9fe840faa43491564ebcfd38568918efbd6e840fd">RUNNING</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="a9f65b9ce0035321a595d8b6f9fe840faa99b2439e63f73ad515f7ab2447a80673">PAUSED</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="a9f65b9ce0035321a595d8b6f9fe840faabb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PluginType</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>afdcdd7fbe9ec149b1f199a8fcfb789af</anchor>
      <arglist></arglist>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afac5d5df976f196200d1900b2b51827dbb">CORE</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afa25835188a2355e9530d3a10fcbe4c65b">NETWORK</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afae4b25d8c911628d527b2c97039a9f593">BLOCKCHAIN</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afa5dfbfc491808ab7c150714aa58105474">WALLET</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afae6bed345f53943469741d7295552fcd4">TRANSACTION</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afa5a3a9300fec880f9634e271a66bde419">ASSET</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afaa692c529f241845ae00b47284e09e76a">NFT</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afa6abe0c37d965e4a8bd11571378674642">IPFS</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afab1379b4ce097a8afd5d99abab0875a8e">DATABASE</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afa08e1be4b785493d9fc2ae52c5ba9ab2e">CACHE</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afa73e99d350a4aa6f1a5af04ec29173f73">CONFIG</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afa219ce424cc367fba8a5a0210792d4dc0">SECURITY</enumvalue>
      <enumvalue file="d3/dce/classsatox_1_1core_1_1PluginManager.html" anchor="afdcdd7fbe9ec149b1f199a8fcfb789afa72baef04098f035e8a320b03ad197818">CUSTOM</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, PluginState)&gt;</type>
      <name>PluginStateCallback</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a655d753cd39aee6cf3084642009e077e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt;</type>
      <name>PluginErrorCallback</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>aeb55c0e34d44ba56d6f4a2042c5a29ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const nlohmann::json &amp;)&gt;</type>
      <name>PluginConfigCallback</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a925f8fa2343b41f08a409e5192a22d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginManager</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a453a1c440f2471d49d4da98adb0390f7</anchor>
      <arglist>(const PluginManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PluginManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a039c4a10c70484d42f5228c4cf3ea4aa</anchor>
      <arglist>(const PluginManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>aa7f314c043d4bf6882f144896efbc223</anchor>
      <arglist>(const PluginConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>abef6cc5a168301c8440d708c1a39c3ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>loadPlugin</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a961a5bf43bdf8428d2c0a8304206905b</anchor>
      <arglist>(const std::string &amp;pluginPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unloadPlugin</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>ada247a81c965dc67d1b1b709af8025e1</anchor>
      <arglist>(const std::string &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reloadPlugin</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a205ac36425685bae95f3879ad6ea7722</anchor>
      <arglist>(const std::string &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPluginLoaded</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a33c0c1868ffb3ebf3f212c9c565ba512</anchor>
      <arglist>(const std::string &amp;pluginName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initializePlugin</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a3a2f53d88e32460d2a17c91ee1f9c1ab</anchor>
      <arglist>(const std::string &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startPlugin</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a016fb76c8098a5c64c973e0e0a8cd75f</anchor>
      <arglist>(const std::string &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stopPlugin</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>ac9fcf7796b9e228accdc61180cfad27c</anchor>
      <arglist>(const std::string &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pausePlugin</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>abd1eefe12539148e359613dd50661438</anchor>
      <arglist>(const std::string &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resumePlugin</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a555c3283cb7bc3d9801e73436bf80fb2</anchor>
      <arglist>(const std::string &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updatePlugin</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a3d960e60f78bff15af960dca9f8c9284</anchor>
      <arglist>(const std::string &amp;pluginName, const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; PluginInfo &gt;</type>
      <name>getPluginInfo</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a12453272ec7db48f1d307a6ebe62206d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PluginInfo</type>
      <name>getPluginInfo</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a6477b29fe932ed66fa9cca3c56ec03e6</anchor>
      <arglist>(const std::string &amp;pluginName) const</arglist>
    </member>
    <member kind="function">
      <type>PluginState</type>
      <name>getPluginState</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>ae0989dfc30941693a7faa060513db065</anchor>
      <arglist>(const std::string &amp;pluginName) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getPluginError</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a5106b282aeffb5e6ea4b4801fed3e63b</anchor>
      <arglist>(const std::string &amp;pluginName) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>discoverPlugins</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>ab1e5d7235bf0b8674f6864c5996ed710</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scanPluginDirectory</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a35361c4bae3e65599f198a2cd666123a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validatePlugin</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a45ad6216bbd9905f5ea5f055eb549d1c</anchor>
      <arglist>(const std::string &amp;pluginPath) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkDependencies</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a81ea9cb9d14d98938e4c155360e35a29</anchor>
      <arglist>(const std::string &amp;pluginName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resolveDependencies</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a8c8a094a312f291ae97766f78983366a</anchor>
      <arglist>(const std::string &amp;pluginName)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getDependencies</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>abc322f67371b6f8ef8a07a76ca81c1e0</anchor>
      <arglist>(const std::string &amp;pluginName) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getDependents</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>abecf620a5214111b3212dc3c3794c9aa</anchor>
      <arglist>(const std::string &amp;pluginName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPluginConfig</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>ae0ae41474e19b4fef472f4739c579f4a</anchor>
      <arglist>(const std::string &amp;pluginName, const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getPluginConfig</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>ae0d95221c1ca603a66d732aca7c5b33b</anchor>
      <arglist>(const std::string &amp;pluginName) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validatePluginConfig</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>ab76b2ae97660c32b2ac77cc72b983b78</anchor>
      <arglist>(const std::string &amp;pluginName, const nlohmann::json &amp;config) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerStateCallback</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a6d4671751d673ae5ef6018c9ac5eeffa</anchor>
      <arglist>(PluginStateCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a0e43b68be83f2bd79e452c4bcf8d4ecb</anchor>
      <arglist>(PluginErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerConfigCallback</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>af932b53340e1abda9222e063ae6084bc</anchor>
      <arglist>(PluginConfigCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterStateCallback</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a86ce295efde3bd8ed4a4fa2bdecc0ff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a877bf7b60127b27229ba8c3e180507f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterConfigCallback</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>affbf1e6d6078ae3267da1966bcafa089</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PluginStats</type>
      <name>getStats</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a0257a7d890e9111db9b6b0277a08316d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a49cf294bb8d074a7256600f393c79499</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableStats</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>aed86f9e3bfc57c68b21916cb22285e62</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>a6a7c100f11d3c7941dd12b81bc1fcaca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>afe24f34a40a57b5fea868f3764e2ae0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static PluginManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d3/dce/classsatox_1_1core_1_1PluginManager.html</anchorfile>
      <anchor>aafcf2e83f35ac5f9e90f17989a7885d1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::PluginManager::PluginStats</name>
    <filename>d9/df0/structsatox_1_1core_1_1PluginManager_1_1PluginStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>totalPlugins</name>
      <anchorfile>d9/df0/structsatox_1_1core_1_1PluginManager_1_1PluginStats.html</anchorfile>
      <anchor>ab47560dd58258736c0a5b8eef87e569e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>loadedPlugins</name>
      <anchorfile>d9/df0/structsatox_1_1core_1_1PluginManager_1_1PluginStats.html</anchorfile>
      <anchor>aebbdf8cfa27a3c30ab38c2810cd46b85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>runningPlugins</name>
      <anchorfile>d9/df0/structsatox_1_1core_1_1PluginManager_1_1PluginStats.html</anchorfile>
      <anchor>ad8fbf6e982e74505db576955662fcc6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>failedPlugins</name>
      <anchorfile>d9/df0/structsatox_1_1core_1_1PluginManager_1_1PluginStats.html</anchorfile>
      <anchor>a437cd0a99cc480ea718e4abf3c10f58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>averageLoadTime</name>
      <anchorfile>d9/df0/structsatox_1_1core_1_1PluginManager_1_1PluginStats.html</anchorfile>
      <anchor>a26de445f0ce01a8e38534f9d9e805afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>averageInitTime</name>
      <anchorfile>d9/df0/structsatox_1_1core_1_1PluginManager_1_1PluginStats.html</anchorfile>
      <anchor>a90fa023c4be7be350660e9b746044eef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>averageStartTime</name>
      <anchorfile>d9/df0/structsatox_1_1core_1_1PluginManager_1_1PluginStats.html</anchorfile>
      <anchor>afbcb801a99e63b4bd8f81a490892a52d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::PQCException</name>
    <filename>d0/d3b/classsatox_1_1security_1_1PQCException.html</filename>
    <base>satox::security::SecurityException</base>
    <member kind="function">
      <type></type>
      <name>PQCException</name>
      <anchorfile>d0/d3b/classsatox_1_1security_1_1PQCException.html</anchorfile>
      <anchor>ab06b1b4694d9b20cd3477df32459c8f7</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::security::PQCKeyInfo</name>
    <filename>d0/dfb/structsatox_1_1security_1_1PQCKeyInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>algorithm</name>
      <anchorfile>d0/dfb/structsatox_1_1security_1_1PQCKeyInfo.html</anchorfile>
      <anchor>a3da2260e7e9284f4f868370ea6dae348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>publicKey</name>
      <anchorfile>d0/dfb/structsatox_1_1security_1_1PQCKeyInfo.html</anchorfile>
      <anchor>adfb4727e8cacab0e4d4ca34286952bbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>privateKey</name>
      <anchorfile>d0/dfb/structsatox_1_1security_1_1PQCKeyInfo.html</anchorfile>
      <anchor>ae10d3401d9754fd71bb4d44d84a8ce0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>createdAt</name>
      <anchorfile>d0/dfb/structsatox_1_1security_1_1PQCKeyInfo.html</anchorfile>
      <anchor>a5bb752bc3bb7be693658d0a1e62b7546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>expiresAt</name>
      <anchorfile>d0/dfb/structsatox_1_1security_1_1PQCKeyInfo.html</anchorfile>
      <anchor>ac79e0d26a7368a7952da7668a2b5ca7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>d0/dfb/structsatox_1_1security_1_1PQCKeyInfo.html</anchorfile>
      <anchor>ab4eacfb41cf0f750f118b8a032af2e79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::ProofOfWork</name>
    <filename>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</filename>
    <member kind="function">
      <type></type>
      <name>ProofOfWork</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>a07597b203f8402a0f75789f6abd7d0d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProofOfWork</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>a6066ff3497191e513883a0e34f993b4d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProofOfWork</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>a02e0f6a17b93c0fb65bd09413d64c1d7</anchor>
      <arglist>(const ProofOfWork &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ProofOfWork &amp;</type>
      <name>operator=</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>af4a21ba1471b56285a4e4d6b61a1b068</anchor>
      <arglist>(const ProofOfWork &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProofOfWork</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>a292e115ee2e6c997cd504a5607febc23</anchor>
      <arglist>(ProofOfWork &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>ProofOfWork &amp;</type>
      <name>operator=</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>a9932007dbe6058e0c241c300cdfb45a7</anchor>
      <arglist>(ProofOfWork &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>mineBlock</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>acc9accd74c52c70246eb36d1b7a317af</anchor>
      <arglist>(const std::string &amp;previousHash, const std::string &amp;merkleRoot, uint64_t timestamp, uint64_t difficulty)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyBlock</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>a001bc3017e74097f9f381e096a565e10</anchor>
      <arglist>(const std::string &amp;hash, const std::string &amp;previousHash, const std::string &amp;merkleRoot, uint64_t timestamp, uint64_t difficulty, const std::string &amp;nonce)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>calculateHash</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>aabd17925539a22ff64db1c99f85df15b</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>meetsDifficulty</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>a21fecd44177f661e71a87a5c08450b6f</anchor>
      <arglist>(const std::string &amp;hash, uint64_t difficulty)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static uint64_t</type>
      <name>getDifficulty</name>
      <anchorfile>dc/de4/classsatox_1_1core_1_1ProofOfWork.html</anchorfile>
      <anchor>a29a8af8b51e48d119a899d2f2963f57e</anchor>
      <arglist>(uint64_t blockHeight)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::QuantumManager::QuantumEncryption</name>
    <filename>d6/d69/structsatox_1_1core_1_1QuantumManager_1_1QuantumEncryption.html</filename>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>ciphertext</name>
      <anchorfile>d6/d69/structsatox_1_1core_1_1QuantumManager_1_1QuantumEncryption.html</anchorfile>
      <anchor>af2d4486323ab6cc7cd28f06ade34fcff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>publicKey</name>
      <anchorfile>d6/d69/structsatox_1_1core_1_1QuantumManager_1_1QuantumEncryption.html</anchorfile>
      <anchor>a5f9ad2b5e9efc37f181dba23b923bb0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::QuantumManager::QuantumKeyPair</name>
    <filename>df/dc2/structsatox_1_1core_1_1QuantumManager_1_1QuantumKeyPair.html</filename>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>publicKey</name>
      <anchorfile>df/dc2/structsatox_1_1core_1_1QuantumManager_1_1QuantumKeyPair.html</anchorfile>
      <anchor>acaf84cd5ae2e4558934618a61d6fed86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>privateKey</name>
      <anchorfile>df/dc2/structsatox_1_1core_1_1QuantumManager_1_1QuantumKeyPair.html</anchorfile>
      <anchor>a1e0c126fa5436202ee76eb73e4754c83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::QuantumManager</name>
    <filename>dd/d98/classsatox_1_1core_1_1QuantumManager.html</filename>
    <class kind="struct">satox::core::QuantumManager::AlgorithmInfo</class>
    <class kind="struct">satox::core::QuantumManager::QuantumEncryption</class>
    <class kind="struct">satox::core::QuantumManager::QuantumKeyPair</class>
    <class kind="struct">satox::core::QuantumManager::QuantumSignature</class>
    <class kind="struct">satox::core::QuantumManager::QuantumStats</class>
    <member kind="enumeration">
      <type></type>
      <name>Algorithm</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a689f6852e74d18d4555ee0c4044f1c68</anchor>
      <arglist></arglist>
      <enumvalue file="dd/d98/classsatox_1_1core_1_1QuantumManager.html" anchor="a689f6852e74d18d4555ee0c4044f1c68a7940742ed29f3c597997b12dbcadfa17">CRYSTALS_KYBER</enumvalue>
      <enumvalue file="dd/d98/classsatox_1_1core_1_1QuantumManager.html" anchor="a689f6852e74d18d4555ee0c4044f1c68a68dbf986e982af2a15ef57d720c419fa">CRYSTALS_DILITHIUM</enumvalue>
      <enumvalue file="dd/d98/classsatox_1_1core_1_1QuantumManager.html" anchor="a689f6852e74d18d4555ee0c4044f1c68ab48c6b32c41d8a5c7572c9db8852d5c7">FALCON</enumvalue>
      <enumvalue file="dd/d98/classsatox_1_1core_1_1QuantumManager.html" anchor="a689f6852e74d18d4555ee0c4044f1c68a6ea9c88fae22a96490aaadacd00d7ae3">SPHINCS_PLUS</enumvalue>
      <enumvalue file="dd/d98/classsatox_1_1core_1_1QuantumManager.html" anchor="a689f6852e74d18d4555ee0c4044f1c68a234386af5fe814dfab329bd1dff908f6">NTRU</enumvalue>
      <enumvalue file="dd/d98/classsatox_1_1core_1_1QuantumManager.html" anchor="a689f6852e74d18d4555ee0c4044f1c68a36ffd24cd662e1a7bc157c9bd7547f12">SABER</enumvalue>
      <enumvalue file="dd/d98/classsatox_1_1core_1_1QuantumManager.html" anchor="a689f6852e74d18d4555ee0c4044f1c68afdd3f053ff47a2ff29aef1b5e42f9955">SHA_3</enumvalue>
      <enumvalue file="dd/d98/classsatox_1_1core_1_1QuantumManager.html" anchor="a689f6852e74d18d4555ee0c4044f1c68a355c37ce8ac7c39c69bf3ba1c19d12f5">SHAKE_128</enumvalue>
      <enumvalue file="dd/d98/classsatox_1_1core_1_1QuantumManager.html" anchor="a689f6852e74d18d4555ee0c4044f1c68a7511a73e753f72a517b5f62a0f40a040">SHAKE_256</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a258b305145fea21de6474e0f0f3516ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const QuantumStats &amp;)&gt;</type>
      <name>StatsCallback</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a0cc7c05848ad084446a9328de5122331</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuantumManager</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a0a233b1eb86331afe7db93270f3558d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~QuantumManager</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>acda21c32a60133c1e7c51d2c9895a781</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuantumManager</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a810f5e8fbbe47cb725a1d67b419deb72</anchor>
      <arglist>(const QuantumManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>QuantumManager &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a1c5581aad9127b6338a238a322afef6e</anchor>
      <arglist>(const QuantumManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuantumManager</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a6495aa428eafc418a057f0abc9fa6be4</anchor>
      <arglist>(QuantumManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>QuantumManager &amp;</type>
      <name>operator=</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>ac878d8f7f90127c95a1f3b45043811bd</anchor>
      <arglist>(QuantumManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a4d0838735883d3adb19017b0767122b2</anchor>
      <arglist>(const std::string &amp;algorithm)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::string, std::string &gt;</type>
      <name>generateKeyPair</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>ac55fe2b11c178807dffe66e2fcaab4ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>encrypt</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a825e2bc866be81af90f56e38d12ab9dc</anchor>
      <arglist>(const std::string &amp;publicKey, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>decrypt</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>ac558b148f265a4974c217a32801a0503</anchor>
      <arglist>(const std::string &amp;privateKey, const std::string &amp;encryptedData)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>serializeKey</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a304d6a6ec46c14628bce7628f1a9deca</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>deserializeKey</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>ac1193a90d61b29c16423cfda68be3844</anchor>
      <arglist>(const std::string &amp;serialized)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a8dc089a57fde7df9005d3ce0515c0576</anchor>
      <arglist>(const nlohmann::json &amp;config=nlohmann::json::object())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shutdown</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a119bfe2c1b8ec58aad802bea90a4c65f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a345ab294e32c01747170e0f339b30b67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QuantumKeyPair</type>
      <name>generateKeyPair</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a2f001ca94b0ef687361f0626bd470e20</anchor>
      <arglist>(const std::string &amp;algorithm=&quot;CRYSTALS-Kyber&quot;)</arglist>
    </member>
    <member kind="function">
      <type>QuantumSignature</type>
      <name>sign</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>aefd573baf3268fb723653c254d22cf46</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data, const std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a6385eb134c23d18dc81da375b9105afb</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data, const QuantumSignature &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>QuantumEncryption</type>
      <name>encrypt</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a61bc79edb2f4362d39899b2c2e49d21c</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data, const std::vector&lt; uint8_t &gt; &amp;publicKey)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>decrypt</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a63264b12996c335ae1a306f599f76f45</anchor>
      <arglist>(const QuantumEncryption &amp;encryption, const std::vector&lt; uint8_t &gt; &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>generateRandomBytes</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a73189b975b907ace479cd85a15fe710a</anchor>
      <arglist>(size_t length)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>generateRandomNumber</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a6814a6e001ea989ec27c56c5a5dfda70</anchor>
      <arglist>(uint64_t min, uint64_t max)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>hash</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a5382e821514647fb79b2a09b71ccc67c</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data, const std::string &amp;algorithm=&quot;SHA-3&quot;)</arglist>
    </member>
    <member kind="function">
      <type>AlgorithmInfo</type>
      <name>getAlgorithmInfo</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a71b721d3611c5c6264f890925084568d</anchor>
      <arglist>(Algorithm algorithm) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Algorithm &gt;</type>
      <name>getSupportedAlgorithms</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a94101c026009c8bed30e3ff3b78b4342</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QuantumStats</type>
      <name>getStats</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a15fa59ede84a85f0d774301a03254d38</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a00fc3e8487929ec9589afd7096ce89db</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetStats</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>aa2c4b5da5422b26564e373f2ee7cee0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a5db50eb0f84911b01a98091fd9053a1c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>clearLastError</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>aec040f806d8c7b528b3a151829d43883</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerErrorCallback</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>afd854988f936609aca9e96f6e26055a1</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerStatsCallback</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>adb15aa8d16e89e3efa0975545faf60d7</anchor>
      <arglist>(StatsCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>afb91a4600b84a88341fabb89e48134d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unregisterStatsCallback</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>aeeaac6c789def6c2da987c198975989a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static QuantumManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>dd/d98/classsatox_1_1core_1_1QuantumManager.html</anchorfile>
      <anchor>a128442a95e048419d1fd3f6030615488</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::QuantumManager::QuantumSignature</name>
    <filename>d6/d66/structsatox_1_1core_1_1QuantumManager_1_1QuantumSignature.html</filename>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>signature</name>
      <anchorfile>d6/d66/structsatox_1_1core_1_1QuantumManager_1_1QuantumSignature.html</anchorfile>
      <anchor>ac68097075f6f74aac5da79f96879ef02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>publicKey</name>
      <anchorfile>d6/d66/structsatox_1_1core_1_1QuantumManager_1_1QuantumSignature.html</anchorfile>
      <anchor>a1e3581d2c69315a243c4a8d76585a5cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::QuantumManager::QuantumStats</name>
    <filename>d6/d59/structsatox_1_1core_1_1QuantumManager_1_1QuantumStats.html</filename>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalKeyPairs</name>
      <anchorfile>d6/d59/structsatox_1_1core_1_1QuantumManager_1_1QuantumStats.html</anchorfile>
      <anchor>a8defb921de091ed151fd23f2d81579e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalSignatures</name>
      <anchorfile>d6/d59/structsatox_1_1core_1_1QuantumManager_1_1QuantumStats.html</anchorfile>
      <anchor>a7f14f7bf36ffae6f2802683489628e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalVerifications</name>
      <anchorfile>d6/d59/structsatox_1_1core_1_1QuantumManager_1_1QuantumStats.html</anchorfile>
      <anchor>ac8370e22560c248832a467947a37d74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalEncryptions</name>
      <anchorfile>d6/d59/structsatox_1_1core_1_1QuantumManager_1_1QuantumStats.html</anchorfile>
      <anchor>a9c4c3ea878ccae1c665da9c0b6738b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalDecryptions</name>
      <anchorfile>d6/d59/structsatox_1_1core_1_1QuantumManager_1_1QuantumStats.html</anchorfile>
      <anchor>a53b6c6c3c2ec863ae49a9bb755595869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalRandomBytes</name>
      <anchorfile>d6/d59/structsatox_1_1core_1_1QuantumManager_1_1QuantumStats.html</anchorfile>
      <anchor>a8d20270f7383637e3e4f343eaa0978f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalHashes</name>
      <anchorfile>d6/d59/structsatox_1_1core_1_1QuantumManager_1_1QuantumStats.html</anchorfile>
      <anchor>a5c94b0e798e141d917648e628a5785de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, uint64_t &gt;</type>
      <name>algorithmUsage</name>
      <anchorfile>d6/d59/structsatox_1_1core_1_1QuantumManager_1_1QuantumStats.html</anchorfile>
      <anchor>a0139ec565d90f10285acb883bdae3059</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::QueryOptimizer</name>
    <filename>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</filename>
    <class kind="struct">satox::database::QueryOptimizer::IndexInfo</class>
    <class kind="struct">satox::database::QueryOptimizer::QueryPlan</class>
    <class kind="struct">satox::database::QueryOptimizer::TableStats</class>
    <member kind="function">
      <type></type>
      <name>QueryOptimizer</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a98c373296d58a491a34bc28bd9246790</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~QueryOptimizer</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a90322a15d850297ef2eb70c3b9ce8593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QueryPlan</type>
      <name>optimizeQuery</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a2e04d80c5c05b97abe4094f245b78bab</anchor>
      <arglist>(const std::string &amp;query, const nlohmann::json &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>QueryPlan</type>
      <name>optimizeSelect</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a124648546dcb38cc25189ed6b3f653ab</anchor>
      <arglist>(const std::string &amp;table, const nlohmann::json &amp;conditions)</arglist>
    </member>
    <member kind="function">
      <type>QueryPlan</type>
      <name>optimizeJoin</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a13e5ff063da68cbd7389ed1cc9e2978c</anchor>
      <arglist>(const std::string &amp;table1, const std::string &amp;table2, const nlohmann::json &amp;joinConditions)</arglist>
    </member>
    <member kind="function">
      <type>QueryPlan</type>
      <name>optimizeAggregate</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a0e2f4044f01470ac1e4950ad0e8b891c</anchor>
      <arglist>(const std::string &amp;table, const std::vector&lt; std::string &gt; &amp;groupBy, const std::vector&lt; std::string &gt; &amp;aggregate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addIndex</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>aa8e6d53f1f4d1863604d6429b2dc503e</anchor>
      <arglist>(const IndexInfo &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIndex</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a431cbec64cf3d1958e2f01a4b59d7d8c</anchor>
      <arglist>(const std::string &amp;indexName)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; IndexInfo &gt;</type>
      <name>getIndexes</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a23df0659fa9ac27b71207a00380b129b</anchor>
      <arglist>(const std::string &amp;table) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasIndex</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a430f881e2485b5ae699318a4f79bfd0b</anchor>
      <arglist>(const std::string &amp;table, const std::vector&lt; std::string &gt; &amp;columns) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateTableStats</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a271c92b9f9e0209b3b79171484be5f6c</anchor>
      <arglist>(const std::string &amp;table, const TableStats &amp;stats)</arglist>
    </member>
    <member kind="function">
      <type>TableStats</type>
      <name>getTableStats</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a3c43ca01e6287f7445ea78cb7dff5f8d</anchor>
      <arglist>(const std::string &amp;table) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateColumnStats</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a7630ba958cd37574f2d09f754992b834</anchor>
      <arglist>(const std::string &amp;table, const std::string &amp;column, double selectivity)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>estimateQueryCost</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>ac3b0885d7b769928d1a4b95edcfe45e3</anchor>
      <arglist>(const QueryPlan &amp;plan) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>estimateJoinCost</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>a11c2d65254299da6208735299b578b1f</anchor>
      <arglist>(const std::string &amp;table1, const std::string &amp;table2, const nlohmann::json &amp;conditions) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>estimateScanCost</name>
      <anchorfile>d5/d3e/classsatox_1_1database_1_1QueryOptimizer.html</anchorfile>
      <anchor>aaf4cc748d9535216ad4675f03d58b1e7</anchor>
      <arglist>(const std::string &amp;table, const nlohmann::json &amp;conditions) const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::QueryOptimizer::QueryPlan</name>
    <filename>de/db3/structsatox_1_1database_1_1QueryOptimizer_1_1QueryPlan.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>query</name>
      <anchorfile>de/db3/structsatox_1_1database_1_1QueryOptimizer_1_1QueryPlan.html</anchorfile>
      <anchor>a2733d580c48c84464c7431fd4a61ea18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>usedIndexes</name>
      <anchorfile>de/db3/structsatox_1_1database_1_1QueryOptimizer_1_1QueryPlan.html</anchorfile>
      <anchor>a3bd30061305367a8052e0605d492880d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>estimatedRows</name>
      <anchorfile>de/db3/structsatox_1_1database_1_1QueryOptimizer_1_1QueryPlan.html</anchorfile>
      <anchor>ac51f6f11b5daf18fce1d4e4c176f390f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>estimatedCost</name>
      <anchorfile>de/db3/structsatox_1_1database_1_1QueryOptimizer_1_1QueryPlan.html</anchorfile>
      <anchor>a7568eed5f7ca5fc297cdd32ce6029a3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::DatabaseManager::QueryResult</name>
    <filename>d1/d9c/structsatox_1_1core_1_1DatabaseManager_1_1QueryResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d1/d9c/structsatox_1_1core_1_1DatabaseManager_1_1QueryResult.html</anchorfile>
      <anchor>ad6b4bdd5f71c43e4774091b85d445496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d1/d9c/structsatox_1_1core_1_1DatabaseManager_1_1QueryResult.html</anchorfile>
      <anchor>acc224f3e527bbb2dd3b9a6bfa3577713</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::unordered_map&lt; std::string, std::string &gt; &gt;</type>
      <name>rows</name>
      <anchorfile>d1/d9c/structsatox_1_1core_1_1DatabaseManager_1_1QueryResult.html</anchorfile>
      <anchor>ac68a58deb158702d9f5d5076d64913a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::DatabaseConnection::QueryResult</name>
    <filename>d3/dd4/structsatox_1_1nft_1_1DatabaseConnection_1_1QueryResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d3/dd4/structsatox_1_1nft_1_1DatabaseConnection_1_1QueryResult.html</anchorfile>
      <anchor>af4ab22345c766812dda61b95d14ef9d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d3/dd4/structsatox_1_1nft_1_1DatabaseConnection_1_1QueryResult.html</anchorfile>
      <anchor>ae46a7d0b783d8448f4e75fdc67d14523</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>rows</name>
      <anchorfile>d3/dd4/structsatox_1_1nft_1_1DatabaseConnection_1_1QueryResult.html</anchorfile>
      <anchor>adcdf5bbdf8f4edeca54e63a653538fbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::security::RateLimitConfig</name>
    <filename>d5/dc9/structsatox_1_1security_1_1RateLimitConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>identifier</name>
      <anchorfile>d5/dc9/structsatox_1_1security_1_1RateLimitConfig.html</anchorfile>
      <anchor>ad3c6a5d681191b3b504ca8a9fc9280c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxRequests</name>
      <anchorfile>d5/dc9/structsatox_1_1security_1_1RateLimitConfig.html</anchorfile>
      <anchor>a150b26c924737882011036b41419b641</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>timeWindow</name>
      <anchorfile>d5/dc9/structsatox_1_1security_1_1RateLimitConfig.html</anchorfile>
      <anchor>abf33355b57d7551757ca22c09738ae83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SecurityLevel</type>
      <name>level</name>
      <anchorfile>d5/dc9/structsatox_1_1security_1_1RateLimitConfig.html</anchorfile>
      <anchor>acf16eefdc6ac99b8666bd8bb7eb357c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::RateLimiter</name>
    <filename>dd/d4b/classsatox_1_1RateLimiter.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>a1acb06fb6accc0b532219b953410ed54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>a060b908cfd43b703463bed25d4dbfa5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>ab31b60ae09aa7f34173832f9d992135f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkLimit</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>aea446ed6643ce6c2f8007edd611d6e5c</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;client_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateLimit</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>a40e8ae4a6be30e87bff28a2f9276d573</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;client_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLimit</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>a47352e51b5c86e510c9de06668ccc2b3</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;client_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetAllLimits</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>ae93050ad0b32d9a91c4c7254405c245e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMethodLimit</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>a22e1caf087967632350a4dca3ff4e22d</anchor>
      <arglist>(const std::string &amp;method, int max_requests, std::chrono::seconds window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultLimit</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>ab7ce71e9b54fb2c3ed2fc0f773acda8f</anchor>
      <arglist>(int max_requests, std::chrono::seconds window)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClientLimit</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>ac158b4d4a4c5da93c54d3970d20b4c35</anchor>
      <arglist>(const std::string &amp;client_id, int max_requests, std::chrono::seconds window)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RateLimiter &amp;</type>
      <name>getInstance</name>
      <anchorfile>dd/d4b/classsatox_1_1RateLimiter.html</anchorfile>
      <anchor>aa896bc3eae7ebdbe33b6a8ec5fd54250</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::RateLimiter</name>
    <filename>de/d2c/classsatox_1_1security_1_1RateLimiter.html</filename>
    <member kind="function">
      <type></type>
      <name>RateLimiter</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>aa7b694e7be901250b2c066f5c72602fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RateLimiter</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>a4f7c513362a355bea14f6701aa167bfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>a502808d8d541531465961cdbd71613ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>a2c743b309a1c70a7072572f1dba96b1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkLimit</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>ad85e2f270644587f30153220c298249e</anchor>
      <arglist>(const std::string &amp;key, int maxRequests, int timeWindow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLimit</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>a753c673043572b9f7bd26926e86d9320</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRequestCount</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>af9be0b059642cf76750363d4a719d6c7</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTimeRemaining</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>a3fe563842cb83cd75fd93ccc10cdc794</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeWindow</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>ac340528283d7c1bfa25f54c555ce722d</anchor>
      <arglist>(const std::string &amp;key, int timeWindow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxRequests</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>a1a255630a93888154419a24ce3f69de3</anchor>
      <arglist>(const std::string &amp;key, int maxRequests)</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::system_clock::time_point</type>
      <name>getWindowStart</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>a0f296eadd8910f0366015a7fd7330f73</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTimeWindow</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>addcaba354c812ea2fbb2874de934f75b</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxRequests</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>ae1dc975be71908e53670e49061e7d021</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>de/d2c/classsatox_1_1security_1_1RateLimiter.html</anchorfile>
      <anchor>aa8787c429eb3d02ad4d40be2a909e889</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::RateLimitException</name>
    <filename>d8/d9d/classsatox_1_1security_1_1RateLimitException.html</filename>
    <base>satox::security::SecurityException</base>
    <member kind="function">
      <type></type>
      <name>RateLimitException</name>
      <anchorfile>d8/d9d/classsatox_1_1security_1_1RateLimitException.html</anchorfile>
      <anchor>af012a301551af89456b1e3c57e0a1e37</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::security::RateLimitStatus</name>
    <filename>d9/dde/structsatox_1_1security_1_1RateLimitStatus.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>identifier</name>
      <anchorfile>d9/dde/structsatox_1_1security_1_1RateLimitStatus.html</anchorfile>
      <anchor>a14bfbd94c0e53dd55cab5e061b73d73d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>currentRequests</name>
      <anchorfile>d9/dde/structsatox_1_1security_1_1RateLimitStatus.html</anchorfile>
      <anchor>a6b107c608cc6a7d0b0ce1803b4215026</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxRequests</name>
      <anchorfile>d9/dde/structsatox_1_1security_1_1RateLimitStatus.html</anchorfile>
      <anchor>a9e7134d536310d6bbb77057a3d7cf0f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>timeWindow</name>
      <anchorfile>d9/dde/structsatox_1_1security_1_1RateLimitStatus.html</anchorfile>
      <anchor>ad2d1107a8992e6779f48e2b9adf1c176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>resetTime</name>
      <anchorfile>d9/dde/structsatox_1_1security_1_1RateLimitStatus.html</anchorfile>
      <anchor>a709fd53b54938724afd1b1c57554854b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isBlocked</name>
      <anchorfile>d9/dde/structsatox_1_1security_1_1RateLimitStatus.html</anchorfile>
      <anchor>a9d6bc11ef5980d8e9f717f53fbe0d7fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::FirebaseManager::RealtimeDatabase</name>
    <filename>d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>getData</name>
      <anchorfile>d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase.html</anchorfile>
      <anchor>aa9ca571b1ae85b808cd15c1a9e7dd0f6</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;path, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setData</name>
      <anchorfile>d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase.html</anchorfile>
      <anchor>afc6fcae71f79ca5280cd2c551cbe31c9</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;path, const nlohmann::json &amp;data, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateData</name>
      <anchorfile>d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase.html</anchorfile>
      <anchor>a5dfb1c5c788161e67d9e5543b57d70f5</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;path, const nlohmann::json &amp;data, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteData</name>
      <anchorfile>d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase.html</anchorfile>
      <anchor>a1f6166501a6eac8383e0ccc58e9a8131</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;path, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>listen</name>
      <anchorfile>d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase.html</anchorfile>
      <anchor>ad7eb0abc75111894532204351c52b7f6</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;path, std::function&lt; void(const nlohmann::json &amp;)&gt; callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stopListening</name>
      <anchorfile>d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase.html</anchorfile>
      <anchor>afba7f62d95e073fc9307941229766bb1</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;listener_id)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::AssetManager::RecoveryOperation</name>
    <filename>df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>addfb751231d5814bcf24e45326ed734b</anchor>
      <arglist></arglist>
      <enumvalue file="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html" anchor="addfb751231d5814bcf24e45326ed734ba0bead920be987efd30dc627c3e1645bf">ASSET_CREATION</enumvalue>
      <enumvalue file="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html" anchor="addfb751231d5814bcf24e45326ed734ba6fdbd3c5909ab16b63f8b54440bafeab">ASSET_UPDATE</enumvalue>
      <enumvalue file="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html" anchor="addfb751231d5814bcf24e45326ed734ba63783e3d42bb76bd27bab2e015edf01b">ASSET_DELETION</enumvalue>
      <enumvalue file="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html" anchor="addfb751231d5814bcf24e45326ed734ba2c2686223461fa11d37be464976eca37">ASSET_TRANSFER</enumvalue>
      <enumvalue file="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html" anchor="addfb751231d5814bcf24e45326ed734ba113957f6ed7cae4b8b1dea2768a4a5f8">ASSET_VALIDATION</enumvalue>
      <enumvalue file="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html" anchor="addfb751231d5814bcf24e45326ed734ba62479f7cc8892714d48719f67cc696ae">METADATA_UPDATE</enumvalue>
      <enumvalue file="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html" anchor="addfb751231d5814bcf24e45326ed734ba4634460d7344cc33a43211ca6215f4f3">PERMISSION_UPDATE</enumvalue>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>operation_id</name>
      <anchorfile>df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>aaa6eaee15122a6d3b1a767f97422a703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>abab74815ad0f0b59cf5e4feba23e63f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>a79ac792d555c1c106cb2e65e8d3532a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error_message</name>
      <anchorfile>df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>a2cf6eab038573c8b865a6c1500ac46c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>attempt_count</name>
      <anchorfile>df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>a18bef3f438929cd8babdf3e1e4341f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>context</name>
      <anchorfile>df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>a78b4d8b63507cd0d9cc5ebe9c4bbaa98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::RecoveryOperation</name>
    <filename>db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html</anchorfile>
      <anchor>a5afa5bde8c54cf9e8fc913b34215abf4</anchor>
      <arglist></arglist>
      <enumvalue file="db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html" anchor="a5afa5bde8c54cf9e8fc913b34215abf4a37bb7846ea0b9dfc10d6ee157c15700e">BLOCK_VALIDATION</enumvalue>
      <enumvalue file="db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html" anchor="a5afa5bde8c54cf9e8fc913b34215abf4a1fd6dbfa430112d65cf0d73ea80993a1">TRANSACTION_VALIDATION</enumvalue>
      <enumvalue file="db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html" anchor="a5afa5bde8c54cf9e8fc913b34215abf4a855310b50ba23d3ce197107e1befe1d3">NETWORK_CONNECTION</enumvalue>
      <enumvalue file="db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html" anchor="a5afa5bde8c54cf9e8fc913b34215abf4aa140096b48b56c125a41de239d4d10c6">STATE_SYNC</enumvalue>
      <enumvalue file="db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html" anchor="a5afa5bde8c54cf9e8fc913b34215abf4acbab97e2fe4b87efe5dd2c800fe8f163">MINING_OPERATION</enumvalue>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html</anchorfile>
      <anchor>ab9a9ca733805fd6110ecd5bffce32a96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>operation_id</name>
      <anchorfile>db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html</anchorfile>
      <anchor>ac2f8de3a30875ac52d08bc053fd8bebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html</anchorfile>
      <anchor>a1218886a67d43eeb5941028064a5085b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error_message</name>
      <anchorfile>db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html</anchorfile>
      <anchor>a0309295da81fe609ed36f4cf1e4b3d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>attempt_count</name>
      <anchorfile>db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html</anchorfile>
      <anchor>a6bd46813e7e06205f0f036031675abc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>context</name>
      <anchorfile>db/d68/structsatox_1_1blockchain_1_1RecoveryOperation.html</anchorfile>
      <anchor>aa755cf8fe5cef3df6a6b5da288255718</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::RecoveryOperation</name>
    <filename>de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>aa53fb0f809595df2c1847ca1a9c997bf</anchor>
      <arglist></arglist>
      <enumvalue file="de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html" anchor="aa53fb0f809595df2c1847ca1a9c997bfa1fd6dbfa430112d65cf0d73ea80993a1">TRANSACTION_VALIDATION</enumvalue>
      <enumvalue file="de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html" anchor="aa53fb0f809595df2c1847ca1a9c997bfafd3abbb879bb633576e54adfb9506072">TRANSACTION_SIGNING</enumvalue>
      <enumvalue file="de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html" anchor="aa53fb0f809595df2c1847ca1a9c997bfaa6eb4fcd03e8d4952642a7a011ed6e5d">TRANSACTION_BROADCAST</enumvalue>
      <enumvalue file="de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html" anchor="aa53fb0f809595df2c1847ca1a9c997bfa9aad814e2ade5c79f8303daeaf45eeaf">UTXO_UPDATE</enumvalue>
      <enumvalue file="de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html" anchor="aa53fb0f809595df2c1847ca1a9c997bfa7d4cf887f110e79fa2cf4d5faa070c02">MEMPOOL_UPDATE</enumvalue>
      <enumvalue file="de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html" anchor="aa53fb0f809595df2c1847ca1a9c997bfafbd2a33360f98ab2d5d0cf3053796fb2">CACHE_UPDATE</enumvalue>
    </member>
    <member kind="variable">
      <type>Type</type>
      <name>type</name>
      <anchorfile>de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>a1f136e5cc1689a0e573f00381c749c70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>operation_id</name>
      <anchorfile>de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>aeff22aaffccec5020ec026498b539770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>a9270a111f7ed21517c3a0be23f07a34d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error_message</name>
      <anchorfile>de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>a47a8a89223d4700f71add62e54a5f978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>attempt_count</name>
      <anchorfile>de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>aa1546cd91d8da552feca1345bfb09aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>context</name>
      <anchorfile>de/d25/structsatox_1_1core_1_1TransactionManager_1_1RecoveryOperation.html</anchorfile>
      <anchor>af34d5a53d9f1d8703cba0312da7eb393</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::APIManager::Request</name>
    <filename>d1/d9e/structsatox_1_1core_1_1APIManager_1_1Request.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>method</name>
      <anchorfile>d1/d9e/structsatox_1_1core_1_1APIManager_1_1Request.html</anchorfile>
      <anchor>a0dba091a3f1d7e83b64bd3cc8697709f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>path</name>
      <anchorfile>d1/d9e/structsatox_1_1core_1_1APIManager_1_1Request.html</anchorfile>
      <anchor>a6b4f4029315ad1268539b37555e28601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>headers</name>
      <anchorfile>d1/d9e/structsatox_1_1core_1_1APIManager_1_1Request.html</anchorfile>
      <anchor>aa4ef6247773a208449695b5d629640db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>body</name>
      <anchorfile>d1/d9e/structsatox_1_1core_1_1APIManager_1_1Request.html</anchorfile>
      <anchor>af76383ddf6225227b932f29af25a96c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>client_ip</name>
      <anchorfile>d1/d9e/structsatox_1_1core_1_1APIManager_1_1Request.html</anchorfile>
      <anchor>ab125e0ffb8adc78b8c9d85c0d3594763</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::APIManager::Response</name>
    <filename>d4/d03/structsatox_1_1core_1_1APIManager_1_1Response.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>status_code</name>
      <anchorfile>d4/d03/structsatox_1_1core_1_1APIManager_1_1Response.html</anchorfile>
      <anchor>a364a7a882d6516264c1239e77e807853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>headers</name>
      <anchorfile>d4/d03/structsatox_1_1core_1_1APIManager_1_1Response.html</anchorfile>
      <anchor>afdd80aa7eae36e5da794edb211a1f04d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>body</name>
      <anchorfile>d4/d03/structsatox_1_1core_1_1APIManager_1_1Response.html</anchorfile>
      <anchor>a580cb8085d6e7b8d1b59f5addaa270ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::CertificateRevocation::RevocationConfig</name>
    <filename>d1/d11/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationConfig.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>enable_ocsp</name>
      <anchorfile>d1/d11/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationConfig.html</anchorfile>
      <anchor>a9b9c94976cab8b8deae2cc861ba93b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_crl</name>
      <anchorfile>d1/d11/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationConfig.html</anchorfile>
      <anchor>ad118ede6d10fa970b1c1305dde247ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ocsp_responder_url</name>
      <anchorfile>d1/d11/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationConfig.html</anchorfile>
      <anchor>a36edede40d2dc85a71877803c9cb536b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>crl_url</name>
      <anchorfile>d1/d11/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationConfig.html</anchorfile>
      <anchor>ac4d947b4db9aa4c55d6cb54dce65e391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>cache_duration</name>
      <anchorfile>d1/d11/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationConfig.html</anchorfile>
      <anchor>ad7cd586dff064912cf1d3e5deec7c967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>timeout</name>
      <anchorfile>d1/d11/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationConfig.html</anchorfile>
      <anchor>a40cc1507eb3da1b737d4a2870c02de95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::CertificateRevocation::RevocationStatus</name>
    <filename>da/de6/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationStatus.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>is_revoked</name>
      <anchorfile>da/de6/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationStatus.html</anchorfile>
      <anchor>a129026d0c398b528c1cf7c355cfb24eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>reason</name>
      <anchorfile>da/de6/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationStatus.html</anchorfile>
      <anchor>a47f60abcbda5895dc21102db3e66e44e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>revocation_time</name>
      <anchorfile>da/de6/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationStatus.html</anchorfile>
      <anchor>a3d37056e43046c03eec5371a0c7e13cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>check_time</name>
      <anchorfile>da/de6/structsatox_1_1network_1_1CertificateRevocation_1_1RevocationStatus.html</anchorfile>
      <anchor>a1af63dc2979f165029099accaa562446</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::RPCManager</name>
    <filename>d0/df0/classsatox_1_1RPCManager.html</filename>
    <member kind="function">
      <type></type>
      <name>RPCManager</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>a136b446d38dcc11c78c60de3998a5b7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RPCManager</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>ae685e8fee518a26a1250000c80ce9d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RPCManager</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>a1dc71f3ddd16f0fb0baa7f4a2428ddea</anchor>
      <arglist>(const RPCManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>RPCManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>a06112417fdb757ce38b6a48adb609680</anchor>
      <arglist>(const RPCManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RPCManager</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>a6b2b900150a55173ebb323939198b8b5</anchor>
      <arglist>(RPCManager &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>RPCManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>a30a2507795bb417e1526bc1a7a4328fa</anchor>
      <arglist>(RPCManager &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>a5207f497c703f93940fb4a00bba97c69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>ac9b59a29c3a5f437c6b6b9e7e0ec49ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>aa38475044123170eeeb301d1dd8aa823</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>handleRequest</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>a5da98867bb82106c055447bfc93eb1e1</anchor>
      <arglist>(const nlohmann::json &amp;request)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerMethod</name>
      <anchorfile>d0/df0/classsatox_1_1RPCManager.html</anchorfile>
      <anchor>a52fd275d21d7d999792b6617c7e0e20b</anchor>
      <arglist>(const std::string &amp;method, std::function&lt; nlohmann::json(const nlohmann::json &amp;)&gt; handler)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::NetworkManager::RPCRequest</name>
    <filename>da/dec/structsatox_1_1network_1_1NetworkManager_1_1RPCRequest.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>method</name>
      <anchorfile>da/dec/structsatox_1_1network_1_1NetworkManager_1_1RPCRequest.html</anchorfile>
      <anchor>a9de35782f6d7a14b5117e8071858f1aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>params</name>
      <anchorfile>da/dec/structsatox_1_1network_1_1NetworkManager_1_1RPCRequest.html</anchorfile>
      <anchor>a6a0e68eef1cd573080ec8f7b4889d316</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>da/dec/structsatox_1_1network_1_1NetworkManager_1_1RPCRequest.html</anchorfile>
      <anchor>a0ffe168e446b08313ca12ee4703e8ac1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::NetworkManager::RPCResponse</name>
    <filename>d8/d9d/structsatox_1_1network_1_1NetworkManager_1_1RPCResponse.html</filename>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>result</name>
      <anchorfile>d8/d9d/structsatox_1_1network_1_1NetworkManager_1_1RPCResponse.html</anchorfile>
      <anchor>aabbfab50d020521fac5c2d069360b7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d8/d9d/structsatox_1_1network_1_1NetworkManager_1_1RPCResponse.html</anchorfile>
      <anchor>a2412dc8ed87239e1f21abb514ddde7b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d8/d9d/structsatox_1_1network_1_1NetworkManager_1_1RPCResponse.html</anchorfile>
      <anchor>aee749a18cd8865714d4dfda8afaca702</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::SatoxManager</name>
    <filename>d8/def/classsatox_1_1core_1_1SatoxManager.html</filename>
    <class kind="struct">satox::core::SatoxManager::Stats</class>
    <class kind="struct">satox::core::SatoxManager::SystemInfo</class>
    <class kind="struct">satox::core::SatoxManager::SystemStats</class>
    <member kind="typedef">
      <type>std::function&lt; void(const SystemInfo &amp;)&gt;</type>
      <name>StateCallback</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a045fdede16f431916c7e66c72b151079</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>aef0f2d9b88917557eb7100ec32e353b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const SystemStats &amp;)&gt;</type>
      <name>StatsCallback</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a5f6ec9da68a7da95a8a9bb85cba006a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a4963e11a837dfa422113ecf7a2c912cc</anchor>
      <arglist>(const nlohmann::json &amp;config=nlohmann::json::object())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shutdown</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a0342598ab5d52dfff34359a3f3fac053</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerComponent</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a65f88365d31ab06634cb479ae135086e</anchor>
      <arglist>(const std::string &amp;name, std::shared_ptr&lt; T &gt; component)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>getComponent</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a0bb8853ea27a47cedd0058cdb9bf8c84</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasComponent</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a977bdfef7b5503ffe48325871f5768e1</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>af203d74f9df6110bfee18a67b75e6bfc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>clearLastError</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>aae8f73ab4a5a0edb8644791f4cc2f00b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a76e50cf9626923f4565c712f40af67cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a597df11e26b3e7325a4e89d253fa19d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pause</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a74ec2932da92b4a4fc14befb0bfcb8b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resume</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>ad92eca3c34f5f3d62fb662356ae38ffe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a3a0fe5be6bba7d8c8c2b2e72435638ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPaused</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a263dd7fcd7218969895661d8058c85e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>af01b43032bb9dc11f73e976a31a09bbe</anchor>
      <arglist>(const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; nlohmann::json &gt;</type>
      <name>getConfig</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>adde91ac6247b3b4b7f4e4c161926106c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>CoreManager &amp;</type>
      <name>getCoreManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a7d74a4ed6ed3ff9bb4a6ab7a43b89023</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NetworkManager &amp;</type>
      <name>getNetworkManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a62751482d2a9874595770176f91d009b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BlockchainManager &amp;</type>
      <name>getBlockchainManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a4a2b13a21dcab9433e2d995e190659c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TransactionManager &amp;</type>
      <name>getTransactionManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a67751fc0373a4ef36f9265ed697481b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AssetManager &amp;</type>
      <name>getAssetManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>ac6bfccbd08978aec73c542e8f501c4d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WalletManager &amp;</type>
      <name>getWalletManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a2a67d9c315a26015dfb6e074f52fa526</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IPFSManager &amp;</type>
      <name>getIPFSManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>aa275fec33a040465754a58534ea75fcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DatabaseManager &amp;</type>
      <name>getDatabaseManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a7dabd6f33eba4fc9ea3c0b4d48b83b48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SecurityManager &amp;</type>
      <name>getSecurityManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a5b60af69a0f12f9dedc1094671bb9cec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NFTManager &amp;</type>
      <name>getNFTManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>ab28dc972f3ffcff275e4778ef761d8ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PluginManager &amp;</type>
      <name>getPluginManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a25c63f6b5f5b90c36624b9f913a1568e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EventManager &amp;</type>
      <name>getEventManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a22823ce23bcf55f1f6499a33678db555</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CacheManager &amp;</type>
      <name>getCacheManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a5d5a55616a06520f608ba6834a125816</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConfigManager &amp;</type>
      <name>getConfigManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a43dc986a73b15d436f9bdd197f23c73e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LoggingManager &amp;</type>
      <name>getLoggingManager</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>ad85bd4e3722c3c82e1adbb261e2b7c7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; SystemInfo &gt;</type>
      <name>getSystemInfo</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a4d89cfb0e820a58cbcafa11cbb66531f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; ComponentStatus &gt;</type>
      <name>getComponentStatus</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>af2fc7e66fd8dd9afd97e23b8de8885c9</anchor>
      <arglist>(const std::string &amp;component) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getAvailableComponents</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a8c636312603e33b4cb01eab5cfdea6cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SystemStats</type>
      <name>getSystemStats</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a36b86c650d1f2bf2867952ec53cbb487</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a1acaea563dc8b1a040516fb7f68404bd</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetStats</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>aa2f535c3f4206c1592a9b34731a9be95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerStateCallback</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a391e74e9a3ee4b87d692b709248521dd</anchor>
      <arglist>(StateCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerErrorCallback</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a80d12f4b502e4d35012e75df2d720c08</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerStatsCallback</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a75cd8ad758999b29d201d6e9586ac119</anchor>
      <arglist>(StatsCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unregisterStateCallback</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a19e580fb8c9d2f07d289d6569993e3fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>af8a6704e447cace730fc673678d9e914</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unregisterStatsCallback</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a0d43634bdd665f00bbc643b10028e957</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateConfig</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>ad3ca99fd19480142831ba7efd8815334</anchor>
      <arglist>(const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reloadConfig</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a167c298b40116413ae7787c2b0457b68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stats</type>
      <name>getStats</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>aeada89919d87ad8c2507377f3fd3364d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a152fc1a1cd799cd48e9736a0200ec1cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SatoxManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d8/def/classsatox_1_1core_1_1SatoxManager.html</anchorfile>
      <anchor>a4d3f14dc8fc77fcaf84ffffebe2cb53f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::SecurityManager::SecurityConfig</name>
    <filename>d5/d72/structsatox_1_1core_1_1SecurityManager_1_1SecurityConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>network</name>
      <anchorfile>d5/d72/structsatox_1_1core_1_1SecurityManager_1_1SecurityConfig.html</anchorfile>
      <anchor>a952907ac15446c9329c1350fd823f737</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>key_length</name>
      <anchorfile>d5/d72/structsatox_1_1core_1_1SecurityManager_1_1SecurityConfig.html</anchorfile>
      <anchor>aee20ac1fabde0c051198d4666f728f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sessionTimeout</name>
      <anchorfile>d5/d72/structsatox_1_1core_1_1SecurityManager_1_1SecurityConfig.html</anchorfile>
      <anchor>ac7f1375a8178d385cb0a021f76dcb359</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::NetworkManager::SecurityConfig</name>
    <filename>d9/dc1/structsatox_1_1network_1_1NetworkManager_1_1SecurityConfig.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>enable_encryption</name>
      <anchorfile>d9/dc1/structsatox_1_1network_1_1NetworkManager_1_1SecurityConfig.html</anchorfile>
      <anchor>aea4a319962db0fa2c25364b4d9422c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_cert_path</name>
      <anchorfile>d9/dc1/structsatox_1_1network_1_1NetworkManager_1_1SecurityConfig.html</anchorfile>
      <anchor>aa83f17dd58edecba8003d028c12276b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_key_path</name>
      <anchorfile>d9/dc1/structsatox_1_1network_1_1NetworkManager_1_1SecurityConfig.html</anchorfile>
      <anchor>a8ca6188096e0e4cd5cf9ba7ac1d35a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ssl_ca_path</name>
      <anchorfile>d9/dc1/structsatox_1_1network_1_1NetworkManager_1_1SecurityConfig.html</anchorfile>
      <anchor>aa1399c9250f2d3a64aabc9f2c92600a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>verify_hostname</name>
      <anchorfile>d9/dc1/structsatox_1_1network_1_1NetworkManager_1_1SecurityConfig.html</anchorfile>
      <anchor>a25745f769b04da901571cbebfef04821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>min_protocol_version</name>
      <anchorfile>d9/dc1/structsatox_1_1network_1_1NetworkManager_1_1SecurityConfig.html</anchorfile>
      <anchor>a2c8ac701ce7050b20a5ab175077a9c71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>allowed_ciphers</name>
      <anchorfile>d9/dc1/structsatox_1_1network_1_1NetworkManager_1_1SecurityConfig.html</anchorfile>
      <anchor>a13bec1f480b6d0cee5cd11ed85b9f7d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::security::SecurityConfig</name>
    <filename>d2/d1e/structsatox_1_1security_1_1SecurityConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d2/d1e/structsatox_1_1security_1_1SecurityConfig.html</anchorfile>
      <anchor>a2bc352126ebd3857e20b5bef11401e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enablePQC</name>
      <anchorfile>d2/d1e/structsatox_1_1security_1_1SecurityConfig.html</anchorfile>
      <anchor>a4e00fd85a42da1f18e70faf572a46ab1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableInputValidation</name>
      <anchorfile>d2/d1e/structsatox_1_1security_1_1SecurityConfig.html</anchorfile>
      <anchor>a426ddac87ebe6e84914295145005a295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableRateLimiting</name>
      <anchorfile>d2/d1e/structsatox_1_1security_1_1SecurityConfig.html</anchorfile>
      <anchor>a750f492ebd49fead92293e8bce9d204f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLogging</name>
      <anchorfile>d2/d1e/structsatox_1_1security_1_1SecurityConfig.html</anchorfile>
      <anchor>a1c1c44d0383e879df7a4422fc07f5efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logPath</name>
      <anchorfile>d2/d1e/structsatox_1_1security_1_1SecurityConfig.html</anchorfile>
      <anchor>ad869b2d033d9c898f6101df4feb33422</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalConfig</name>
      <anchorfile>d2/d1e/structsatox_1_1security_1_1SecurityConfig.html</anchorfile>
      <anchor>ae8d22ffecbcaf5a9c6ad85c2711629e6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::security::SecurityEvent</name>
    <filename>df/d5d/structsatox_1_1security_1_1SecurityEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>SecurityEvent</name>
      <anchorfile>df/d5d/structsatox_1_1security_1_1SecurityEvent.html</anchorfile>
      <anchor>a755b08a311e2a657c76b1bc97275550f</anchor>
      <arglist>(const std::string &amp;t, const std::string &amp;s, const std::string &amp;d, SecurityLevel l)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>df/d5d/structsatox_1_1security_1_1SecurityEvent.html</anchorfile>
      <anchor>a358d695964c698d93a7f7e995bfa745c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>source</name>
      <anchorfile>df/d5d/structsatox_1_1security_1_1SecurityEvent.html</anchorfile>
      <anchor>aacde73b78ee263146386c1f5f72b444c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>df/d5d/structsatox_1_1security_1_1SecurityEvent.html</anchorfile>
      <anchor>a753b17f38f3805db6102161a12b28c1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SecurityLevel</type>
      <name>level</name>
      <anchorfile>df/d5d/structsatox_1_1security_1_1SecurityEvent.html</anchorfile>
      <anchor>aab3534cd81df187033db42c226af22b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>df/d5d/structsatox_1_1security_1_1SecurityEvent.html</anchorfile>
      <anchor>a265b901dbea381ba7daeeba5f6b58927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>df/d5d/structsatox_1_1security_1_1SecurityEvent.html</anchorfile>
      <anchor>a0b1374ba2c831d9340765ec85141b978</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::SecurityException</name>
    <filename>d5/dc0/classsatox_1_1security_1_1SecurityException.html</filename>
    <member kind="function">
      <type></type>
      <name>SecurityException</name>
      <anchorfile>d5/dc0/classsatox_1_1security_1_1SecurityException.html</anchorfile>
      <anchor>ad287bdf7ec4c342334b78374379a16f5</anchor>
      <arglist>(SecurityErrorCode code, const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>d5/dc0/classsatox_1_1security_1_1SecurityException.html</anchorfile>
      <anchor>aa423b54596ef33308d7d3208cbb33c3a</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>SecurityErrorCode</type>
      <name>code</name>
      <anchorfile>d5/dc0/classsatox_1_1security_1_1SecurityException.html</anchorfile>
      <anchor>ac03a79c916b0fef5280c07a5e7beabe0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>message</name>
      <anchorfile>d5/dc0/classsatox_1_1security_1_1SecurityException.html</anchorfile>
      <anchor>a1d135fe272390b4b6b85483a9fd0d738</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::SecurityInitializationException</name>
    <filename>d3/d4f/classsatox_1_1security_1_1SecurityInitializationException.html</filename>
    <base>satox::security::SecurityException</base>
    <member kind="function">
      <type></type>
      <name>SecurityInitializationException</name>
      <anchorfile>d3/d4f/classsatox_1_1security_1_1SecurityInitializationException.html</anchorfile>
      <anchor>acc337ff1f4755eb7d97c9320f4c7b9c4</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::SecurityManager</name>
    <filename>d0/df7/classsatox_1_1core_1_1SecurityManager.html</filename>
    <class kind="struct">satox::core::SecurityManager::SecurityConfig</class>
    <class kind="struct">satox::core::SecurityManager::SecurityStats</class>
    <member kind="enumeration">
      <type></type>
      <name>SecurityLevel</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>ad4d0506c85787774aa8e97d542610a10</anchor>
      <arglist></arglist>
      <enumvalue file="d0/df7/classsatox_1_1core_1_1SecurityManager.html" anchor="ad4d0506c85787774aa8e97d542610a10a41bc94cbd8eebea13ce0491b2ac11b88">LOW</enumvalue>
      <enumvalue file="d0/df7/classsatox_1_1core_1_1SecurityManager.html" anchor="ad4d0506c85787774aa8e97d542610a10ac87f3be66ffc3c0d4249f1c2cc5f3cce">MEDIUM</enumvalue>
      <enumvalue file="d0/df7/classsatox_1_1core_1_1SecurityManager.html" anchor="ad4d0506c85787774aa8e97d542610a10ab89de3b4b81c4facfac906edf29aec8c">HIGH</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, SecurityLevel)&gt;</type>
      <name>SecurityCallback</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>aca60ec128a81f602dadcbf423447f931</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt;</type>
      <name>AuditCallback</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a7faa235379c80c16507cca02ce1f7e6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SecurityManager</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a8c5ad7028d5777f4032d69315d85b6ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SecurityManager</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a1644350b3df120db31db2257f9dbd06e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>ab3c6552ea3709879f529e722d184553c</anchor>
      <arglist>(const SecurityConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>ae3bfd31a98cc8966da64c3efe397dd15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generateKeyPair</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a8d30b8b6ae3953abb63aaca506356ed1</anchor>
      <arglist>(const std::string &amp;key_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateKey</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a79118511a5fc0c1fff4e6465b0d1b362</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>storeKey</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a4507f1109bbadfb38ccfb62cc2e18126</anchor>
      <arglist>(const std::string &amp;keyId, const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getKey</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a604340549d66066effd1f46ad17ff349</anchor>
      <arglist>(const std::string &amp;keyId)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generateKey</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a20d8ec2be8f6d5f18e744868b205b8b5</anchor>
      <arglist>(int length)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>sign</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a4afab2c03c0223691d4cb403793a6eb7</anchor>
      <arglist>(const std::string &amp;key_id, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verify</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>acbc4791b4176fe5ebae812b22e8b04e3</anchor>
      <arglist>(const std::string &amp;key_id, const std::string &amp;data, const std::string &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>encrypt</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a5cbe9f4f0ccbde74521d80983e33756e</anchor>
      <arglist>(const std::string &amp;key_id, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; std::string &gt;</type>
      <name>decrypt</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a13e9a460296a092269543dfb601d4a23</anchor>
      <arglist>(const std::string &amp;key_id, const std::string &amp;encrypted_data)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>encrypt</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>ad7b9ebeb63dbeb56570a48e98c1a66fd</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data, const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>decrypt</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>afecb974db80ded20922fbb45c13b8f7c</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data, const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>encryptString</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a7d2c728e978ed44e55c3bbfc0edf5fd4</anchor>
      <arglist>(const std::string &amp;data, const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>decryptString</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>aeaeab4a379d375d816903965cc117d5f</anchor>
      <arglist>(const std::string &amp;data, const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>authenticate</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a5a547cc445a968171d6f3dd8dea77c36</anchor>
      <arglist>(const std::string &amp;username, const std::string &amp;password)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateSession</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>ada14ada74c1f442f4833e44454403ee5</anchor>
      <arglist>(const std::string &amp;sessionId)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createSession</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a9f92b94782183a6acda062b7eea128c1</anchor>
      <arglist>(const std::string &amp;username)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateSession</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a1bdce2f3de6f463486f73b7ad6c3d8d9</anchor>
      <arglist>(const std::string &amp;sessionId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSessionExpired</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a9d6155b94f42efbb791d976b013bef83</anchor>
      <arglist>(const std::string &amp;sessionId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cleanupExpiredSessions</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a662efaa06f0bcefd9932d2fe9259ee64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateInput</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a01a7ffcb363bba42102b8a3963acf554</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkPermission</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>aed0084937eb09ba55ac7b59c4eb9871c</anchor>
      <arglist>(const std::string &amp;user, const std::string &amp;resource)</arglist>
    </member>
    <member kind="function">
      <type>SecurityLevel</type>
      <name>getSecurityLevel</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>ac7e2cff1b4ee6d073f73df9d019e07c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSecurityLevel</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>ab5bb9d772b07507450fbcecc42615f15</anchor>
      <arglist>(SecurityLevel level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logEvent</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a1d43424efce3b0644bf2884250cafa38</anchor>
      <arglist>(const std::string &amp;event, const std::string &amp;details)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>getAuditLog</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a82bbeb987fc592143fd9e2f9b68c09d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAuditLog</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>af09a6e5b65425a3c253775f72411df41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSecurityCallback</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a2306c0c90803cc3500b3ccea24042e9b</anchor>
      <arglist>(SecurityCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAuditCallback</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a26d69bab8309b66986e9e4d136f7c4e9</anchor>
      <arglist>(AuditCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterSecurityCallback</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>aa6fe174ded06b9130f34abb882c1ed45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterAuditCallback</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a17d788ef0b1a7f1552c57b1cca4d6c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifySecurityEvent</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>abd4f6534f5f5b49506545bb86467b8d1</anchor>
      <arglist>(const std::string &amp;event, SecurityLevel level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>notifyAuditEvent</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a9abf8572d56167deb057cb4b1d8f22ee</anchor>
      <arglist>(const std::string &amp;event, const std::string &amp;details)</arglist>
    </member>
    <member kind="function">
      <type>SecurityStats</type>
      <name>getStats</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a9e40fe4fb087d6df8256747c4478834f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>aca23da79d31ade1f7068e963b02dccbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SecurityConfig</type>
      <name>getConfig</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a0386bbda7efbf6dda27882ac2fa9a1ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateConfig</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>a7dde6b6997e20ba50ab3fa88c5a879ac</anchor>
      <arglist>(const SecurityConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>ae43b4f72b842fc58ca50d398302f727f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLastError</name>
      <anchorfile>d0/df7/classsatox_1_1core_1_1SecurityManager.html</anchorfile>
      <anchor>acfae6cf777c1f27526fbf6f764bff440</anchor>
      <arglist>(const std::string &amp;error)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::SecurityManager</name>
    <filename>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</filename>
    <class kind="class">satox::security::SecurityManager::Impl</class>
    <member kind="function">
      <type></type>
      <name>SecurityManager</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a90b8c92e3c3fee633661fa2e92cd7b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SecurityManager</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a82a37a99f5179a1d2b33678f9d7c3a67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ae7341bc641d88f5555375fbc5e938a74</anchor>
      <arglist>(const SecurityConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>aee0804ae0fa9e4c4dec642324f2f9255</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>start</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a5a10fdba165e1657eb561b2d2bcc7d8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stop</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ab9550af1a060d4a1efd0a14d9956b894</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>performOperation</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ac90a0151720d2e6f35ae52121ba4aad2</anchor>
      <arglist>(const std::string &amp;operation, const nlohmann::json &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>SecurityResult</type>
      <name>executeOperation</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a9b92726165368812f76386b0e8a1f172</anchor>
      <arglist>(const std::string &amp;operation, const nlohmann::json &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateOperation</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>af1e4bd4e86d01d4feb010d12419da132</anchor>
      <arglist>(const std::string &amp;operation, const nlohmann::json &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>SecurityState</type>
      <name>getState</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>adcde43192466003461763c5664df72fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>aca410ec0fd030f19533a5e88f0e08728</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a5a1b12e4922884b2aebba0b05bbfd4f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a2fd33ec6765ee706edd23979e4b88cbd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>SecurityConfig</type>
      <name>getConfig</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a5001c162f10620ff74d950de600ab3bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateConfig</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ac6ad2f91859c2847c8825c73b9cc8df5</anchor>
      <arglist>(const SecurityConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateConfig</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a3db98afe2c7c70fe8f1f8f62aee694e4</anchor>
      <arglist>(const SecurityConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>SecurityStats</type>
      <name>getStats</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a10c9d6811e7627258f9069e4c6d2e9d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>aac1e78a28ec90bcfa6d0f92bac0bc1b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>abe7703bfd4ffee20dc171f683b52653e</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSecurityCallback</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a43dd835481d7a3a5f3978fa1d3e67c19</anchor>
      <arglist>(SecurityCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerViolationCallback</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ad6b1f9cb19bfae1d044b4efe62e312be</anchor>
      <arglist>(SecurityViolationCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterSecurityCallback</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>af50a81cb2d8249d9a5f77acaf493934b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterViolationCallback</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ada9b31659d241fe1548348d8229081b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a49d646160e2527a59add05e19d144a39</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ace86ab09483df24baebb3abbf05d244e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>healthCheck</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a63b68f8c2fe21d94f8069689a1b6039d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>getHealthStatus</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a95fb4d27f1282d5eb088fbd89e98a7f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>generatePQCKeyPair</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a310bdfb3ccb92d78c963eff5a4e50dac</anchor>
      <arglist>(const std::string &amp;algorithm)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>signWithPQC</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a3219a5d246bf5d141787dd0479b3371c</anchor>
      <arglist>(const std::string &amp;algorithm, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyWithPQC</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a6a1eab9aa35832b8d0f77a3aec291b3b</anchor>
      <arglist>(const std::string &amp;algorithm, const std::string &amp;data, const std::string &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>encryptWithPQC</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a133063a3bf5aee726a62453b801dd1ad</anchor>
      <arglist>(const std::string &amp;algorithm, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>decryptWithPQC</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ad910d464f50094d0a5b12d8874133f42</anchor>
      <arglist>(const std::string &amp;algorithm, const std::string &amp;encryptedData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateInput</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ac385b8d99612adea7ad9919f077f8a2f</anchor>
      <arglist>(const std::string &amp;input, const std::string &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sanitizeInput</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ae6dec645ce0ae0b69111655c07f26f5a</anchor>
      <arglist>(const std::string &amp;input, std::string &amp;sanitized)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateEmail</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a4be71fc3f1ae9e3ab530812fee1bce22</anchor>
      <arglist>(const std::string &amp;email)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateURL</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a2efebfb7d306a92e7855b8e2bcf2c896</anchor>
      <arglist>(const std::string &amp;url)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateIPAddress</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a84c1a1aa1436b6def7c27fbc498f411f</anchor>
      <arglist>(const std::string &amp;ip)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateJson</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a053ea59de1a14d97f0cf1b72ad1a945c</anchor>
      <arglist>(const std::string &amp;json)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateToken</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>aca407efef8522d55dc4773b8063e2244</anchor>
      <arglist>(const std::string &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkRateLimit</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>afb5ae171101eb541410c5627c2a00903</anchor>
      <arglist>(const std::string &amp;identifier, const std::string &amp;operation)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setRateLimit</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>ad9de8b2122de9dc99010a6b356bd89e2</anchor>
      <arglist>(const std::string &amp;identifier, int maxRequests, int timeWindow)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>resetRateLimit</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a672f9c3917ccecf3ff1f4c9b6f92ac28</anchor>
      <arglist>(const std::string &amp;identifier)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setPerformanceConfig</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a3acde86e691f94c5aea3260d09030ac0</anchor>
      <arglist>(const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCacheSize</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a904e18fa597537465d2d62b9af7e396a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getConnectionPoolSize</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>afc1c35f1ea9108ed603f09aa190d33cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getBatchSize</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>a2d407b8823bc3d5715e886e3574fbfc7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SecurityManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>dc/d9e/classsatox_1_1security_1_1SecurityManager.html</anchorfile>
      <anchor>aa15090f08e4d58997a55723551b7a3f4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::monitoring::SecurityMonitor</name>
    <filename>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</filename>
    <member kind="function">
      <type>void</type>
      <name>recordOperation</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>ab3f1dcba1539553d60f6480a040f475b</anchor>
      <arglist>(const std::string &amp;operation, const std::chrono::milliseconds &amp;duration, bool success)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordKeyOperation</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>a4b9861bb77258d624a58015d28159e5c</anchor>
      <arglist>(const std::string &amp;operation, const std::string &amp;keyId, bool success)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordCacheOperation</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>af7cd3cd2fe524ecf7964fc9f65e37bb7</anchor>
      <arglist>(const std::string &amp;operation, bool hit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordResourceUsage</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>a82e35537c857f9d1324d768327af4380</anchor>
      <arglist>(size_t memoryUsage, double cpuUsage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordError</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>ad5972ad31dd1fce6ac8ee83704687449</anchor>
      <arglist>(const std::string &amp;operation, const std::string &amp;errorType)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAverageOperationTime</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>a7b721df2b4d8382aa158b583615e8b5e</anchor>
      <arglist>(const std::string &amp;operation) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getOperationSuccessRate</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>a0f890bf9de5c002880a5d5497d4d0a92</anchor>
      <arglist>(const std::string &amp;operation) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCacheHitRate</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>a0ba1d1630c101fc951dfbd03ec7f3cdc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCurrentMemoryUsage</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>acdad567fcb3cc2b38a1d3658323c4664</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentCpuUsage</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>ac164268a7017457ff562731af887b6e1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getErrorCount</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>ab687cc47d0a77664163473492fe2a8b1</anchor>
      <arglist>(const std::string &amp;operation) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>exportMetrics</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>ab40e2cc4db717f38985d90a0e4702f5f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>exportToPrometheus</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>af5335d2902c929e4ec2dc768472e628c</anchor>
      <arglist>(const std::string &amp;endpoint)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SecurityMonitor &amp;</type>
      <name>getInstance</name>
      <anchorfile>d0/d48/classsatox_1_1security_1_1monitoring_1_1SecurityMonitor.html</anchorfile>
      <anchor>a36cb40cff4bec5b5b0fd37f263b02c94</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::security::SecurityResult</name>
    <filename>d1/d71/structsatox_1_1security_1_1SecurityResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d1/d71/structsatox_1_1security_1_1SecurityResult.html</anchorfile>
      <anchor>a2976f179947e3972f99a25f3c67f02f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d1/d71/structsatox_1_1security_1_1SecurityResult.html</anchorfile>
      <anchor>ab5f2129b5d150386ccc44e6ab4726c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>d1/d71/structsatox_1_1security_1_1SecurityResult.html</anchorfile>
      <anchor>ad318d0d5f442ffbd498d3f134f2b8087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>duration</name>
      <anchorfile>d1/d71/structsatox_1_1security_1_1SecurityResult.html</anchorfile>
      <anchor>a2bcea8e237de09164d790fcca8c32b8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::SecurityManager::SecurityStats</name>
    <filename>d5/d6c/structsatox_1_1core_1_1SecurityManager_1_1SecurityStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>totalEncryptions</name>
      <anchorfile>d5/d6c/structsatox_1_1core_1_1SecurityManager_1_1SecurityStats.html</anchorfile>
      <anchor>ab1b9d6835f3579de31cdc5b73529c5f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>totalDecryptions</name>
      <anchorfile>d5/d6c/structsatox_1_1core_1_1SecurityManager_1_1SecurityStats.html</anchorfile>
      <anchor>a80666b72ee2e69267db2729bd47ee8de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>totalAuths</name>
      <anchorfile>d5/d6c/structsatox_1_1core_1_1SecurityManager_1_1SecurityStats.html</anchorfile>
      <anchor>ae80fe5979eb47f622232c6243e756886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>successfulLogins</name>
      <anchorfile>d5/d6c/structsatox_1_1core_1_1SecurityManager_1_1SecurityStats.html</anchorfile>
      <anchor>af23484f60796f4bb884a0b64a4cbef63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>failedAttempts</name>
      <anchorfile>d5/d6c/structsatox_1_1core_1_1SecurityManager_1_1SecurityStats.html</anchorfile>
      <anchor>aea1b72c8b7132e19160cf5b6eaf8f996</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::security::SecurityStats</name>
    <filename>db/d75/structsatox_1_1security_1_1SecurityStats.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>totalOperations</name>
      <anchorfile>db/d75/structsatox_1_1security_1_1SecurityStats.html</anchorfile>
      <anchor>a1d2ec17ccb07704669471318028017d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>successfulOperations</name>
      <anchorfile>db/d75/structsatox_1_1security_1_1SecurityStats.html</anchorfile>
      <anchor>a55324d37f8d0b7152a8d1bbde2e2d8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>failedOperations</name>
      <anchorfile>db/d75/structsatox_1_1security_1_1SecurityStats.html</anchorfile>
      <anchor>a7595e941d2b08b348a962dc98e400ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>securityViolations</name>
      <anchorfile>db/d75/structsatox_1_1security_1_1SecurityStats.html</anchorfile>
      <anchor>a75ccb5ce6cde01a19f922983fb75e4ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pqcOperations</name>
      <anchorfile>db/d75/structsatox_1_1security_1_1SecurityStats.html</anchorfile>
      <anchor>acb3f0ac2e219b680dfae676b141794fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>validationOperations</name>
      <anchorfile>db/d75/structsatox_1_1security_1_1SecurityStats.html</anchorfile>
      <anchor>a41666c94593f6df9e8b19bb3ef203e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastOperation</name>
      <anchorfile>db/d75/structsatox_1_1security_1_1SecurityStats.html</anchorfile>
      <anchor>a6cc8d87fe071da268fc323d80b0527d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>averageOperationTime</name>
      <anchorfile>db/d75/structsatox_1_1security_1_1SecurityStats.html</anchorfile>
      <anchor>a2e5a76951b80a06e3687f3b10130ca42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>db/d75/structsatox_1_1security_1_1SecurityStats.html</anchorfile>
      <anchor>a04fd7bb0424a4ffc4d2259f7ffefd307</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::SecurityViolationException</name>
    <filename>d9/d6f/classsatox_1_1security_1_1SecurityViolationException.html</filename>
    <base>satox::security::SecurityException</base>
    <member kind="function">
      <type></type>
      <name>SecurityViolationException</name>
      <anchorfile>d9/d6f/classsatox_1_1security_1_1SecurityViolationException.html</anchorfile>
      <anchor>a2166d01b1f9951d069a2329bfe58e88f</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::asset::SimpleLogger</name>
    <filename>d5/d82/classsatox_1_1asset_1_1SimpleLogger.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>debug</name>
      <anchorfile>d5/d82/classsatox_1_1asset_1_1SimpleLogger.html</anchorfile>
      <anchor>a2267a7ef636dfaa3109dba09ca79fca0</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>info</name>
      <anchorfile>d5/d82/classsatox_1_1asset_1_1SimpleLogger.html</anchorfile>
      <anchor>a39e82a4439789de04eb9a1ed33219edc</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>warn</name>
      <anchorfile>d5/d82/classsatox_1_1asset_1_1SimpleLogger.html</anchorfile>
      <anchor>a037a74de77f35424cad251116277b44a</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>error</name>
      <anchorfile>d5/d82/classsatox_1_1asset_1_1SimpleLogger.html</anchorfile>
      <anchor>ab02a7d53d3c451df6552322123b6ed00</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::BlockchainManager::Stats</name>
    <filename>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</filename>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalBlocks</name>
      <anchorfile>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</anchorfile>
      <anchor>aac7882a05bfbb341dd4dc7b6a8388b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalTransactions</name>
      <anchorfile>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</anchorfile>
      <anchor>a2cc81b3a85c8bc252364c4ac1768980c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>currentConnections</name>
      <anchorfile>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</anchorfile>
      <anchor>a27075377ed8bb4082c8077edd025cafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>totalConnections</name>
      <anchorfile>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</anchorfile>
      <anchor>ad2efcfb5d68f683e5b993d9fc595fa9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastBlock</name>
      <anchorfile>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</anchorfile>
      <anchor>a652767c92962e483e385b1529be24d46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastActivity</name>
      <anchorfile>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</anchorfile>
      <anchor>a905b8060eec4907855133b687a8fd21e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>difficulty</name>
      <anchorfile>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</anchorfile>
      <anchor>aaedceff053cb91d0bcb098e14d1c2696</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>networkHashrate</name>
      <anchorfile>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</anchorfile>
      <anchor>afba239a80a4056f4e217be739bd35855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mempoolSize</name>
      <anchorfile>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</anchorfile>
      <anchor>a564acfe4e71631b52fef68bc6989769f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mempoolTransactions</name>
      <anchorfile>d7/d42/structsatox_1_1core_1_1BlockchainManager_1_1Stats.html</anchorfile>
      <anchor>a42ccc5772bb644b2be489d6c4bb1f730</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::ConfigManager::Stats</name>
    <filename>d7/dd2/structsatox_1_1core_1_1ConfigManager_1_1Stats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>total_sections</name>
      <anchorfile>d7/dd2/structsatox_1_1core_1_1ConfigManager_1_1Stats.html</anchorfile>
      <anchor>a4af645769b949dffeba2c844c4eec355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>total_values</name>
      <anchorfile>d7/dd2/structsatox_1_1core_1_1ConfigManager_1_1Stats.html</anchorfile>
      <anchor>a3b4d01a3be319aa9ba0d69b34af29a8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>load_count</name>
      <anchorfile>d7/dd2/structsatox_1_1core_1_1ConfigManager_1_1Stats.html</anchorfile>
      <anchor>a135f37c183861304e9cdf106adc10c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>save_count</name>
      <anchorfile>d7/dd2/structsatox_1_1core_1_1ConfigManager_1_1Stats.html</anchorfile>
      <anchor>a96fe0213c8eb71e5c2c7f1b95e1c503f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_load</name>
      <anchorfile>d7/dd2/structsatox_1_1core_1_1ConfigManager_1_1Stats.html</anchorfile>
      <anchor>ad988694515cd1bad4dffe0694e045893</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_save</name>
      <anchorfile>d7/dd2/structsatox_1_1core_1_1ConfigManager_1_1Stats.html</anchorfile>
      <anchor>a2b98b130cb6ba10d4d94e2ffda2da719</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::SatoxManager::Stats</name>
    <filename>d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>total_components</name>
      <anchorfile>d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats.html</anchorfile>
      <anchor>a8be12036b3875f82a115e02c84fc886e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>active_components</name>
      <anchorfile>d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats.html</anchorfile>
      <anchor>a74505d4afdbb9735f07019debdc701ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>failed_components</name>
      <anchorfile>d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats.html</anchorfile>
      <anchor>abdda38826a61df8af4b9b2e2692de5f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>start_time</name>
      <anchorfile>d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats.html</anchorfile>
      <anchor>a262752bb7bf89929139a661ee89ac601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_activity</name>
      <anchorfile>d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats.html</anchorfile>
      <anchor>abb7aa07a0fdae030464308e0c5d1393f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, nlohmann::json &gt;</type>
      <name>component_stats</name>
      <anchorfile>d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats.html</anchorfile>
      <anchor>a6dc8a6f3c63331bf68091bdf1affa1d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::Stats</name>
    <filename>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>totalTransactions</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>a81f0241718ecc5be0027b18b1b5ebdf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pendingTransactions</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>aafad41a6736c8454c05d90b8970be97e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>activeTransactions</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>a75f491edaa7c1d5fd797e9501d71eddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>completedTransactions</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>a0ac464578e4fc8751fe04dd7f3e9fb23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>failedTransactions</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>a1b761e2eb8f54d64607580eb2e8d9542</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>cancelledTransactions</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>aa2388ee5b939226fea9e8599b6060c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalVolume</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>ad4d15b9b209f518629acd51df0673fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalFees</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>a6e4d80565c87d2c1f5cb607e1db82758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>maxTransactions</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>aab1d5a920c86ff9d3d85dcc557320b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>maxConcurrent</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>aa0763dee25c0d5dd42703e64c144eac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::time_t</type>
      <name>lastUpdate</name>
      <anchorfile>df/d9b/structsatox_1_1core_1_1TransactionManager_1_1Stats.html</anchorfile>
      <anchor>a241c2f206465c9a9e50095de199cb4c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::EventManager::Subscription</name>
    <filename>da/d0d/structsatox_1_1core_1_1EventManager_1_1Subscription.html</filename>
    <member kind="variable">
      <type>SubscriptionToken</type>
      <name>token</name>
      <anchorfile>da/d0d/structsatox_1_1core_1_1EventManager_1_1Subscription.html</anchorfile>
      <anchor>af8178e2c4c8c4c948873f7ff1330e727</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventHandler</type>
      <name>handler</name>
      <anchorfile>da/d0d/structsatox_1_1core_1_1EventManager_1_1Subscription.html</anchorfile>
      <anchor>aeb4a7b8b483824333dc7035d1446502f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventFilter</type>
      <name>filter</name>
      <anchorfile>da/d0d/structsatox_1_1core_1_1EventManager_1_1Subscription.html</anchorfile>
      <anchor>a5b3fdd5fc91e5461869e4f077ad654dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>async</name>
      <anchorfile>da/d0d/structsatox_1_1core_1_1EventManager_1_1Subscription.html</anchorfile>
      <anchor>ade9c94e4718257d398dcddc4528432cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>timeout</name>
      <anchorfile>da/d0d/structsatox_1_1core_1_1EventManager_1_1Subscription.html</anchorfile>
      <anchor>ae9ee95b9f8224be7f2dea907bdc83297</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::SupabaseConfig</name>
    <filename>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</filename>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>a7cbc5453d417745c59716890701b49a3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>af87c8b7e89880d0c108bbd3be791e2b2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SupabaseConfig</type>
      <name>fromJson</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>a1b74c0acddaa58e40e6ea9e3d7c96c39</anchor>
      <arglist>(const nlohmann::json &amp;j)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>url</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>ab261f16b4c72d999cab54140a3aeecc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>anon_key</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>a9bf473a41d187ce6a7414fc9d85d7240</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>service_role_key</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>a2770524c9dc3981a5aeac2d355548350</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>database_url</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>a3604303d7c2f12e72b0f2ce4f1cdf3a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_realtime</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>ab95ce8fbbf00f5d44a35f4d68b235f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>connection_timeout</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>acd60964358abd844f3cdfdf932ec7853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>auth_scheme</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>a11978a342a2d7c40e36b17301540c676</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_ssl</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>a1a8a23060f75c067456725a16009411a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>schema</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>aab37d3840f45229a06354be241d64ae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_connections</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>aeb9ab45fde73b3938c266585213052b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_logging</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>a52a027f30d20a0c21e22f2b24d8de43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>log_level</name>
      <anchorfile>d9/d9c/structsatox_1_1core_1_1SupabaseConfig.html</anchorfile>
      <anchor>a0d806b0fe1487216f2ba5a0bf37cae2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::SupabaseConnection</name>
    <filename>d2/d6d/structsatox_1_1core_1_1SupabaseConnection.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d2/d6d/structsatox_1_1core_1_1SupabaseConnection.html</anchorfile>
      <anchor>abedcb0a13c64371fa99f348f9d2d5ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SupabaseConfig</type>
      <name>config</name>
      <anchorfile>d2/d6d/structsatox_1_1core_1_1SupabaseConnection.html</anchorfile>
      <anchor>a4e2c8f9a12aba0a7659209b9afd6d93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CURL *</type>
      <name>curl_handle</name>
      <anchorfile>d2/d6d/structsatox_1_1core_1_1SupabaseConnection.html</anchorfile>
      <anchor>a31470e0e0cf9c3f34da606f9ac45c67b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>connected</name>
      <anchorfile>d2/d6d/structsatox_1_1core_1_1SupabaseConnection.html</anchorfile>
      <anchor>ae6408bc3822be51c899ae43102613286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_activity</name>
      <anchorfile>d2/d6d/structsatox_1_1core_1_1SupabaseConnection.html</anchorfile>
      <anchor>ad8ec1c01beb14c1a7c41b3d9e08fa3d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::function&lt; void(const nlohmann::json &amp;)&gt; &gt;</type>
      <name>subscriptions</name>
      <anchorfile>d2/d6d/structsatox_1_1core_1_1SupabaseConnection.html</anchorfile>
      <anchor>aa016b1ba009746aea364aa41127dc193</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::SupabaseManager</name>
    <filename>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</filename>
    <class kind="struct">satox::core::SupabaseManager::Impl</class>
    <member kind="function">
      <type></type>
      <name>SupabaseManager</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>a0f7028565e6ce7b2e070c6ef680ec816</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SupabaseManager</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>afa5529914dd1fa5973332561b840af7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>a0017daee165a7ce2c8d6fcf06d43072f</anchor>
      <arglist>(const SupabaseConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>connect</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>a81307bb776901dd2f017b91b50adeeae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>ac4566361261ad2ba745bc9387250b3d4</anchor>
      <arglist>(const std::string &amp;connection_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>executeQuery</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>afadfff0ab2fd112a6ab78c98fd17d651</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;query, const nlohmann::json &amp;params, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>executeTransaction</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>a665300a18cf8ca75563c4b746f84343a</anchor>
      <arglist>(const std::string &amp;connection_id, const std::vector&lt; std::string &gt; &amp;queries, nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>subscribe</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>ae7b76047c92f2d600780409a1f0394b2</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;table, std::function&lt; void(const nlohmann::json &amp;)&gt; callback)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unsubscribe</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>a2ba6c044e5f392607b96c947a110b093</anchor>
      <arglist>(const std::string &amp;connection_id, const std::string &amp;subscription_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>acdc7e205cb4e56706144ae981856f3a2</anchor>
      <arglist>(const std::string &amp;connection_id) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>ac923ae05f40008f9bec53fab442ee36d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearError</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>aa8ef72d102bd726a3599890912c3ec05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d4/d3f/classsatox_1_1core_1_1SupabaseManager.html</anchorfile>
      <anchor>ac5186e10873ad83f4e0e9e54f4f13b56</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::SatoxManager::SystemInfo</name>
    <filename>d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo.html</anchorfile>
      <anchor>a008f8ab46b365e7373dc714886b6c5cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>running</name>
      <anchorfile>d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo.html</anchorfile>
      <anchor>ac54fbac08646af383e95001cdae2f90a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>paused</name>
      <anchorfile>d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo.html</anchorfile>
      <anchor>a184430c008bfd5205cad1da1b0a734d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo.html</anchorfile>
      <anchor>afed023fb01e6a04a3faba8770b4b7eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>build</name>
      <anchorfile>d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo.html</anchorfile>
      <anchor>ac8852cdab4327d08542b74c5904e034b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, bool &gt;</type>
      <name>managerStatus</name>
      <anchorfile>d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo.html</anchorfile>
      <anchor>a3e3ac2c6fee28d9da1482079261c85c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::SystemInfo</name>
    <filename>d4/df5/structsatox_1_1core_1_1SystemInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1SystemInfo.html</anchorfile>
      <anchor>a7d77738b0c60f3bf0cb36e7352211e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>network</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1SystemInfo.html</anchorfile>
      <anchor>ad2b7bdbf99167e83265b7d7d32e193c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>uptime</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1SystemInfo.html</anchorfile>
      <anchor>a813f394c5c05f966aeefcd109b638162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>start_time</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1SystemInfo.html</anchorfile>
      <anchor>a75b4606f80f6bcbf9513175d002d8b2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>d4/df5/structsatox_1_1core_1_1SystemInfo.html</anchorfile>
      <anchor>ab5e9726df742aab14316fb3d0f180f48</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::SatoxManager::SystemStats</name>
    <filename>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</filename>
    <member kind="variable">
      <type>uint64_t</type>
      <name>uptime</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>ab15037d42d0e7d073ea162567d36cc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalEvents</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>a5fffb13de6303cc9312676c087aa94a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalTransactions</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>a1a577b37458b23202a3b7dcc83834bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalAssets</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>a6780bd8b6814645c7e0696580c9304da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>totalNFTs</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>a5cb8f3e5594bd08ef0bd31f54864d0ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, nlohmann::json &gt;</type>
      <name>managerStats</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>aa50e59aeb42390a855d5ed38bd8b0b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>total_components</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>a81a74f4ca2f851878076032b41e2aa78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>active_components</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>a06b3c6aa1641664d2ba0330888bc4391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>failed_components</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>a9419c60376a99837d4dd19e433c656c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_activity</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>a9d1f6badf722a1bb6ee62a5954b4dec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>start_time</name>
      <anchorfile>d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats.html</anchorfile>
      <anchor>a7b3e45c28392a7469ceeee0af7f63354</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::TableData</name>
    <filename>d6/d2d/structsatox_1_1database_1_1TableData.html</filename>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>schema</name>
      <anchorfile>d6/d2d/structsatox_1_1database_1_1TableData.html</anchorfile>
      <anchor>a3b4aab964b6047a4338acccbaeb68a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>records</name>
      <anchorfile>d6/d2d/structsatox_1_1database_1_1TableData.html</anchorfile>
      <anchor>adb50fbe1712c7e30bd17005ca01d6ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>indexes</name>
      <anchorfile>d6/d2d/structsatox_1_1database_1_1TableData.html</anchorfile>
      <anchor>aaf668d7bc0f602b23adf3d0efc2324cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::QueryOptimizer::TableStats</name>
    <filename>d2/d29/structsatox_1_1database_1_1QueryOptimizer_1_1TableStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>rowCount</name>
      <anchorfile>d2/d29/structsatox_1_1database_1_1QueryOptimizer_1_1TableStats.html</anchorfile>
      <anchor>ad74eb8117e61392ac219c7a1df615fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>pageCount</name>
      <anchorfile>d2/d29/structsatox_1_1database_1_1QueryOptimizer_1_1TableStats.html</anchorfile>
      <anchor>a90ff4c37e11b0b233c438185ec1d67dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>avgRowSize</name>
      <anchorfile>d2/d29/structsatox_1_1database_1_1QueryOptimizer_1_1TableStats.html</anchorfile>
      <anchor>aea0f8e82e83eecf3b61e17cd98046125</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, double &gt;</type>
      <name>columnSelectivity</name>
      <anchorfile>d2/d29/structsatox_1_1database_1_1QueryOptimizer_1_1TableStats.html</anchorfile>
      <anchor>a4b481da377538b469c7d4c6e205f1d19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::ThreadPool</name>
    <filename>d4/d54/classsatox_1_1ThreadPool.html</filename>
    <member kind="function">
      <type></type>
      <name>ThreadPool</name>
      <anchorfile>d4/d54/classsatox_1_1ThreadPool.html</anchorfile>
      <anchor>a68a3de4bba7bf5266b4f9a1611584a06</anchor>
      <arglist>(size_t threads)</arglist>
    </member>
    <member kind="function">
      <type>std::future&lt; void &gt;</type>
      <name>enqueue</name>
      <anchorfile>d4/d54/classsatox_1_1ThreadPool.html</anchorfile>
      <anchor>a4547c25597bab2c9e02ec53c4c61c19b</anchor>
      <arglist>(F &amp;&amp;f)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ThreadPool</name>
      <anchorfile>d4/d54/classsatox_1_1ThreadPool.html</anchorfile>
      <anchor>a8300a9566fc3a010eed931108a4308ca</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::blockchain::Transaction</name>
    <filename>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</filename>
    <member kind="function">
      <type></type>
      <name>Transaction</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>abc01088a7d67f8b1f464cdd9874f4718</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Transaction</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>ac7b904e759c24e677c5873ef9d60ec8d</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getHash</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>ac9f8b3a4e866d8fe306d9f2820ac6a43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFrom</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a9e1f246d1752ffc1f13dfd634dc58098</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getTo</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a322f2e66347fbeff43f5829d4b38be27</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getValue</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a07fba23c0358b257abe18dfb320cc1d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; uint8_t &gt; &amp;</type>
      <name>getData</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>aa8a14837fc742d0be6cb06c7b8c922a8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::system_clock::time_point</type>
      <name>getTimestamp</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a91de2e3979fe2e83d1d39ecf580ed9b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getStatus</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>af1bbd35b9ca6b45eac872941add1f140</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const nlohmann::json &amp;</type>
      <name>getMetadata</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>aa03b816b1634258bad55800d4a7c60cd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getNonce</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a08eb2042e7f9832034e447cbc29a109f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getGasPrice</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>aa54d85032b893d54ee4c7bc5e7f0a5f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getGasLimit</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a2f8321cd0a27018ee12132ed5bb41eb9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>getRaw</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a1d4786a5de1e3dedd5fb77f14a4aa4ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHash</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a34d712f5791686e10454950d93a050fa</anchor>
      <arglist>(const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFrom</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>af001945b459576f386764e5b1437419d</anchor>
      <arglist>(const std::string &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTo</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>ab159a5d0fdb1e76b302aa0a5ff74979d</anchor>
      <arglist>(const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>ade612c6f958dfc50e00eede85cf6cc79</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a0708aebba442597e948c068070b2e3a9</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimestamp</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a15f52847f9ab1281e2ff82509c73a377</anchor>
      <arglist>(std::chrono::system_clock::time_point timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStatus</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a760906f77a3130ba35b290a66195dc05</anchor>
      <arglist>(const std::string &amp;status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMetadata</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>aaba9e9bad6d4aa055ffeff51ef3fcc70</anchor>
      <arglist>(const nlohmann::json &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNonce</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>aab6612b92d4bd461c9554798a37ea836</anchor>
      <arglist>(uint64_t nonce)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGasPrice</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a350d051323bac3f6d7928cb7b657e7e3</anchor>
      <arglist>(double gas_price)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGasLimit</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>aff71b640b2a68d0efccffed218ee9f8d</anchor>
      <arglist>(uint64_t gas_limit)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a2cc233599e78650019b4e20515b9b06e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a514576e582906405fee23526ac9df49e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Transaction &gt;</type>
      <name>fromJson</name>
      <anchorfile>d3/dbe/classsatox_1_1blockchain_1_1Transaction.html</anchorfile>
      <anchor>a3eae15625b7c238c2eed809a8185df73</anchor>
      <arglist>(const nlohmann::json &amp;json)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::BlockchainManager::Transaction</name>
    <filename>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</anchorfile>
      <anchor>aef8a5207186e55a365b374a3a785a8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>hash</name>
      <anchorfile>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</anchorfile>
      <anchor>a24415407782c2312afd60c84ff95f63d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</anchorfile>
      <anchor>a46c8893e0035584120b80bd6dc88fd23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Input &gt;</type>
      <name>inputs</name>
      <anchorfile>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</anchorfile>
      <anchor>a575b914af66a0bf6d1e10e64fb869f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Output &gt;</type>
      <name>outputs</name>
      <anchorfile>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</anchorfile>
      <anchor>ad53ef487d8d9a40b9dc8ed0c337a04be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>fee</name>
      <anchorfile>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</anchorfile>
      <anchor>a26f908f27bfa9f6a97bba8aebcd4225b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>confirmations</name>
      <anchorfile>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</anchorfile>
      <anchor>a5423269d6ed2906e69dfff19120a1fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>blockHash</name>
      <anchorfile>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</anchorfile>
      <anchor>a50d6eaa7f912210bdbec1108cc63ab97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>blockHeight</name>
      <anchorfile>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</anchorfile>
      <anchor>ad2c9bb78be416c0122cd1b5a20e87ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d7/d1c/structsatox_1_1core_1_1BlockchainManager_1_1Transaction.html</anchorfile>
      <anchor>a57a2ed698d4242fcdd68fe291da62f4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::DatabaseManager::Transaction</name>
    <filename>d3/d89/structsatox_1_1core_1_1DatabaseManager_1_1Transaction.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d3/d89/structsatox_1_1core_1_1DatabaseManager_1_1Transaction.html</anchorfile>
      <anchor>a52accb182ca7d93c977371215568bf42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d3/d89/structsatox_1_1core_1_1DatabaseManager_1_1Transaction.html</anchorfile>
      <anchor>a45f93e49a18cdd1645b342492800ac98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>transaction_id</name>
      <anchorfile>d3/d89/structsatox_1_1core_1_1DatabaseManager_1_1Transaction.html</anchorfile>
      <anchor>a6f693cd8cdc9fb5af0e4a732e28d11f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::Transaction</name>
    <filename>de/d89/structsatox_1_1core_1_1Transaction.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>de/d89/structsatox_1_1core_1_1Transaction.html</anchorfile>
      <anchor>ab7465294ccf2266f3799d792fb0f0ff2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>from</name>
      <anchorfile>de/d89/structsatox_1_1core_1_1Transaction.html</anchorfile>
      <anchor>a0cf81ef8ab83e362d3f6590ac16a0ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>to</name>
      <anchorfile>de/d89/structsatox_1_1core_1_1Transaction.html</anchorfile>
      <anchor>a1931f18ba9bac1809423cdad32e99dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>amount</name>
      <anchorfile>de/d89/structsatox_1_1core_1_1Transaction.html</anchorfile>
      <anchor>a3a8ae520b5a363cbb3e1da02e7631808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>data</name>
      <anchorfile>de/d89/structsatox_1_1core_1_1Transaction.html</anchorfile>
      <anchor>a97f71d3e33a9fda43681df379f35d9ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>de/d89/structsatox_1_1core_1_1Transaction.html</anchorfile>
      <anchor>a6c46b74ecc4981e8d48cb4a5dad5682f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>signature</name>
      <anchorfile>de/d89/structsatox_1_1core_1_1Transaction.html</anchorfile>
      <anchor>a2caeb64e966a8c68a9b46c51e2486cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>de/d89/structsatox_1_1core_1_1Transaction.html</anchorfile>
      <anchor>a1dfceadc796608e4eba90a05e1f0283b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::Transaction</name>
    <filename>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>ae03145421375ace15037fcc3c452a762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>a627fa2ac39caef2e2db9aa8142bfe362</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>a53245b84a261344b58607af3338160ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Priority</type>
      <name>priority</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>ad39040e3055a8724a0655c1bdea20601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TransactionStatus</type>
      <name>status</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>a6d460d89752e7b78a27ea7529ff4cf48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>result</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>a566bec0f985d97a296b7b5b8fe7ad13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>a580d714b686c3b6847fbc403bd1dc425</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>createdAt</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>aa8ed2e0886837921e7b7eda4f16dab0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>updatedAt</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>a2c4199910ab9a213334092e671ad308c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>startedAt</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>abc82fef72472f05e78a2ed9a4694abb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>completedAt</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>a7ee408db3150dad431d329519abdaeeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>failedAt</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>adf2c6ec38898e8c4846c726223c8b1be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>cancelledAt</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>a30080d50ef2e83ea156ea002693d66c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>db/d53/structsatox_1_1core_1_1TransactionManager_1_1Transaction.html</anchorfile>
      <anchor>a4ea24af5941dd4d241efafb4e270a4a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::Transaction</name>
    <filename>d0/d68/classsatox_1_1database_1_1Transaction.html</filename>
    <base>satox::database::DataModel</base>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a7613004941455b40d66ae91c2f48ff48</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fromJson</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>ad82e80c7422b5846634583b82875658b</anchor>
      <arglist>(const nlohmann::json &amp;j) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTableName</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a89d23c5920672d1107ced3582324a5d7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>txid</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>af17228a36a7a81389da4d012c5c2d4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>version</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a8bedb8e823850c9683b26d372a5ad551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>locktime</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>adcecd0f5cee8307376c750fa373127af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>inputs</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a9ccd27b8a7e5f8e1c9ab85399ce18975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; nlohmann::json &gt;</type>
      <name>outputs</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a9184cfa017b422bd763f856b66edc171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>size</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a48ccd0b994157e9d39b62047a5055976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>weight</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a7b5b01286fcb1547f07d754131794ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>fee</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>adf26c37e859af471ca1d15e9a5a57345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>blockHash</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a4f925154d1ff025d7af6600c72bc2672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>blockHeight</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a7329cc3e763a684881488cd7cd0ae31e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>timestamp</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a0447e17c3bf1e2da0ce816bcb09bb7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isCoinbase</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>abc776327c6cb68f43a40fe6ee36baef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>d0/d68/classsatox_1_1database_1_1Transaction.html</anchorfile>
      <anchor>a738ff1e18411776cbbbb367364f7c65c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::Transaction</name>
    <filename>db/d4c/structsatox_1_1Transaction.html</filename>
    <member kind="function">
      <type></type>
      <name>Transaction</name>
      <anchorfile>db/d4c/structsatox_1_1Transaction.html</anchorfile>
      <anchor>a065f91b5607ecbbbcd113e0ea8671bc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>version</name>
      <anchorfile>db/d4c/structsatox_1_1Transaction.html</anchorfile>
      <anchor>a264def6d85f54c9bcf4e44a1ac5523d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; TxIn &gt;</type>
      <name>inputs</name>
      <anchorfile>db/d4c/structsatox_1_1Transaction.html</anchorfile>
      <anchor>a7f94b0e6d557123ee11fb0501619e47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; TxOut &gt;</type>
      <name>outputs</name>
      <anchorfile>db/d4c/structsatox_1_1Transaction.html</anchorfile>
      <anchor>a2ddce34b9efedbab7473efc13b7b8225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>locktime</name>
      <anchorfile>db/d4c/structsatox_1_1Transaction.html</anchorfile>
      <anchor>aa03515831e68c9ffb2e30f802cefdacf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::TransactionManager::TransactionConfig</name>
    <filename>db/d8a/structsatox_1_1database_1_1TransactionManager_1_1TransactionConfig.html</filename>
    <member kind="variable">
      <type>std::chrono::seconds</type>
      <name>timeout</name>
      <anchorfile>db/d8a/structsatox_1_1database_1_1TransactionManager_1_1TransactionConfig.html</anchorfile>
      <anchor>add65d70eb1f9bc5530fbb781c785d543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>auto_commit</name>
      <anchorfile>db/d8a/structsatox_1_1database_1_1TransactionManager_1_1TransactionConfig.html</anchorfile>
      <anchor>a4874d23229fe661463bea4143d236261</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>read_only</name>
      <anchorfile>db/d8a/structsatox_1_1database_1_1TransactionManager_1_1TransactionConfig.html</anchorfile>
      <anchor>ae7bb0b96176d41d4bb35cabe0c349ada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>isolation_level</name>
      <anchorfile>db/d8a/structsatox_1_1database_1_1TransactionManager_1_1TransactionConfig.html</anchorfile>
      <anchor>a87153fd41f9113529c52d439de23e8d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::TransactionInfo</name>
    <filename>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>txid</name>
      <anchorfile>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</anchorfile>
      <anchor>a29ab5d7992d161624967826a028fc83a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>block_hash</name>
      <anchorfile>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</anchorfile>
      <anchor>aea9265bc72f279bbc05284b966b18393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>block_height</name>
      <anchorfile>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</anchorfile>
      <anchor>ada7f182081edf14face9c19abd5a0208</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timestamp</name>
      <anchorfile>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</anchorfile>
      <anchor>a700c4313a66fd585c72ccc29f94cf041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>from_address</name>
      <anchorfile>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</anchorfile>
      <anchor>a12be2f6e17f49ecf04b7ff94e7ada3ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>to_address</name>
      <anchorfile>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</anchorfile>
      <anchor>a089f001e9de390b32b479069bbe092ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</anchorfile>
      <anchor>a376cf0cb4f3a5ed195fe06be6e84a2b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>fee</name>
      <anchorfile>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</anchorfile>
      <anchor>abe19f0de4e53ff86c524aec1c036ec27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</anchorfile>
      <anchor>a969041835215e19a9d98d3e56e850fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>d4/d65/structsatox_1_1blockchain_1_1TransactionInfo.html</anchorfile>
      <anchor>a672e736a47ff620511dbe6eb3f136a6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::WalletManager::TransactionInfo</name>
    <filename>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>aa180c139868d33d57c42a645411b1419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>walletId</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>a925225bca4e92de030069e1348471875</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TransactionType</type>
      <name>type</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>ab07fa10e5fb9445553e139ed266e60d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TransactionState</type>
      <name>state</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>ab05113772a0a972847d8a31e8e80b7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fromAddress</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>a777c5829b903c1918621125086bfebd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>toAddress</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>a725982cc77c626469639087dd37e9c77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>amount</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>a8158e85c92476b711599094fb9fe60cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>assetId</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>acfd311150497f353a5639fc7b6ac0ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>txHash</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>a6a9b3fd45ca22a329c3346a609c8555e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>confirmations</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>add1b953129132e6c06a94c7d60d072b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>aa0a220eac0b2e5081afd05c7eddfcbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>da/d1b/structsatox_1_1core_1_1WalletManager_1_1TransactionInfo.html</anchorfile>
      <anchor>a9af163642c8c615d9d1f58c6eb2280c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::TransactionInfo</name>
    <filename>d8/d1b/structsatox_1_1wallet_1_1TransactionInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>txid</name>
      <anchorfile>d8/d1b/structsatox_1_1wallet_1_1TransactionInfo.html</anchorfile>
      <anchor>a5e49bce335062ffb44601153c8fbb39e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>from_address</name>
      <anchorfile>d8/d1b/structsatox_1_1wallet_1_1TransactionInfo.html</anchorfile>
      <anchor>a894b70a1ff0bd1a5493497e382e833db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>to_address</name>
      <anchorfile>d8/d1b/structsatox_1_1wallet_1_1TransactionInfo.html</anchorfile>
      <anchor>a601eb435f4ca6ca9d1727a3294098dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>d8/d1b/structsatox_1_1wallet_1_1TransactionInfo.html</anchorfile>
      <anchor>a9650477a242322dcc7b5d7c5047506a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>fee</name>
      <anchorfile>d8/d1b/structsatox_1_1wallet_1_1TransactionInfo.html</anchorfile>
      <anchor>a220bb87157a2a5d99d6d0add81df6c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>timestamp</name>
      <anchorfile>d8/d1b/structsatox_1_1wallet_1_1TransactionInfo.html</anchorfile>
      <anchor>a1e2c727704580742ad0b8c988846bc5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>d8/d1b/structsatox_1_1wallet_1_1TransactionInfo.html</anchorfile>
      <anchor>ac281e5004e859007627e9d3eb8bc386f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>d8/d1b/structsatox_1_1wallet_1_1TransactionInfo.html</anchorfile>
      <anchor>a101a655d46587073006edebfd9025fdf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::TransactionManager</name>
    <filename>d2/d34/classsatox_1_1core_1_1TransactionManager.html</filename>
    <class kind="struct">satox::core::TransactionManager::Config</class>
    <class kind="struct">satox::core::TransactionManager::ErrorRecoveryConfig</class>
    <class kind="struct">satox::core::TransactionManager::FeeEstimate</class>
    <class kind="struct">satox::core::TransactionManager::Input</class>
    <class kind="struct">satox::core::TransactionManager::Output</class>
    <class kind="struct">satox::core::TransactionManager::PerformanceConfig</class>
    <class kind="struct">satox::core::TransactionManager::RecoveryOperation</class>
    <class kind="struct">satox::core::TransactionManager::Stats</class>
    <class kind="struct">satox::core::TransactionManager::Transaction</class>
    <class kind="struct">satox::core::TransactionManager::TransactionStats</class>
    <class kind="struct">satox::core::TransactionManager::UTXO</class>
    <member kind="enumeration">
      <type></type>
      <name>Priority</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>abdaa4929d6b90984dd865d6d4dca8156</anchor>
      <arglist></arglist>
      <enumvalue file="d2/d34/classsatox_1_1core_1_1TransactionManager.html" anchor="abdaa4929d6b90984dd865d6d4dca8156a41bc94cbd8eebea13ce0491b2ac11b88">LOW</enumvalue>
      <enumvalue file="d2/d34/classsatox_1_1core_1_1TransactionManager.html" anchor="abdaa4929d6b90984dd865d6d4dca8156a1e23852820b9154316c7c06e2b7ba051">NORMAL</enumvalue>
      <enumvalue file="d2/d34/classsatox_1_1core_1_1TransactionManager.html" anchor="abdaa4929d6b90984dd865d6d4dca8156ab89de3b4b81c4facfac906edf29aec8c">HIGH</enumvalue>
      <enumvalue file="d2/d34/classsatox_1_1core_1_1TransactionManager.html" anchor="abdaa4929d6b90984dd865d6d4dca8156a99cd1c61610c76a57cb8d10d6df6b870">CRITICAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TransactionStatus</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a054ed7a87a5da7d77ff8c882995ecbfd</anchor>
      <arglist></arglist>
      <enumvalue file="d2/d34/classsatox_1_1core_1_1TransactionManager.html" anchor="a054ed7a87a5da7d77ff8c882995ecbfdac69f06e1a9b016d133907b4e5f5864d2">PENDING</enumvalue>
      <enumvalue file="d2/d34/classsatox_1_1core_1_1TransactionManager.html" anchor="a054ed7a87a5da7d77ff8c882995ecbfda18ff74f43da410c5529f7d6fca84f115">ACTIVE</enumvalue>
      <enumvalue file="d2/d34/classsatox_1_1core_1_1TransactionManager.html" anchor="a054ed7a87a5da7d77ff8c882995ecbfda8f7afecbc8fbc4cd0f50a57d1172482e">COMPLETED</enumvalue>
      <enumvalue file="d2/d34/classsatox_1_1core_1_1TransactionManager.html" anchor="a054ed7a87a5da7d77ff8c882995ecbfdab9e14d9b2886bcff408b85aefa780419">FAILED</enumvalue>
      <enumvalue file="d2/d34/classsatox_1_1core_1_1TransactionManager.html" anchor="a054ed7a87a5da7d77ff8c882995ecbfda9f935beb31030ad0d4d26126c0f39bf2">CANCELLED</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Transaction &amp;)&gt;</type>
      <name>TransactionCallback</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a15e30dcec3df6bf8b369525da85f6b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ab999aab7412a6a91ffa9957198b06e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransactionManager</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a1622890a1c268a582fec42f4e6abd356</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransactionManager</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a24323697c231e5f17464a96bd0eec602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransactionManager</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a67e9ef1a19ebd06f84f2b9eed3e6acdf</anchor>
      <arglist>(const TransactionManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>TransactionManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>abf3b46bc87843267f0276826dba36145</anchor>
      <arglist>(const TransactionManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransactionManager</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a5f5b035be33c65e2a97f4eb383328f86</anchor>
      <arglist>(TransactionManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>TransactionManager &amp;</type>
      <name>operator=</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ad0a6c3f9680bb43ade85c7e37ce18af5</anchor>
      <arglist>(TransactionManager &amp;&amp;) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a7e9833b0087629b91cbbf137a30ecb9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Transaction</type>
      <name>createTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a2813c3da3f5238b2a2abc95e2f0c3733</anchor>
      <arglist>(const std::string &amp;from, const std::string &amp;to, const std::string &amp;amount, const std::string &amp;data=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>signTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a01978d38048c9081d6faa3ffe0e2211a</anchor>
      <arglist>(Transaction &amp;transaction, const std::string &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a85969ed2ca965c1c6ea6f7cc9affa3db</anchor>
      <arglist>(const Transaction &amp;transaction)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a8b6142c586d7ccf092cb97e0a31e55ef</anchor>
      <arglist>(const Transaction &amp;transaction)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTransactionStatus</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a8097731c2cd83f003f97de48c2d53291</anchor>
      <arglist>(const std::string &amp;transactionId)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getPendingTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a9b961e19f7d5a078973ff02eb04603e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getTransactionHistory</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>aed00d3e29dc41c94dc38973a6b24e39d</anchor>
      <arglist>(const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TransactionManager</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a1622890a1c268a582fec42f4e6abd356</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TransactionManager</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a24323697c231e5f17464a96bd0eec602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a7ea5da3272a2e57dd4b4001d10d6472e</anchor>
      <arglist>(size_t maxTransactions, size_t maxConcurrent)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shutdown</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a73a1fd6a347fa3d951c153e3714b6b91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ade472afa26b862bc9183fa507668d439</anchor>
      <arglist>(const std::string &amp;type, const nlohmann::json &amp;data, Priority priority)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>signTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a442aa373231daba506b3cd734fd136f8</anchor>
      <arglist>(Transaction &amp;transaction, const std::string &amp;private_key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a8fcbddb7f57d00a0f1883d60fd3d07b6</anchor>
      <arglist>(const Transaction &amp;transaction) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>submitTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>abf0519768e42527868a1c64c6206975a</anchor>
      <arglist>(Transaction &amp;transaction)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a1f628e1289c46cc05f08c7bc4486b298</anchor>
      <arglist>(const std::string &amp;tx_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; Transaction &gt;</type>
      <name>getTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ae83d5977085da6082a2043bb52c83d4e</anchor>
      <arglist>(const std::string &amp;tx_hash) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getMempool</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>aca5e1928ddba0c9cd97a5485033453dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeFromMempool</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a29f3575b87115b55152aa9c47e6af4da</anchor>
      <arglist>(const std::string &amp;tx_hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UTXO &gt;</type>
      <name>getUTXOs</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a9208f7331e227a53efc671a24106dbc0</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUTXOSpent</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a8bff6131563a13d0d6d44bf62791431a</anchor>
      <arglist>(const std::string &amp;tx_hash, uint32_t output_index) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateUTXO</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>af7454c0aa73d5e77b62cabc143755909</anchor>
      <arglist>(const UTXO &amp;utxo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeUTXO</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a69dc307094e2e938acda9f200a6c593a</anchor>
      <arglist>(const std::string &amp;tx_hash, uint32_t output_index)</arglist>
    </member>
    <member kind="function">
      <type>FeeEstimate</type>
      <name>estimateFee</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a4af51762c4433e0adf4b84901bbcf835</anchor>
      <arglist>(const Transaction &amp;transaction) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>calculateFee</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>afa9c2f6f7b35e95abbadeaa13e0cc2bc</anchor>
      <arglist>(const Transaction &amp;transaction) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateFee</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a95c576e5f66f854cb4aa5108f60ae2d0</anchor>
      <arglist>(const Transaction &amp;transaction) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getTransactionHistory</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ae5aea02bf88afd41088f24210163504c</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getBlockTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>af1fbfe025b48332f94172dc54a2ae4f5</anchor>
      <arglist>(const std::string &amp;block_hash) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getAddressTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a44611ced6892c46c2b09ab877200f066</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>TransactionStats</type>
      <name>getTransactionStats</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>aab6330d408ab6d34f782f604d7116534</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerTransactionCallback</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a96b67bd6baa56bb827a6727a61a5587c</anchor>
      <arglist>(TransactionCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>acccb74a9538725ccce90306eb89394ee</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>monitorTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a55aded7075533c0522012d25e2ac707f</anchor>
      <arglist>(const std::string &amp;transaction_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopMonitoring</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a815d9e68af4f8296af63d6e5849afee0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a7399410018f8e31d38b6db3aac373e05</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a93bf3bf201d9c7b88ac58a100201cb40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a95687bd10a519051cc8a8f66aeff6310</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransactionActive</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a1d766fbb761ca6409ced4ac7d7a5ba54</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransactionPending</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ae7fb26ef28095a77356515681567dd00</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransactionCompleted</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ac153df9a2480c94f6d365be77f5d4b3c</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransactionFailed</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a3ff26ef208781b4b671749f573b68768</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransactionCancelled</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ab9003403ab54e269071f365719d64e31</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCompletedTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>af4e2359b3f99b900e7e89e8ff4bab1ea</anchor>
      <arglist>(size_t maxAge)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearAllTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ac06005f24dc4c8a06d5e228a5c4e077f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Stats</type>
      <name>getStats</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>aa0cd3f13bf15b34655c61ba333e9bf2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ab04536c2ef87a3aacfdae0b4fec5b836</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPerformanceConfig</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>aa19600feec1f671168a0bc2afd4b6156</anchor>
      <arglist>(const PerformanceConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearCache</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ad316843e0f2d6782ccf7e689ffeb7239</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCacheSize</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ac53d1345c35e7f8d59780c8eeae95d16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getConnectionPoolSize</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>acced2ec28b02d72b2bff0055ac12d8b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getBatchSize</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a878ef31e1e7c9a8936c1526f7fddea8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processBatch</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a78f947fc78a1254edef1cbfce022079e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>optimizeMemory</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a27d72a6efbbccf385585b3d17a299c24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setErrorRecoveryConfig</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ac3f02f6c911f2b85d9cd4f06daaabb68</anchor>
      <arglist>(const ErrorRecoveryConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>recoverFromError</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ad97004deb6a4000ebc4dd80a5399aca7</anchor>
      <arglist>(const std::string &amp;operation_id)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; RecoveryOperation &gt;</type>
      <name>getRecoveryHistory</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ac70aee60f071d8b12ade925ee9f6dd5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearRecoveryHistory</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>acec7c38336d5f83788e3b79201b31737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRecoveryInProgress</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>acbc77745f7a5187f99a7bf6ae6905247</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastRecoveryError</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a0266a479245f520f4a3a20e9967eb6ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>startTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ab1e704159881e465c984f34d29f04e42</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>completeTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a8dad7b0a016845e887ac274583ac9f4c</anchor>
      <arglist>(const std::string &amp;id, const nlohmann::json &amp;result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>failTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>abf526fd193777f959a0ed04242a2f954</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;error)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cancelTransaction</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a4a2739fac931c3c87c08f34de1402f84</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ad296725c9eb628dbd6493b47b974695c</anchor>
      <arglist>(TransactionStatus status) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a9e79065f69796358cc5098f87a4b7b0f</anchor>
      <arglist>(const std::string &amp;type) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getPendingTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a83e233529f3afd566a683828086d75b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getActiveTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a257ace5e79d148d63d7750f74ceca9b7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getCompletedTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>add03fc49d621546489ea99c0bc8fff23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Transaction &gt;</type>
      <name>getFailedTransactions</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a95827b14648f0da6ecb45830a2b9c1ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>TransactionStatusToString</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a58150d6843e232ca79187f20186e0b68</anchor>
      <arglist>(TransactionStatus status)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransactionStatus</type>
      <name>StringToTransactionStatus</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a7f3e1c66cee940820f04207de7dee640</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransactionManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ada7a5b72e3f6031bd3a2d5d7e87ff47e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>to_json</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>a2f9876bdc56941d9f4e382334eeb2358</anchor>
      <arglist>(nlohmann::json &amp;j, const Transaction &amp;t)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>from_json</name>
      <anchorfile>d2/d34/classsatox_1_1core_1_1TransactionManager.html</anchorfile>
      <anchor>ac5e7e4275de64368b62ce788e65df1b0</anchor>
      <arglist>(const nlohmann::json &amp;j, TransactionManager::Transaction &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::TransactionManager</name>
    <filename>df/d54/classsatox_1_1database_1_1TransactionManager.html</filename>
    <class kind="struct">satox::database::TransactionManager::TransactionConfig</class>
    <class kind="struct">satox::database::TransactionManager::TransactionStats</class>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a47b7ab916762896307d2b435157f022b</anchor>
      <arglist>(const TransactionConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a56af232398d76bca3dd24308f11c5b33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginTransaction</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a6100a11b7966437ecf14eb7420edff31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>commitTransaction</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a678715d838e9fc27f3a07a46e4436beb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rollbackTransaction</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a1f9c6aced98ff21f205d01949a4d4eea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInTransaction</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a9c59024e12328ce167b6f9a069b3a522</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>executeQuery</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>aa8054078ae163df3831d36c14a4978a5</anchor>
      <arglist>(const std::string &amp;query, const nlohmann::json &amp;params=nlohmann::json::object())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>executeBatch</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a85283a51677d14239d22f3d23dad9f7d</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;queries, const std::vector&lt; nlohmann::json &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>executeQueryWithResult</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a68d43e041cb04be8b7e966d9d367ec2d</anchor>
      <arglist>(const std::string &amp;query, const nlohmann::json &amp;params=nlohmann::json::object())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createSavepoint</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a53c5fd2c5b9b5ebd373be02085d572eb</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rollbackToSavepoint</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>ac04761d7543e361aba123d1bce1e61cb</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>releaseSavepoint</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a9302e4e99ad38486f1081a4bfcd438be</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimeout</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>adf50fd0d231def18c290037d989b68ff</anchor>
      <arglist>(std::chrono::seconds timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAutoCommit</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a0cb1916e0568048c6f3ff0ef03ed1857</anchor>
      <arglist>(bool auto_commit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setReadOnly</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>ac5709cc0579a6ea0e71569def7c1973d</anchor>
      <arglist>(bool read_only)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsolationLevel</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a60a874f9ef37aa3a926e98ce13ea9bea</anchor>
      <arglist>(const std::string &amp;level)</arglist>
    </member>
    <member kind="function">
      <type>TransactionStats</type>
      <name>getStats</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a4b102d9d9e9c60821d7fa2048abda7ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a064e749f64e7b9db4912d42561e78561</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a96a038e87988447f3ec0596868a57bec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>a9a55fbfacf915a68c6cf5131ada42c6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TransactionManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>df/d54/classsatox_1_1database_1_1TransactionManager.html</anchorfile>
      <anchor>ae9a60f71e6d148590a616b3e38636fe9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::TransactionStats</name>
    <filename>d6/d2e/structsatox_1_1core_1_1TransactionManager_1_1TransactionStats.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>total_transactions</name>
      <anchorfile>d6/d2e/structsatox_1_1core_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>ab7b01a97353d3761a86aca6439b5aee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pending_transactions</name>
      <anchorfile>d6/d2e/structsatox_1_1core_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>ab86c54c091c9f69533ef0dacfeb8a992</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>confirmed_transactions</name>
      <anchorfile>d6/d2e/structsatox_1_1core_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>ad6a054d0ed76889ccd8cd641fa866f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>rejected_transactions</name>
      <anchorfile>d6/d2e/structsatox_1_1core_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>aba8a2b8ae355f472b04a894058fa82de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>total_volume</name>
      <anchorfile>d6/d2e/structsatox_1_1core_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>a0cca18bd09fb3035f8e20316ba756322</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>total_fees</name>
      <anchorfile>d6/d2e/structsatox_1_1core_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>acef34566ba0758fc93244252e13ba124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::time_t</type>
      <name>last_update</name>
      <anchorfile>d6/d2e/structsatox_1_1core_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>a4d25045cf4e8b027e935c9309a9df207</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::TransactionManager::TransactionStats</name>
    <filename>da/da5/structsatox_1_1database_1_1TransactionManager_1_1TransactionStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>active_transactions</name>
      <anchorfile>da/da5/structsatox_1_1database_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>ab1bb651511627332c891bf93bca54d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>committed_transactions</name>
      <anchorfile>da/da5/structsatox_1_1database_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>abf57ac880e8149f3a6508978ef5963af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>rolled_back_transactions</name>
      <anchorfile>da/da5/structsatox_1_1database_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>a928501de8721af5c670f0202f0c8fd5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>failed_transactions</name>
      <anchorfile>da/da5/structsatox_1_1database_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>ace29fa454accdba686c4402cb026cf47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>avg_transaction_time</name>
      <anchorfile>da/da5/structsatox_1_1database_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>a4f2a27cf023ae3de8afdca3b4fbb5178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>deadlocks</name>
      <anchorfile>da/da5/structsatox_1_1database_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>a1513c98c0bbe4a0f63e44bada9222ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>timeouts</name>
      <anchorfile>da/da5/structsatox_1_1database_1_1TransactionManager_1_1TransactionStats.html</anchorfile>
      <anchor>a0201e805b766ebc9f42f63bffe9fd17a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::TxIn</name>
    <filename>d1/d33/structsatox_1_1TxIn.html</filename>
    <member kind="function">
      <type></type>
      <name>TxIn</name>
      <anchorfile>d1/d33/structsatox_1_1TxIn.html</anchorfile>
      <anchor>a905c4b3660300c1582c29a58e22696e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>OutPoint</type>
      <name>prevout</name>
      <anchorfile>d1/d33/structsatox_1_1TxIn.html</anchorfile>
      <anchor>a512462686bcb9299afd027d898b5de95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>script_sig</name>
      <anchorfile>d1/d33/structsatox_1_1TxIn.html</anchorfile>
      <anchor>addcf958a33e1f8b6b1f7f82bc7ad5b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>sequence</name>
      <anchorfile>d1/d33/structsatox_1_1TxIn.html</anchorfile>
      <anchor>a73dc29a538c892f219599e4fe75b2f07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::TxOut</name>
    <filename>d1/dd1/structsatox_1_1TxOut.html</filename>
    <member kind="function">
      <type></type>
      <name>TxOut</name>
      <anchorfile>d1/dd1/structsatox_1_1TxOut.html</anchorfile>
      <anchor>aee5b57a169c85a8ae859e898ef007166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>value</name>
      <anchorfile>d1/dd1/structsatox_1_1TxOut.html</anchorfile>
      <anchor>a37d589792c913aff5135fdddcf74216e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>script_pubkey</name>
      <anchorfile>d1/dd1/structsatox_1_1TxOut.html</anchorfile>
      <anchor>ab3996a0e1e20991d12331dfba74e739f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::TransactionManager::UTXO</name>
    <filename>d3/d38/structsatox_1_1core_1_1TransactionManager_1_1UTXO.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>tx_hash</name>
      <anchorfile>d3/d38/structsatox_1_1core_1_1TransactionManager_1_1UTXO.html</anchorfile>
      <anchor>aefada9b6fbb51fa1a79e7545914bfd30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>output_index</name>
      <anchorfile>d3/d38/structsatox_1_1core_1_1TransactionManager_1_1UTXO.html</anchorfile>
      <anchor>ab57b4190e2601e828ddb3cccdb873f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>amount</name>
      <anchorfile>d3/d38/structsatox_1_1core_1_1TransactionManager_1_1UTXO.html</anchorfile>
      <anchor>ae438e8a4b774a6be6350b16987078b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>script_pubkey</name>
      <anchorfile>d3/d38/structsatox_1_1core_1_1TransactionManager_1_1UTXO.html</anchorfile>
      <anchor>a929853186586bec6ad52772cf7faa7d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>block_height</name>
      <anchorfile>d3/d38/structsatox_1_1core_1_1TransactionManager_1_1UTXO.html</anchorfile>
      <anchor>a12133808b259294f589cc10be2600aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>spent</name>
      <anchorfile>d3/d38/structsatox_1_1core_1_1TransactionManager_1_1UTXO.html</anchorfile>
      <anchor>aff9575a5e22a40afa3db534d56bcbf5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>spending_tx_hash</name>
      <anchorfile>d3/d38/structsatox_1_1core_1_1TransactionManager_1_1UTXO.html</anchorfile>
      <anchor>af16788d18e0bb13322d0bd67d0962db1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::security::ValidationException</name>
    <filename>d8/de5/classsatox_1_1security_1_1ValidationException.html</filename>
    <base>satox::security::SecurityException</base>
    <member kind="function">
      <type></type>
      <name>ValidationException</name>
      <anchorfile>d8/de5/classsatox_1_1security_1_1ValidationException.html</anchorfile>
      <anchor>a9a5e063f5d53cb227fd13deedc13173d</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::NFTValidator::ValidationResult</name>
    <filename>db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult.html</anchorfile>
      <anchor>acdf32edc9899aac09730f6e167441f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult.html</anchorfile>
      <anchor>a2f5307f166c19d37223bac96c99a68ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>errors</name>
      <anchorfile>db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult.html</anchorfile>
      <anchor>a23b82a2968bc869517e727d775093991</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>warnings</name>
      <anchorfile>db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult.html</anchorfile>
      <anchor>a0df160f4a72dce7fc989ac0c5a5cb678</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::security::ValidationResult</name>
    <filename>de/d7a/structsatox_1_1security_1_1ValidationResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>de/d7a/structsatox_1_1security_1_1ValidationResult.html</anchorfile>
      <anchor>a132493368ad77ed74635ba15eecf0b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>sanitizedValue</name>
      <anchorfile>de/d7a/structsatox_1_1security_1_1ValidationResult.html</anchorfile>
      <anchor>a174eaf5450acc345aa182b3ef1310984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>de/d7a/structsatox_1_1security_1_1ValidationResult.html</anchorfile>
      <anchor>a884c67a5b0e02d4b8a573bd9e731beb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ValidationType</type>
      <name>type</name>
      <anchorfile>de/d7a/structsatox_1_1security_1_1ValidationResult.html</anchorfile>
      <anchor>a416e7ce5700e8467ed3aed3857463072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SecurityLevel</type>
      <name>level</name>
      <anchorfile>de/d7a/structsatox_1_1security_1_1ValidationResult.html</anchorfile>
      <anchor>a177ed97d18b06950d95dae65b30d2d16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::asset::Version</name>
    <filename>dc/dc2/structsatox_1_1asset_1_1Version.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>dc/dc2/structsatox_1_1asset_1_1Version.html</anchorfile>
      <anchor>a585978a2ecdd9cb2e2d76f7744b1b191</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>major</name>
      <anchorfile>dc/dc2/structsatox_1_1asset_1_1Version.html</anchorfile>
      <anchor>a059e987f6d7fd5cd367fb38ab21ca6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minor</name>
      <anchorfile>dc/dc2/structsatox_1_1asset_1_1Version.html</anchorfile>
      <anchor>afbe59802c3237ffb3fee727bbae5408b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patch</name>
      <anchorfile>dc/dc2/structsatox_1_1asset_1_1Version.html</anchorfile>
      <anchor>ab153ba025b44646e000d1c157a4179f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>build</name>
      <anchorfile>dc/dc2/structsatox_1_1asset_1_1Version.html</anchorfile>
      <anchor>ab03f4193c66a972e0ced8585ff3aa0cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>commit</name>
      <anchorfile>dc/dc2/structsatox_1_1asset_1_1Version.html</anchorfile>
      <anchor>a7d6bdadddf225f54b85219a6b55983bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::blockchain::Version</name>
    <filename>d0/de4/structsatox_1_1blockchain_1_1Version.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d0/de4/structsatox_1_1blockchain_1_1Version.html</anchorfile>
      <anchor>ae2d928b7c0b1f82431bdeb54e12cad7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>major</name>
      <anchorfile>d0/de4/structsatox_1_1blockchain_1_1Version.html</anchorfile>
      <anchor>ab5a1776e6d7f6736fabc66a741c341bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minor</name>
      <anchorfile>d0/de4/structsatox_1_1blockchain_1_1Version.html</anchorfile>
      <anchor>aa8b472ae487245a487264d3b2b3cc2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patch</name>
      <anchorfile>d0/de4/structsatox_1_1blockchain_1_1Version.html</anchorfile>
      <anchor>aad481327b925c728c8dddb1ffe045b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>build</name>
      <anchorfile>d0/de4/structsatox_1_1blockchain_1_1Version.html</anchorfile>
      <anchor>a407ad30a5d59422d40ed33c8956ca405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>commit</name>
      <anchorfile>d0/de4/structsatox_1_1blockchain_1_1Version.html</anchorfile>
      <anchor>ac6dd4072d0f904a3907f88a3bdcdb4a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::Version</name>
    <filename>d5/da9/structsatox_1_1core_1_1Version.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d5/da9/structsatox_1_1core_1_1Version.html</anchorfile>
      <anchor>aa5364d2378f89340038cb11819dbea77</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>major</name>
      <anchorfile>d5/da9/structsatox_1_1core_1_1Version.html</anchorfile>
      <anchor>a0dbdbfc04f921cbdd160a4db5141f8f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minor</name>
      <anchorfile>d5/da9/structsatox_1_1core_1_1Version.html</anchorfile>
      <anchor>a572c98f57fd078c51bb945074024df9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patch</name>
      <anchorfile>d5/da9/structsatox_1_1core_1_1Version.html</anchorfile>
      <anchor>aa7c222cc82d359af3be640a256b177ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>build</name>
      <anchorfile>d5/da9/structsatox_1_1core_1_1Version.html</anchorfile>
      <anchor>ab7abd370d201ddf1d477ef0995dcd926</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>commit</name>
      <anchorfile>d5/da9/structsatox_1_1core_1_1Version.html</anchorfile>
      <anchor>af0f9d762b13a07ce047ca6a37e6105c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::database::Version</name>
    <filename>dd/d53/structsatox_1_1database_1_1Version.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>dd/d53/structsatox_1_1database_1_1Version.html</anchorfile>
      <anchor>a0c74f3ccab3bf4b686db6e139b265ee2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>major</name>
      <anchorfile>dd/d53/structsatox_1_1database_1_1Version.html</anchorfile>
      <anchor>aee51cbb6e2808d8a222a04fef5d8d39b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minor</name>
      <anchorfile>dd/d53/structsatox_1_1database_1_1Version.html</anchorfile>
      <anchor>add26f8578ae3b89c8c5c50207a3f680a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patch</name>
      <anchorfile>dd/d53/structsatox_1_1database_1_1Version.html</anchorfile>
      <anchor>af4164ac7fc212feab9c5df05f486168f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>build</name>
      <anchorfile>dd/d53/structsatox_1_1database_1_1Version.html</anchorfile>
      <anchor>a77f2d45e248e079f2637eb0e6180a933</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>commit</name>
      <anchorfile>dd/d53/structsatox_1_1database_1_1Version.html</anchorfile>
      <anchor>a5aa52ff3de513c7b3ef8b418732ae59e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::ipfs::Version</name>
    <filename>d6/d5b/structsatox_1_1ipfs_1_1Version.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d6/d5b/structsatox_1_1ipfs_1_1Version.html</anchorfile>
      <anchor>a06d054dd5a33812294472316b25dada7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>major</name>
      <anchorfile>d6/d5b/structsatox_1_1ipfs_1_1Version.html</anchorfile>
      <anchor>a0c00762b0c068c096602c0ef1d289bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minor</name>
      <anchorfile>d6/d5b/structsatox_1_1ipfs_1_1Version.html</anchorfile>
      <anchor>a3d80521dd7d650e0a87018fd5d4ec06e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patch</name>
      <anchorfile>d6/d5b/structsatox_1_1ipfs_1_1Version.html</anchorfile>
      <anchor>a6067a281b8b900e0c3e2da2c5bbdb427</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>build</name>
      <anchorfile>d6/d5b/structsatox_1_1ipfs_1_1Version.html</anchorfile>
      <anchor>a9ee44b423494d11f198d62bfb52a4aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>commit</name>
      <anchorfile>d6/d5b/structsatox_1_1ipfs_1_1Version.html</anchorfile>
      <anchor>a6ff95ff4f61db01c108a6e8aedf7d3ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::network::Version</name>
    <filename>dc/dc7/structsatox_1_1network_1_1Version.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>dc/dc7/structsatox_1_1network_1_1Version.html</anchorfile>
      <anchor>aaf0da36536c22c635d5ad26cb24fe8f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>major</name>
      <anchorfile>dc/dc7/structsatox_1_1network_1_1Version.html</anchorfile>
      <anchor>a5e0bd1f7332242052faabf6f1cecfa4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minor</name>
      <anchorfile>dc/dc7/structsatox_1_1network_1_1Version.html</anchorfile>
      <anchor>a229e048f6e7d18726c46b813b5fc5ca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patch</name>
      <anchorfile>dc/dc7/structsatox_1_1network_1_1Version.html</anchorfile>
      <anchor>a5a66a8d2210fa2c4db664ce08554c72f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>build</name>
      <anchorfile>dc/dc7/structsatox_1_1network_1_1Version.html</anchorfile>
      <anchor>ae12fc2c76620831f83c36c2804e5f82a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>commit</name>
      <anchorfile>dc/dc7/structsatox_1_1network_1_1Version.html</anchorfile>
      <anchor>adf0f5631b3490da24d6ed1647d953c1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::nft::Version</name>
    <filename>df/dd1/structsatox_1_1nft_1_1Version.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>df/dd1/structsatox_1_1nft_1_1Version.html</anchorfile>
      <anchor>a8f63aebfbd2e8f115eac87dd2a418f49</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>major</name>
      <anchorfile>df/dd1/structsatox_1_1nft_1_1Version.html</anchorfile>
      <anchor>a1a54c814a4643a0e4d54379caca36d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minor</name>
      <anchorfile>df/dd1/structsatox_1_1nft_1_1Version.html</anchorfile>
      <anchor>aa5d9694fb17468ed5459b492f35962ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patch</name>
      <anchorfile>df/dd1/structsatox_1_1nft_1_1Version.html</anchorfile>
      <anchor>a98e1a8164c12b0fd00dedeb85fcab749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>build</name>
      <anchorfile>df/dd1/structsatox_1_1nft_1_1Version.html</anchorfile>
      <anchor>a7bc677cc591fd935478d32f73fe87f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>commit</name>
      <anchorfile>df/dd1/structsatox_1_1nft_1_1Version.html</anchorfile>
      <anchor>a57c888ac6360f4a0a70b6edc82990502</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::security::Version</name>
    <filename>d4/dfb/structsatox_1_1security_1_1Version.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d4/dfb/structsatox_1_1security_1_1Version.html</anchorfile>
      <anchor>ae9d46daa2ce0f72ae5d6acaaa96e5d68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>major</name>
      <anchorfile>d4/dfb/structsatox_1_1security_1_1Version.html</anchorfile>
      <anchor>a53b8d505127412ec8fe49f30191547e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minor</name>
      <anchorfile>d4/dfb/structsatox_1_1security_1_1Version.html</anchorfile>
      <anchor>a4ec3c41b24ef294f3dc38833516d665a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patch</name>
      <anchorfile>d4/dfb/structsatox_1_1security_1_1Version.html</anchorfile>
      <anchor>ab596e09941c0189a1d8c7816d0c07ec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>build</name>
      <anchorfile>d4/dfb/structsatox_1_1security_1_1Version.html</anchorfile>
      <anchor>a351dc9bd1affd78a5a06a99f519f742d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>commit</name>
      <anchorfile>d4/dfb/structsatox_1_1security_1_1Version.html</anchorfile>
      <anchor>a0225396947085d54a2d6a8ecd4c886dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::Version</name>
    <filename>d1/d54/structsatox_1_1wallet_1_1Version.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>d1/d54/structsatox_1_1wallet_1_1Version.html</anchorfile>
      <anchor>a1aad94b2e5092b601ee8e9894b47b32c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>major</name>
      <anchorfile>d1/d54/structsatox_1_1wallet_1_1Version.html</anchorfile>
      <anchor>a20dab0c5d81ab898410289f907c30630</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>minor</name>
      <anchorfile>d1/d54/structsatox_1_1wallet_1_1Version.html</anchorfile>
      <anchor>a8caab4dff1564cda7cdf4b148cb228d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>patch</name>
      <anchorfile>d1/d54/structsatox_1_1wallet_1_1Version.html</anchorfile>
      <anchor>ac7489dcee1371b7488de44e7ce411834</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>build</name>
      <anchorfile>d1/d54/structsatox_1_1wallet_1_1Version.html</anchorfile>
      <anchor>ae94a1fb156f1cf5fa42184d76a6db36e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>commit</name>
      <anchorfile>d1/d54/structsatox_1_1wallet_1_1Version.html</anchorfile>
      <anchor>ac469a96950879c0015290fb01b0903e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::VersionMessage</name>
    <filename>db/ddf/structsatox_1_1VersionMessage.html</filename>
    <member kind="function">
      <type></type>
      <name>VersionMessage</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>a07b511715154a06fd72e264326b52bf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>version</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>ab55c5350becfce166901eae65cc77430</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>services</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>a9a55dc8d02d40382605b00254d0c2a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>timestamp</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>a8fb23161c507f4fefc10ced3aacb4e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>addr_recv_services</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>a5afa89be9b901bd909939bc50e82b106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>addr_recv_ip</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>a988149091b8ae2799d6105180dd589a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>addr_recv_port</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>a06dee3ca1fff40158312066224827a74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>addr_from_services</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>a4e4a71c63c83a54b21f9d348c25b8f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>addr_from_ip</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>ae6a4d50c1ad8fefe492bb4073039454b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>addr_from_port</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>addc6e0318ee6a4e5377967fd2cab804f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>nonce</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>aef23153cac5433451f557656739c5bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>user_agent</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>aac8b3b2a824b79912d9268a63179d8b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>start_height</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>adaae642859c97022b7492e2a0bcf4bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>relay</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>a7bf5935a60357749d1afc099bf1c971d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>asset_support</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>ad9e1707715a5f1cbff7ae0f66a6ae982</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ipfs_support</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>a0fd47a6885b81e1053d0f6e85cb427fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>nft_support</name>
      <anchorfile>db/ddf/structsatox_1_1VersionMessage.html</anchorfile>
      <anchor>ac43d7b4f475614b9a80c7e0e5f6eb697</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::database::Wallet</name>
    <filename>df/df2/classsatox_1_1database_1_1Wallet.html</filename>
    <base>satox::database::DataModel</base>
    <member kind="function">
      <type>nlohmann::json</type>
      <name>toJson</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>a8d220147f12d52048e0bd3b4ccd35c2d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fromJson</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>a2ddc58dd934a7b8d97f50e2a3c8e217d</anchor>
      <arglist>(const nlohmann::json &amp;j) override</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTableName</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>aba62a1c0d0ed73e1a0da44d8758c0c84</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>ad751ee8aa31c012ff372cbf78cdd7592</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>address</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>aaa3304fe9ef0a20cd51690db4bcadb8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>a79d84a37b38181054547992660d8ecbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>status</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>ab90ac53a47ac0fb0963a9b0374cbf8f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>ad506e0c5a2fa2edee7e7b6e2979a03ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>createdAt</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>a2aefbdc18abe7a920a45ca1c3ec7d69d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>updatedAt</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>a7becef3b8b222b661187ee3e85ca57ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>assets</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>acd8da73f3b51eb2d2f56eeb312d327ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>nfts</name>
      <anchorfile>df/df2/classsatox_1_1database_1_1Wallet.html</anchorfile>
      <anchor>af650124274eda038c3ab4b9b0fb88cac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletManager::Wallet</name>
    <filename>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>a950c48ad98f7f5565e27e7b97687264e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>add8c46bd1015bb4b12d89fe75536b314</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>publicKey</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>a18b3e62eda1c80c206494d4afd7fd7a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>encryptedPrivateKey</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>ada835cc5084a4b4dcd7410cc71e43f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mnemonic</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>a95d08cca4f6cd0986defc93e7ae7fc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>seed</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>a71f7bbd37ff8efffa43f748f64d319db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>derivationPath</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>aa60fcc17e992fdb53e767c662cc79496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>createdAt</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>afb97c951f0ba3e6770017b74b11daba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastAccessed</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>a23872d9a8d5d2ce7362f3485c40f7953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>aaa7d66802dea4013d5704955f86eaf01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isMultisig</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>a91521d670ccbb357681f6a79056cc25c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>requiredSignatures</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>a7f168013c3b48c84f4ec1155dbb069ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>cosigners</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>ad2cf5d3110b41d37e6f2d8d97445fca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>hardwareWalletId</name>
      <anchorfile>d2/d29/structsatox_1_1wallet_1_1WalletManager_1_1Wallet.html</anchorfile>
      <anchor>a293baf2dbf27f01634e1b4c766f978c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletConfig</name>
    <filename>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>data_dir</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>ac4ce990e247c7fc6b2f95912ca04eedf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>network</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>abc97569fa9d73faf5e027ad6e8023656</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_encryption</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>a9c9a6043fe827ebad14e6e2f69c246f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>encryption_key</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>aa50b840afe665a98c9dbfbea7837dad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timeout_ms</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>a4ea4b3fc6e35b34ce9dff4815a084cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enable_backup</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>adf9b2f55c91404cbb81946bfca7f77c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>backup_dir</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>ab1159e769ad16e9709ad857bada949db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>a8f57470d50ba0278dd7ec5045ee82854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableLogging</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>a66c4ea69880c12fc22ee0e2ba49821cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>logPath</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>a9d75253397d237a30f63e5c2d4d83f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalConfig</name>
      <anchorfile>dc/dc6/structsatox_1_1wallet_1_1WalletConfig.html</anchorfile>
      <anchor>af1caf9062f0a83d707846b8736026660</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::wallet::WalletException</name>
    <filename>d3/de5/classsatox_1_1wallet_1_1WalletException.html</filename>
    <member kind="function">
      <type></type>
      <name>WalletException</name>
      <anchorfile>d3/de5/classsatox_1_1wallet_1_1WalletException.html</anchorfile>
      <anchor>a066d304b644fc253b87a23956b3d15b9</anchor>
      <arglist>(WalletErrorCode code, const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>d3/de5/classsatox_1_1wallet_1_1WalletException.html</anchorfile>
      <anchor>a21e0f638c20b9901329bc9b7bcdea005</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>WalletErrorCode</type>
      <name>code</name>
      <anchorfile>d3/de5/classsatox_1_1wallet_1_1WalletException.html</anchorfile>
      <anchor>a7588fbfebac98e2aad1b8a82f38ef0a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>message</name>
      <anchorfile>d3/de5/classsatox_1_1wallet_1_1WalletException.html</anchorfile>
      <anchor>adbbef2405e5290c37be913bf11879592</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletHealth</name>
    <filename>d1/df7/structsatox_1_1wallet_1_1WalletHealth.html</filename>
    <member kind="variable">
      <type>WalletStatus</type>
      <name>status</name>
      <anchorfile>d1/df7/structsatox_1_1wallet_1_1WalletHealth.html</anchorfile>
      <anchor>aceb85a0500e2dd3ab2d761d6c09912b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>healthy</name>
      <anchorfile>d1/df7/structsatox_1_1wallet_1_1WalletHealth.html</anchorfile>
      <anchor>a5b20d38571bce079bab5a636c5916e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>message</name>
      <anchorfile>d1/df7/structsatox_1_1wallet_1_1WalletHealth.html</anchorfile>
      <anchor>a6477cd050ae9d4b9453364b161d7dbab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastCheck</name>
      <anchorfile>d1/df7/structsatox_1_1wallet_1_1WalletHealth.html</anchorfile>
      <anchor>af0e88a8b16925c287c16215bd86b72e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>consecutiveFailures</name>
      <anchorfile>d1/df7/structsatox_1_1wallet_1_1WalletHealth.html</anchorfile>
      <anchor>ae7fb6a3759153db750d782d3fe754769</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>details</name>
      <anchorfile>d1/df7/structsatox_1_1wallet_1_1WalletHealth.html</anchorfile>
      <anchor>a9b6d6b6639458f5ea8e0db8d15b40868</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::WalletManager::WalletInfo</name>
    <filename>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>a09f7bacf5700f910ca0da8c898f1e256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>a1ee8b888cb45451cc4d9d3d0b064567e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WalletType</type>
      <name>type</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>af11ac9d9019b99d66f88e8a76bf25d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>WalletState</type>
      <name>state</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>a779bd29a14e6f74aca10cb0c57439041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>address</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>ad128365f827454a895985157f2233dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>publicKey</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>af7453207ce478cb0f1ab90ea2ddbb230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>encryptedPrivateKey</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>aa4be4aa960a17f66770522463ac9f7eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>passwordHash</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>a025703023a5a3a8ce4b80eb93bfe9fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>createdAt</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>a4ea6f59ff16faf647e8e4a980bdb4d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastModified</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>a42312e3f26082d568859d0283e5a5fff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>metadata</name>
      <anchorfile>d7/ded/structsatox_1_1core_1_1WalletManager_1_1WalletInfo.html</anchorfile>
      <anchor>ac77dc142da8fa893115d3e881e67333b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletInfo</name>
    <filename>d7/d8b/structsatox_1_1wallet_1_1WalletInfo.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>id</name>
      <anchorfile>d7/d8b/structsatox_1_1wallet_1_1WalletInfo.html</anchorfile>
      <anchor>a645c8fbc85dbc6a90fa063045a0d1888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>d7/d8b/structsatox_1_1wallet_1_1WalletInfo.html</anchorfile>
      <anchor>a33b50ddeb4dd81a2f7ca3c8b7febf085</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>network</name>
      <anchorfile>d7/d8b/structsatox_1_1wallet_1_1WalletInfo.html</anchorfile>
      <anchor>a732fae1e5b65714c02c0282d4bd983c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>created_time</name>
      <anchorfile>d7/d8b/structsatox_1_1wallet_1_1WalletInfo.html</anchorfile>
      <anchor>a8229873326a9445b9b12e277e2e19e60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_access_time</name>
      <anchorfile>d7/d8b/structsatox_1_1wallet_1_1WalletInfo.html</anchorfile>
      <anchor>a95e8a7d09681dce7bd1654ff8b390eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_encrypted</name>
      <anchorfile>d7/d8b/structsatox_1_1wallet_1_1WalletInfo.html</anchorfile>
      <anchor>a375d8bb15e645ef25affa504fd268362</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_locked</name>
      <anchorfile>d7/d8b/structsatox_1_1wallet_1_1WalletInfo.html</anchorfile>
      <anchor>a34b51c6b160ff602afeeb673466af7fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; std::string, std::string &gt;</type>
      <name>metadata</name>
      <anchorfile>d7/d8b/structsatox_1_1wallet_1_1WalletInfo.html</anchorfile>
      <anchor>a172ce97cfc44bcc63990220b5e5554d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::wallet::WalletInitializationException</name>
    <filename>d6/da2/classsatox_1_1wallet_1_1WalletInitializationException.html</filename>
    <base>satox::wallet::WalletException</base>
    <member kind="function">
      <type></type>
      <name>WalletInitializationException</name>
      <anchorfile>d6/da2/classsatox_1_1wallet_1_1WalletInitializationException.html</anchorfile>
      <anchor>a330e36c18f4e4a503e3917ac66413c05</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::core::WalletManager</name>
    <filename>d3/d26/classsatox_1_1core_1_1WalletManager.html</filename>
    <class kind="struct">satox::core::WalletManager::TransactionInfo</class>
    <class kind="struct">satox::core::WalletManager::WalletInfo</class>
    <class kind="struct">satox::core::WalletManager::WalletStats</class>
    <member kind="enumeration">
      <type></type>
      <name>WalletType</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a96002f5afb5578569624a65aba759f53</anchor>
      <arglist></arglist>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="a96002f5afb5578569624a65aba759f53a27178471f2c4019c872d1545a0f154c7">HD</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="a96002f5afb5578569624a65aba759f53a456d016bd133625e5036aa9a556f2730">LEGACY</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="a96002f5afb5578569624a65aba759f53ae50f553ee62b9fcbec1b8c8120c29050">MULTISIG</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="a96002f5afb5578569624a65aba759f53a8d7fb2367cbb043ea4f82b5fb812c8f7">WATCH_ONLY</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WalletState</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>afc47cdebb0cae60e8408ed150d45e453</anchor>
      <arglist></arglist>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="afc47cdebb0cae60e8408ed150d45e453add652546039b18970b8dcf2cff824268">UNINITIALIZED</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="afc47cdebb0cae60e8408ed150d45e453adee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="afc47cdebb0cae60e8408ed150d45e453a298a2da567ae581f8886ef8d533107f4">UNLOCKED</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="afc47cdebb0cae60e8408ed150d45e453aaeff3f3f2731681b2ed6a27786a56203">LOCKED</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="afc47cdebb0cae60e8408ed150d45e453abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TransactionType</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>ae02dad344835bdf41d2a5cb205073822</anchor>
      <arglist></arglist>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="ae02dad344835bdf41d2a5cb205073822a548e51fa67d541384e9585adf0db95dc">SEND</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="ae02dad344835bdf41d2a5cb205073822a42ddaaef1ffd16ad35901150add8f8f2">RECEIVE</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="ae02dad344835bdf41d2a5cb205073822ad6b863459e847e4743d1fe1ae086ee71">STAKE</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="ae02dad344835bdf41d2a5cb205073822a95784bf5457f0eb13f33cf8465f86162">UNSTAKE</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="ae02dad344835bdf41d2a5cb205073822a976833ce4acf2300c23fa43050f1ca30">ASSET_ISSUE</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="ae02dad344835bdf41d2a5cb205073822a2c2686223461fa11d37be464976eca37">ASSET_TRANSFER</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="ae02dad344835bdf41d2a5cb205073822a43567e0d57842ca4b341f4827da33e42">ASSET_BURN</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="ae02dad344835bdf41d2a5cb205073822afbf62c8b6fa8035ecb71fc3d763209df">NFT_MINT</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="ae02dad344835bdf41d2a5cb205073822ae272565590a2564438ba19f3a09e1a59">NFT_TRANSFER</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="ae02dad344835bdf41d2a5cb205073822afe047ee8f7586a63308525f7db61e562">NFT_BURN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TransactionState</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a8ed2613847db75cf984364a5554a977d</anchor>
      <arglist></arglist>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="a8ed2613847db75cf984364a5554a977dac69f06e1a9b016d133907b4e5f5864d2">PENDING</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="a8ed2613847db75cf984364a5554a977da1e314c89b115f3a21ca40f76d231bcd0">CONFIRMED</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="a8ed2613847db75cf984364a5554a977dab9e14d9b2886bcff408b85aefa780419">FAILED</enumvalue>
      <enumvalue file="d3/d26/classsatox_1_1core_1_1WalletManager.html" anchor="a8ed2613847db75cf984364a5554a977dac69a1e32a105a29d95e6e7a883188d62">DROPPED</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, WalletState)&gt;</type>
      <name>WalletCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>adc88076cdc39652e6e1277ec30a6ade1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, TransactionState)&gt;</type>
      <name>TransactionCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>aa2e5d647a0a783fa9b5c6edbfdf096af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, double)&gt;</type>
      <name>BalanceCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a93f4f5918ce480397a92912b21e6f37d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>aa296d45b53eff3fee87f058980417e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a7619c855da946f7ac089a542d0882902</anchor>
      <arglist>(const nlohmann::json &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>ac42105e29990a13888a0908a00e0dd29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createWallet</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a73afb330d2adaeef5b277a42577572aa</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;name, WalletType type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importWallet</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a6946ad1c73fdba75ad5716b50f5e01b4</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;name, const std::string &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportWallet</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a453b3d8c408dc96b632c5b5188464de4</anchor>
      <arglist>(const std::string &amp;id, std::string &amp;privateKey)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteWallet</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a3ea782f03aca7b6e0300f286eedab870</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lockWallet</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a222e8bcd61e0edf74c31ac90ddf2d8f6</anchor>
      <arglist>(const std::string &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unlockWallet</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>acdc6b0ad4bf901830863aadf74bad27c</anchor>
      <arglist>(const std::string &amp;id, const std::string &amp;password)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWalletLocked</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a855f67856f65c2ecec9a50666c817615</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWalletExists</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a466ec870d8523d51bbe42ddb625768a0</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>WalletInfo</type>
      <name>getWalletInfo</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>aebb6cdbd4caf2201d038b5f2d0f6549a</anchor>
      <arglist>(const std::string &amp;id) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WalletInfo &gt;</type>
      <name>getAllWallets</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>aeeae3d58bff6d938659f8c55cb1ca212</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WalletInfo &gt;</type>
      <name>getWalletsByType</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a9220ed325dd7270ce2e84e40b68ce1b4</anchor>
      <arglist>(WalletType type) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; WalletInfo &gt;</type>
      <name>getWalletsByState</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a5d2e85b256ac3bf5d1377e6bf0be2864</anchor>
      <arglist>(WalletState state) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generateAddress</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a1ce3239092568d1e16af115d2a36b61e</anchor>
      <arglist>(const std::string &amp;walletId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateAddress</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a3e15dca5b2c8e738f45eda85ce1f0f90</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getAddressFromPrivateKey</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a9318f7f9b73281b72c30e530bc358bb9</anchor>
      <arglist>(const std::string &amp;privateKey) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getPublicKeyFromPrivateKey</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a929ed0c8460afadc7746e2b258b03219</anchor>
      <arglist>(const std::string &amp;privateKey) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createTransaction</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a3d767d0ce6fb4e538b5343e853fbeb17</anchor>
      <arglist>(const std::string &amp;walletId, TransactionType type, const std::string &amp;toAddress, double amount, const std::string &amp;assetId=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>signTransaction</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a3811c890bad07f64a37d0a21053eaa5e</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;txId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastTransaction</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>ac3a6b7cbcfa22050e40440b478e12a64</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;txId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>confirmTransaction</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a330226194431dd788f751422b7e37d39</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;txId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>failTransaction</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a114eceb79ca8e5c4763b75f017ac00ee</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;txId)</arglist>
    </member>
    <member kind="function">
      <type>TransactionInfo</type>
      <name>getTransactionInfo</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>af855e60aab721830ee55f8b1480761d0</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;txId) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TransactionInfo &gt;</type>
      <name>getTransactionsByType</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>ad2e99ca2f48bde28e637f4ef7570722a</anchor>
      <arglist>(const std::string &amp;walletId, TransactionType type) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; TransactionInfo &gt;</type>
      <name>getTransactionsByState</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a31596ba473e3dafae2cb95d6ac106ee8</anchor>
      <arglist>(const std::string &amp;walletId, TransactionState state) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBalance</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>ad0c4c9bfd363107dc4ba11c3f277035c</anchor>
      <arglist>(const std::string &amp;walletId) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAssetBalance</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a51ff1747055997f9b62830d44a102362</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;assetId) const</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>getAllBalances</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a4e54e7491e90023a0aa2ae53630a4093</anchor>
      <arglist>(const std::string &amp;walletId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateBalance</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a6bed1e7f10f9f39150af58a225a6884e</anchor>
      <arglist>(const std::string &amp;walletId, double amount)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateAssetBalance</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>ab6c24c4bcac5218d70485ff29ed3893c</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;assetId, double amount)</arglist>
    </member>
    <member kind="function">
      <type>WalletStats</type>
      <name>getStats</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a735b47e6e85d2134fdbb9de342b8d9e7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetStats</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a0a3855dabe52a8ce2165d11eeabf1f14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>enableStats</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a45af7c9068d4173939e22467b11674e2</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerWalletCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a152c9dd19a5a6b40896df202d6e147d8</anchor>
      <arglist>(WalletCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerTransactionCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a9b225c2fd7ae887f6dc1c0fff2eefa0c</anchor>
      <arglist>(TransactionCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerBalanceCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a7f07138c85f938c80018711f3d909173</anchor>
      <arglist>(BalanceCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a8424ea545a118413398e92a816288844</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterWalletCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>ad812a0a50613f94020a4a0de2248031a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterTransactionCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>aa7bda663f4d0bb97583b24fb0e4c0af4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterBalanceCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>aa1828871aecc7ae80846baa980cdb272</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterErrorCallback</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a6f0b4ac802d1db4325e058789c6fd6bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a81ff7276a799f88b93ea217a9f17fbba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>af4eee3d4528fcbfef3dbc5cc94206337</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLastError</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>a5fcbf26a9ce9ffa30f0c749b85ebe4f3</anchor>
      <arglist>(const std::string &amp;error)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WalletManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d3/d26/classsatox_1_1core_1_1WalletManager.html</anchorfile>
      <anchor>acc98cf7173f9690951680fb0f755a38e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::wallet::WalletManager</name>
    <filename>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</filename>
    <class kind="struct">satox::wallet::WalletManager::Asset</class>
    <class kind="struct">satox::wallet::WalletManager::HardwareWallet</class>
    <class kind="struct">satox::wallet::WalletManager::IPFSData</class>
    <class kind="struct">satox::wallet::WalletManager::KeyPair</class>
    <class kind="struct">satox::wallet::WalletManager::MultisigTransaction</class>
    <class kind="struct">satox::wallet::WalletManager::Wallet</class>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ae05ea56012d59b610ecbd1d8a0cbcf38</anchor>
      <arglist></arglist>
      <enumvalue file="d0/d87/classsatox_1_1wallet_1_1WalletManager.html" anchor="ae05ea56012d59b610ecbd1d8a0cbcf38a18ff74f43da410c5529f7d6fca84f115">ACTIVE</enumvalue>
      <enumvalue file="d0/d87/classsatox_1_1wallet_1_1WalletManager.html" anchor="ae05ea56012d59b610ecbd1d8a0cbcf38aaeff3f3f2731681b2ed6a27786a56203">LOCKED</enumvalue>
      <enumvalue file="d0/d87/classsatox_1_1wallet_1_1WalletManager.html" anchor="ae05ea56012d59b610ecbd1d8a0cbcf38a055c1a591abb0e8cd86dc969727bcc0b">DISABLED</enumvalue>
      <enumvalue file="d0/d87/classsatox_1_1wallet_1_1WalletManager.html" anchor="ae05ea56012d59b610ecbd1d8a0cbcf38a458a8449a43243d5beb82516b475b4ac">PENDING_SIGNATURE</enumvalue>
      <enumvalue file="d0/d87/classsatox_1_1wallet_1_1WalletManager.html" anchor="ae05ea56012d59b610ecbd1d8a0cbcf38a38afd7ae34bd5e3e6fc170d8b09178a3">EXPIRED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>HardwareWalletType</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a5ac942a4a4215a75ae7cc0683781a797</anchor>
      <arglist></arglist>
      <enumvalue file="d0/d87/classsatox_1_1wallet_1_1WalletManager.html" anchor="a5ac942a4a4215a75ae7cc0683781a797a90edd2c2f8e60f79a1b54485b1efdba1">LEDGER</enumvalue>
      <enumvalue file="d0/d87/classsatox_1_1wallet_1_1WalletManager.html" anchor="a5ac942a4a4215a75ae7cc0683781a797ab6cc5aa6361e60113b6d4c43c4c07ac3">TREZOR</enumvalue>
      <enumvalue file="d0/d87/classsatox_1_1wallet_1_1WalletManager.html" anchor="a5ac942a4a4215a75ae7cc0683781a797a19cee3a92c4c9ee75c9165e730e67fc9">COLD_CARD</enumvalue>
      <enumvalue file="d0/d87/classsatox_1_1wallet_1_1WalletManager.html" anchor="a5ac942a4a4215a75ae7cc0683781a797a51a8bd948716e6d8e0f0e699e449d157">BITBOX</enumvalue>
      <enumvalue file="d0/d87/classsatox_1_1wallet_1_1WalletManager.html" anchor="a5ac942a4a4215a75ae7cc0683781a797a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const WalletInfo &amp;)&gt;</type>
      <name>WalletCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a806fe9b884ca38825d47385cefe2497b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const AddressInfo &amp;)&gt;</type>
      <name>AddressCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>acfeb26f424cc9fb82aac53abf2992a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const TransactionInfo &amp;)&gt;</type>
      <name>TransactionCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a38c59a1cdaa51669bb718e75135ab40a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>af6b878381af6e1c9b808b9da21980006</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, uint32_t)&gt;</type>
      <name>ProgressCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ad2d984c7896a73cc2d05dcb45908d91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const Wallet &amp;, Status)&gt;</type>
      <name>WalletCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>abb7773022c48dc11ae9b183560c22ed4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const HardwareWallet &amp;, bool)&gt;</type>
      <name>HardwareWalletCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a2fa19f04fbcf6600efeecbaea1f7b759</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const MultisigTransaction &amp;)&gt;</type>
      <name>TransactionCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a96d389a3f00859109316c7340ced142b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WalletManager</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aefbca1c7ff637271d58b89bb8db75742</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WalletManager</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a07bcfb4b3acd64c849a4e4810b4fcfb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a15fbc1a3c514ea20c3ebdee3f53ffbe8</anchor>
      <arglist>(const WalletConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a0084e5a2e69853cc5515e670486e4576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>afda677acb03535b54ab7abfe6b0e76b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a70e6d7e07698d3bbe7508d409ba05ec9</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;password, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>importWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aeb3d34db200507fa3451d64854990395</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;mnemonic, const std::string &amp;password, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a865ceb9b2221e33ed1435766e7815f7e</anchor>
      <arglist>(const std::string &amp;wallet_id)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; WalletInfo &gt;</type>
      <name>getWalletInfo</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a7cfb6f176160836e4b56a3005675034c</anchor>
      <arglist>(const std::string &amp;wallet_id) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listWallets</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a9deb9afeb6f63c93baabcaa3cfb4e525</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lockWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ac57b86910ee0e394df43dbc78cdfb620</anchor>
      <arglist>(const std::string &amp;wallet_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unlockWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a63257f2e3179833a7b67acd21b482e1a</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;password)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWalletLocked</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a7b12254f0d6ba982ec4dfa300756058b</anchor>
      <arglist>(const std::string &amp;wallet_id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateWalletMetadata</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a48732eb5c7cbc6d820a327e41c62dec1</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>generateAddress</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ad5181d3d0265b60346a769c9809635eb</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeAddress</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a44c9bb0daee7bcfd10f815f6b1eefdc2</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;address)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; AddressInfo &gt;</type>
      <name>getAddressInfo</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ad6c314f7dd35385e5f84faaeec947689</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listAddresses</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a04f6a90391faeb1f289f46ba6a0914c2</anchor>
      <arglist>(const std::string &amp;wallet_id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateAddressMetadata</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a2d82c1ae94d95ab38974267a55f2def1</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;address, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createTransaction</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a767100f6c323c7f9b2ffb30a15036140</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;from_address, const std::string &amp;to_address, uint64_t amount, uint64_t fee, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>signTransaction</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aa7738d07ac790f29929ef96144fede2c</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;txid, const std::string &amp;password)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastTransaction</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a85d9fdd3bb01f5fe78e3830b6cb54f48</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;txid)</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; TransactionInfo &gt;</type>
      <name>getTransactionInfo</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a09e35d3da9febb048c6e535e654c051d</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;txid) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>listTransactions</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>af8cfd7cc21ca569ec5aafac1a46dc222</anchor>
      <arglist>(const std::string &amp;wallet_id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateTransactionMetadata</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a9ed0a78eae7cb806f76c1fbd044c67ff</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;txid, const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getBalance</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>abd14f9e2ee2e97ee84ce9b3f8ee0df0f</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>getTotalBalance</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>af992b56bc3d57b38b30bdf7521471617</anchor>
      <arglist>(const std::string &amp;wallet_id) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backupWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a540df7cd314901e91d157339b09ce9f7</anchor>
      <arglist>(const std::string &amp;wallet_id, const std::string &amp;backup_path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restoreWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ae18771ce5a1285b9210f73d8dbf1db2f</anchor>
      <arglist>(const std::string &amp;backup_path, const std::string &amp;password)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyBackup</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a5670e6423e47ea3dfcd257348aa14694</anchor>
      <arglist>(const std::string &amp;backup_path) const</arglist>
    </member>
    <member kind="function">
      <type>std::optional&lt; WalletStatistics &gt;</type>
      <name>getStatistics</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a148d783fa65d1df2aee20f7fc178887b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerWalletCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>afac9ed0c6da3bbc7d8d6ffa618fd30eb</anchor>
      <arglist>(WalletCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerAddressCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ac48b6a4533cf4597e151e2405d8b917a</anchor>
      <arglist>(AddressCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerTransactionCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a6c716b375daeb8bf6fd9ba1e1246d911</anchor>
      <arglist>(TransactionCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerErrorCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>af71fc43d68181b9940225a1a70eea560</anchor>
      <arglist>(ErrorCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerProgressCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>abc87aca7e8373b1a10f818a665236289</anchor>
      <arglist>(ProgressCallback callback)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WalletManager</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aefbca1c7ff637271d58b89bb8db75742</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WalletManager</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a07bcfb4b3acd64c849a4e4810b4fcfb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>initialize</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ae23fcec39a05a22876b342530773fb19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a0084e5a2e69853cc5515e670486e4576</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ae72cbb5baeea30731e0aee896f02f0f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHealthy</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a8890c850e6c15a65264d2e438d606211</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aa5afa26477800c511698bf4a6eee457e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>createMultisigWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a478a50d88e8f9a62401c981539fda72a</anchor>
      <arglist>(const std::string &amp;name, uint32_t requiredSignatures, const std::vector&lt; std::string &gt; &amp;cosigners)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>importWalletFromMnemonic</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a66844a2cb8e10ddf1f765869706c0fbf</anchor>
      <arglist>(const std::string &amp;mnemonic, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>importWalletFromPrivateKey</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aa62c5b85678ae8441be81bcc9aa2ea5a</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;privateKey, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exportWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a1194c35e9d493699e75c91b1258f21d5</anchor>
      <arglist>(const std::string &amp;walletId, std::string &amp;mnemonic)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ad31c66e1f0f015cf734ba4d40aa98512</anchor>
      <arglist>(const std::string &amp;walletId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lockWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a1957f68c4585fd44136d81a63d873ed7</anchor>
      <arglist>(const std::string &amp;walletId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unlockWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a1b2eb4bd63f03d0b4e89574b97dc8eeb</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;password)</arglist>
    </member>
    <member kind="function">
      <type>Status</type>
      <name>getWalletStatus</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a15a06a7bc2c3b3ff8f01eee72fc1bb3d</anchor>
      <arglist>(const std::string &amp;walletId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>acb42e85f72a7fe54a10263f02eb2e27c</anchor>
      <arglist>(const std::string &amp;walletId, Wallet &amp;wallet) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; HardwareWallet &gt;</type>
      <name>listHardwareWallets</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aa6800b1373d133e4ba5e81f050ee08c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connectHardwareWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a27288cea5161bbdf702954f28ae7c157</anchor>
      <arglist>(const std::string &amp;walletId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnectHardwareWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aea4c25d1324ff13cd96ac897632afd8c</anchor>
      <arglist>(const std::string &amp;walletId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isHardwareWalletConnected</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aaf4cd8bf98487fd74fa4e8ad68b6a169</anchor>
      <arglist>(const std::string &amp;walletId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getHardwareWalletInfo</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ae30afa701d2672738ad0fce454961c78</anchor>
      <arglist>(const std::string &amp;walletId, HardwareWallet &amp;wallet) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>signWithHardwareWallet</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aae4c0c8ad0e8d6efd6f7b6064439861e</anchor>
      <arglist>(const std::string &amp;walletId, const std::vector&lt; uint8_t &gt; &amp;data, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createMultisigTransaction</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ae79ea039e823e2ac6c5981c3d48254f6</anchor>
      <arglist>(const std::string &amp;walletId, const std::vector&lt; std::string &gt; &amp;inputs, const std::vector&lt; std::string &gt; &amp;outputs, uint64_t amount, const std::string &amp;assetName, MultisigTransaction &amp;transaction)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>signMultisigTransaction</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a8d721c4aec1d2f8832affe17365b1d96</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;txid, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifyMultisigTransaction</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a01ff3542b4d48d0cf58dd5ade4a9f11e</anchor>
      <arglist>(const MultisigTransaction &amp;transaction) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>broadcastMultisigTransaction</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a8c75a7ddb86f7fa83c330ede6b0a5597</anchor>
      <arglist>(const std::string &amp;txid)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MultisigTransaction &gt;</type>
      <name>getPendingMultisigTransactions</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a66deee7b3bef2a903e11db8c479a2144</anchor>
      <arglist>(const std::string &amp;walletId) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deriveKeyPair</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a919c6af22a932a4528712b334d6d2df0</anchor>
      <arglist>(const std::string &amp;walletId, KeyPair &amp;keyPair)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deriveHardwareKeyPair</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a7ecff10c0412edd5b77dc2bcc27b14f8</anchor>
      <arglist>(const std::string &amp;walletId, uint32_t index, KeyPair &amp;keyPair)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validateAddress</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>ac42b60ea55c018f4968701879bf9b13e</anchor>
      <arglist>(const std::string &amp;address) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>deriveAddress</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a310328d798af49f755c3c5c70f9a1898</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;publicKey) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>signMessage</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a9770cb903b3c46bd0a67ff4c0dcfaa1a</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;message, std::vector&lt; uint8_t &gt; &amp;signature)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>verifySignature</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>afade7c98e4dfa9f972b9ad0f9f0620ca</anchor>
      <arglist>(const std::string &amp;address, const std::string &amp;message, const std::vector&lt; uint8_t &gt; &amp;signature) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>backupKeys</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aa288760b828de6531c0728a12da3bae8</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;backupPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>restoreKeys</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a9db8dfaf38be6ffb5e2255824b40e387</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;backupPath)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>createAsset</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aa3a912707ff3c3e34470e31cedb069fc</anchor>
      <arglist>(const std::string &amp;walletId, const Asset &amp;asset)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transferAsset</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a6ea1e45fa0f04ef6b115ae84b15a4067</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;assetName, const std::string &amp;toAddress, uint64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAssetBalance</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a46cf5428fbcc6a2a2b1ae44955602017</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;assetName, uint64_t &amp;balance)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Asset &gt;</type>
      <name>getWalletAssets</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a3265609ee9a9abb48f1c022934bb9931</anchor>
      <arglist>(const std::string &amp;walletId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addIPFSData</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a3ac736f79b72d84817ec736aeeba59c1</anchor>
      <arglist>(const std::string &amp;walletId, const std::vector&lt; uint8_t &gt; &amp;data, std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIPFSData</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a51077b9709989c9dcb9b2057145223c5</anchor>
      <arglist>(const std::string &amp;hash, std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pinIPFSData</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a7c9769546ccee5d485d15e55bbe4cd49</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>unpinIPFSData</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a601f8effa84c9bce52b5d35241d43164</anchor>
      <arglist>(const std::string &amp;walletId, const std::string &amp;hash)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; IPFSData &gt;</type>
      <name>getWalletIPFSData</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aaea33c4a70a92af27e58f64f0c21236d</anchor>
      <arglist>(const std::string &amp;walletId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a554fef35d64427c74d366dd5dfe191b5</anchor>
      <arglist>(WalletCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a59483f38ff5a06efa79d10dca46550d3</anchor>
      <arglist>(WalletCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerHardwareWalletCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a1410c2d2678eb1e3be69dadf4263bd1f</anchor>
      <arglist>(HardwareWalletCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterHardwareWalletCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a9b5e79b1e75280c73dbd88f121a24ab4</anchor>
      <arglist>(HardwareWalletCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerTransactionCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a6c716b375daeb8bf6fd9ba1e1246d911</anchor>
      <arglist>(TransactionCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unregisterTransactionCallback</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>aa78311d87f03991fb50d1fdeff69e360</anchor>
      <arglist>(TransactionCallback callback)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLastError</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>afda677acb03535b54ab7abfe6b0e76b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLastError</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a5a5aff9b0d6753f892f01d7c1f9adabf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static WalletManager &amp;</type>
      <name>getInstance</name>
      <anchorfile>d0/d87/classsatox_1_1wallet_1_1WalletManager.html</anchorfile>
      <anchor>a0e1f254336ebb2b1fe0bb4b6a91eaa4d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>satox::wallet::WalletOperationException</name>
    <filename>dc/d95/classsatox_1_1wallet_1_1WalletOperationException.html</filename>
    <base>satox::wallet::WalletException</base>
    <member kind="function">
      <type></type>
      <name>WalletOperationException</name>
      <anchorfile>dc/d95/classsatox_1_1wallet_1_1WalletOperationException.html</anchorfile>
      <anchor>a594c07b3793a4525f8a693fa4d374787</anchor>
      <arglist>(const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletResult</name>
    <filename>d4/d78/structsatox_1_1wallet_1_1WalletResult.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>success</name>
      <anchorfile>d4/d78/structsatox_1_1wallet_1_1WalletResult.html</anchorfile>
      <anchor>a2efcb729fb89ce14f39bba5f11bf3774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>d4/d78/structsatox_1_1wallet_1_1WalletResult.html</anchorfile>
      <anchor>a3516741ee2e02d8f783be4a847af96fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>data</name>
      <anchorfile>d4/d78/structsatox_1_1wallet_1_1WalletResult.html</anchorfile>
      <anchor>a6c12ebf76714e28382a2c70d889cca4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::milliseconds</type>
      <name>duration</name>
      <anchorfile>d4/d78/structsatox_1_1wallet_1_1WalletResult.html</anchorfile>
      <anchor>a136b175b6957e5d063bcf7f05144e5d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletStatistics</name>
    <filename>de/da3/structsatox_1_1wallet_1_1WalletStatistics.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>total_wallets</name>
      <anchorfile>de/da3/structsatox_1_1wallet_1_1WalletStatistics.html</anchorfile>
      <anchor>aba7bc109d81b8a108d090e293563f1d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>total_addresses</name>
      <anchorfile>de/da3/structsatox_1_1wallet_1_1WalletStatistics.html</anchorfile>
      <anchor>aa722ad8a15027f0dbb7cbd20c708cf00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>total_transactions</name>
      <anchorfile>de/da3/structsatox_1_1wallet_1_1WalletStatistics.html</anchorfile>
      <anchor>a2866fce732beff1ede699f8c52d549dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>total_balance</name>
      <anchorfile>de/da3/structsatox_1_1wallet_1_1WalletStatistics.html</anchorfile>
      <anchor>a2d8637bb95c1c17f29b829e3a0dac9cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>last_sync_time</name>
      <anchorfile>de/da3/structsatox_1_1wallet_1_1WalletStatistics.html</anchorfile>
      <anchor>afe3de4d753b039a4907a7917353c1907</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::WalletManager::WalletStats</name>
    <filename>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>totalWallets</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>a26112566a6532aa5f1aa257235f883f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>activeWallets</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>a7dc38bc2c8d356e9a4ec18f0cff1fdc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>lockedWallets</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>a351b313d7dec005c2a2ad1f4f48a5395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>errorWallets</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>a34b650027f705f4cbc9fcc1a1f8d2601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>totalTransactions</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>a57ade0ae3ca3baf9f0dd9ae51cd134ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>pendingTransactions</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>aaa84f207e467413ec18dd5c0fdb3aeb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>confirmedTransactions</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>a18f6b295f5bdfce2d7aff49811c699b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>failedTransactions</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>a34afeb9147e4029c781b7eaa27d4b96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>totalBalance</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>ad1b53dddf4ee79f2e7e68bb1248e76cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>assetBalances</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>a976b5352626732e3d2c13cbc07408ff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastUpdated</name>
      <anchorfile>d8/d1d/structsatox_1_1core_1_1WalletManager_1_1WalletStats.html</anchorfile>
      <anchor>a7959d2a1bb6e143c66e01e855833d208</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::wallet::WalletStats</name>
    <filename>dd/dcf/structsatox_1_1wallet_1_1WalletStats.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>totalOperations</name>
      <anchorfile>dd/dcf/structsatox_1_1wallet_1_1WalletStats.html</anchorfile>
      <anchor>add48d5ab09e705d1e164869570b7f1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>successfulOperations</name>
      <anchorfile>dd/dcf/structsatox_1_1wallet_1_1WalletStats.html</anchorfile>
      <anchor>a1e20281bc3953f3fdc7130eb6e46aaf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>failedOperations</name>
      <anchorfile>dd/dcf/structsatox_1_1wallet_1_1WalletStats.html</anchorfile>
      <anchor>af72cc9182ab105b4c88ac8e0d5160a93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::chrono::system_clock::time_point</type>
      <name>lastOperation</name>
      <anchorfile>dd/dcf/structsatox_1_1wallet_1_1WalletStats.html</anchorfile>
      <anchor>aa669300ae8b3969185c3ef1ecf0f302b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>averageOperationTime</name>
      <anchorfile>dd/dcf/structsatox_1_1wallet_1_1WalletStats.html</anchorfile>
      <anchor>a0c7639644428a40e19a8a20e4f9d36e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>nlohmann::json</type>
      <name>additionalStats</name>
      <anchorfile>dd/dcf/structsatox_1_1wallet_1_1WalletStats.html</anchorfile>
      <anchor>a128a71cf85ffe9dc25a590b3a1c714cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>satox::core::APIManager::WebSocketMessage</name>
    <filename>d7/dd0/structsatox_1_1core_1_1APIManager_1_1WebSocketMessage.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>d7/dd0/structsatox_1_1core_1_1APIManager_1_1WebSocketMessage.html</anchorfile>
      <anchor>a502672359af09757a1a94d41e6bc19b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>data</name>
      <anchorfile>d7/dd0/structsatox_1_1core_1_1APIManager_1_1WebSocketMessage.html</anchorfile>
      <anchor>a395144de742c5a5085c4caa6ac54b6ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_final</name>
      <anchorfile>d7/dd0/structsatox_1_1core_1_1APIManager_1_1WebSocketMessage.html</anchorfile>
      <anchor>a3737e50f764fe00b8d3e14e64fd76719</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox</name>
    <filename>df/daa/namespacesatox.html</filename>
    <namespace>satox::asset</namespace>
    <namespace>satox::blockchain</namespace>
    <namespace>satox::core</namespace>
    <namespace>satox::database</namespace>
    <namespace>satox::ipfs</namespace>
    <namespace>satox::network</namespace>
    <namespace>satox::nft</namespace>
    <namespace>satox::rpc_proxy</namespace>
    <namespace>satox::security</namespace>
    <namespace>satox::wallet</namespace>
    <class kind="struct">satox::BlockHeader</class>
    <class kind="struct">satox::InvVector</class>
    <class kind="class">satox::IPFSClient</class>
    <class kind="class">satox::NFT</class>
    <class kind="class">satox::NFTEventListener</class>
    <class kind="class">satox::NFTManager</class>
    <class kind="struct">satox::OutPoint</class>
    <class kind="struct">satox::P2PMessage</class>
    <class kind="struct">satox::P2PMessageHeader</class>
    <class kind="class">satox::RateLimiter</class>
    <class kind="class">satox::RPCManager</class>
    <class kind="class">satox::ThreadPool</class>
    <class kind="struct">satox::Transaction</class>
    <class kind="struct">satox::TxIn</class>
    <class kind="struct">satox::TxOut</class>
    <class kind="struct">satox::VersionMessage</class>
    <member kind="enumeration">
      <type></type>
      <name>P2PMessageType</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>ad79bbcb7f0f87ba6f076287b2ac5cbd8</anchor>
      <arglist></arglist>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a021321e8c168ba3ae39ce3a2e7b3ec87">VERSION</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a71b8e1ef4ef6163a22737f81e8ccba26">VERACK</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8ae9c57f970b06b5e4e71eb298eb76a70b">ADDR</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a29d6f6fdd03ec410fce653724c115f95">INV</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a356d92fcd2984aedf52f30c9453c6cdc">GETDATA</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a91d203f256719cce68e22a243858099c">GETBLOCKS</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8ae89244bb2f789fda678f72f3eb31ec35">GETHEADERS</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a869036c9d97cf6593c6f1c2ccfd99a49">TX</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a4d34f53389ed7f28ca91fc31ea360a66">BLOCK</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a1242249ca7c09fa7634e292cf2819f85">HEADERS</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8aaa05e241820412656924628a2755a39b">GETADDR</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a9bb9239ff286274c8363021f3d82b782">MEMPOOL</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8ae07ff41a486c27c095a15898dcca34d1">PING</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a15c94917c8795679ecb650ed760c27f0">PONG</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a59b228d9fec9b88833bfe5d812ed8ad4">REJECT</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8ab78ba1bb9a29122b8c7c95a888520375">SENDHEADERS</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a9241e399d9d36c370eed49f41dbcb852">FEEFILTER</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8aa2247525433d55b6ca2d65b2fbe1f0da">SENDCMPCT</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a42fe1421c4ee89b91f37c43a770cb580">CMPCTBLOCK</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a46db4dfbb204d457c8a0c6e9ae129d08">GETBLOCKTXN</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8aabf2d377f556063c6762e684369de851">BLOCKTXN</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a5a3a9300fec880f9634e271a66bde419">ASSET</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8ad3f359ba2ed04989b98aca8d5a6c661f">GETASSET</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8aca13bb0eed2d46a6958efca54f8cc258">ASSETALLOCATION</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a87394874fb106457ea0a7bdb1114ea45">GETASSETALLOCATION</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a6abe0c37d965e4a8bd11571378674642">IPFS</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8aba3308ba5efb54bc96cc79de34858d2a">GETIPFS</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8aa692c529f241845ae00b47284e09e76a">NFT</enumvalue>
      <enumvalue file="df/daa/namespacesatox.html" anchor="ad79bbcb7f0f87ba6f076287b2ac5cbd8a14027cf286c7cdbc743aa8a042e99876">GETNFT</enumvalue>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>doubleSHA256</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>ab0ce8271214b47af3952d156ceecadfe</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>calculateChecksum</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>ae80ce1f7ea517a4383fae0c21b9eb377</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>messageTypeToString</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>a0851ccbd9270ab4a7c4a69ac6749d1e4</anchor>
      <arglist>(P2PMessageType type)</arglist>
    </member>
    <member kind="function">
      <type>P2PMessageType</type>
      <name>stringToMessageType</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>a9fb2253f461d62b0ff58953968ddefe6</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>serializeMessage</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>a07fa45fd0fed5c5a7c48b26fa685dcad</anchor>
      <arglist>(const P2PMessage &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>P2PMessage</type>
      <name>deserializeMessage</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>ab631626a1a7d1e1ea09c09fab02357c5</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>serializeVersionMessage</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>abea63b3e740b658f49103d6afe6814f5</anchor>
      <arglist>(const VersionMessage &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>VersionMessage</type>
      <name>deserializeVersionMessage</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>a48479ac3eced91178c75abd370de67fa</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>serializeInvVector</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>ab581cea649e11ccf26aa3f63b2853fed</anchor>
      <arglist>(const InvVector &amp;inv)</arglist>
    </member>
    <member kind="function">
      <type>InvVector</type>
      <name>deserializeInvVector</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>a6f43980ebb2c6635c8b183520a347a03</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>serializeBlockHeader</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>a05025d4ca7cc5a0127f8e8e2a0710fd8</anchor>
      <arglist>(const BlockHeader &amp;header)</arglist>
    </member>
    <member kind="function">
      <type>BlockHeader</type>
      <name>deserializeBlockHeader</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>ae12ebf70a36449dee02ccaa5ed8e6ccc</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; uint8_t &gt;</type>
      <name>serializeTransaction</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>a62c443a1d89cbb4f831050b076ae2dd2</anchor>
      <arglist>(const Transaction &amp;tx)</arglist>
    </member>
    <member kind="function">
      <type>Transaction</type>
      <name>deserializeTransaction</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>a79444cf47969fb204700b754fc303184</anchor>
      <arglist>(const std::vector&lt; uint8_t &gt; &amp;data)</arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>SATOX_MAGIC</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>acedca280d9ed53401598c0d3c4304767</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr int32_t</type>
      <name>PROTOCOL_VERSION</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>a085b8098c1f4a8e64fec619f10a48637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr const char *</type>
      <name>USER_AGENT</name>
      <anchorfile>df/daa/namespacesatox.html</anchorfile>
      <anchor>ad71b4ffb17c1f6aeddf46f8778f2a73c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::asset</name>
    <filename>d5/d84/namespacesatox_1_1asset.html</filename>
    <class kind="struct">satox::asset::Asset</class>
    <class kind="struct">satox::asset::AssetBurnRequest</class>
    <class kind="struct">satox::asset::AssetConfig</class>
    <class kind="struct">satox::asset::AssetCreationRequest</class>
    <class kind="class">satox::asset::AssetException</class>
    <class kind="class">satox::asset::AssetInitializationException</class>
    <class kind="class">satox::asset::AssetManager</class>
    <class kind="struct">satox::asset::AssetMetadata</class>
    <class kind="class">satox::asset::AssetOperationException</class>
    <class kind="struct">satox::asset::AssetReissueRequest</class>
    <class kind="struct">satox::asset::AssetResult</class>
    <class kind="struct">satox::asset::AssetStats</class>
    <class kind="struct">satox::asset::AssetTransferRequest</class>
    <class kind="struct">satox::asset::AssetVerificationResult</class>
    <class kind="class">satox::asset::SimpleLogger</class>
    <class kind="struct">satox::asset::Version</class>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;event, bool success)&gt;</type>
      <name>AssetCallback</name>
      <anchorfile>d5/d84/namespacesatox_1_1asset.html</anchorfile>
      <anchor>af2cd969dc6aee8f7892518cb91c05e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;operation, bool success)&gt;</type>
      <name>OperationCallback</name>
      <anchorfile>d5/d84/namespacesatox_1_1asset.html</anchorfile>
      <anchor>a12005847b6201d1a7e2d723b0e242abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;operation, const std::string &amp;error)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d5/d84/namespacesatox_1_1asset.html</anchorfile>
      <anchor>a270927fb7a302c662b317dcb2eb7467e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AssetErrorCode</name>
      <anchorfile>d5/d84/namespacesatox_1_1asset.html</anchorfile>
      <anchor>a5f24e823a37106716f7b777afaae972f</anchor>
      <arglist></arglist>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fa9a10f345b0f755d461a8673a5e9ef6b4">UNKNOWN_ERROR</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972faf295a0c3e37c94f078e1c5476479132d">INVALID_ARGUMENT</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fa02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fa1940a630a2a25829533b90f9be04f184">ALREADY_INITIALIZED</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fa0d30777007362ccc9e8b2d0d22e4db13">NOT_RUNNING</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fae72544c6de918198c7e098d9c9152b1e">ALREADY_RUNNING</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fa8f8d49d3d0842358e0fe8f43601d8537">OPERATION_FAILED</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fa2fa475b43d744661c4c9e1dbd9840278">VALIDATION_ERROR</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972face94bad90093a6a2538689ddfbb5462f">TIMEOUT_ERROR</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fa4a739fa42dcdbdb8dfe5a5e4d9c5a627">RESOURCE_EXHAUSTED</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fa255df50c140519133f1489ab44a389d9">PERMISSION_DENIED</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a5f24e823a37106716f7b777afaae972fa5e6a8de74c8f7d4b04d91a3dc3bf7659">INVALID_STATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AssetState</name>
      <anchorfile>d5/d84/namespacesatox_1_1asset.html</anchorfile>
      <anchor>af34bec9dc2938390418760627d80aeea</anchor>
      <arglist></arglist>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="af34bec9dc2938390418760627d80aeeaadd652546039b18970b8dcf2cff824268">UNINITIALIZED</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="af34bec9dc2938390418760627d80aeeaa86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="af34bec9dc2938390418760627d80aeeaadee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="af34bec9dc2938390418760627d80aeeaabb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="af34bec9dc2938390418760627d80aeeaab9984206799a7f9fe4bd1b6c18db8112">SHUTDOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AssetType</name>
      <anchorfile>d5/d84/namespacesatox_1_1asset.html</anchorfile>
      <anchor>aa4c5068043f9c46eb2120944b33b2a2c</anchor>
      <arglist></arglist>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="aa4c5068043f9c46eb2120944b33b2a2ca94c8aa2452bccd82ee129b46f7c4be79">TOKEN</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="aa4c5068043f9c46eb2120944b33b2a2caa692c529f241845ae00b47284e09e76a">NFT</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="aa4c5068043f9c46eb2120944b33b2a2ca1697ce5de24c38be23506ad142fa9184">UTILITY</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="aa4c5068043f9c46eb2120944b33b2a2ca219ce424cc367fba8a5a0210792d4dc0">SECURITY</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="aa4c5068043f9c46eb2120944b33b2a2ca4078b56c15c2087a7d223a5bdf104838">CURRENCY</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AssetStatus</name>
      <anchorfile>d5/d84/namespacesatox_1_1asset.html</anchorfile>
      <anchor>a16ed6f3af7681a878181b0efed4a289e</anchor>
      <arglist></arglist>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a16ed6f3af7681a878181b0efed4a289ea18ff74f43da410c5529f7d6fca84f115">ACTIVE</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a16ed6f3af7681a878181b0efed4a289ea081912e034fd835fdda076251f2cd586">FROZEN</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a16ed6f3af7681a878181b0efed4a289ea5d7e41d3ac0abca5974598807df874ea">DESTROYED</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a16ed6f3af7681a878181b0efed4a289eac69f06e1a9b016d133907b4e5f5864d2">PENDING</enumvalue>
      <enumvalue file="d5/d84/namespacesatox_1_1asset.html" anchor="a16ed6f3af7681a878181b0efed4a289ea9cc8ad3d99798c6726d4af0bd14e49d2">REJECTED</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::blockchain</name>
    <filename>d9/db3/namespacesatox_1_1blockchain.html</filename>
    <class kind="struct">satox::blockchain::BatchConfig</class>
    <class kind="class">satox::blockchain::Block</class>
    <class kind="class">satox::blockchain::Blockchain</class>
    <class kind="struct">satox::blockchain::BlockchainConfig</class>
    <class kind="class">satox::blockchain::BlockchainException</class>
    <class kind="struct">satox::blockchain::BlockchainHealth</class>
    <class kind="class">satox::blockchain::BlockchainInitializationException</class>
    <class kind="class">satox::blockchain::BlockchainManager</class>
    <class kind="class">satox::blockchain::BlockchainOperationException</class>
    <class kind="struct">satox::blockchain::BlockchainResult</class>
    <class kind="struct">satox::blockchain::BlockchainStatistics</class>
    <class kind="struct">satox::blockchain::BlockchainStats</class>
    <class kind="struct">satox::blockchain::BlockInfo</class>
    <class kind="struct">satox::blockchain::CacheConfig</class>
    <class kind="struct">satox::blockchain::ConnectionPoolConfig</class>
    <class kind="struct">satox::blockchain::ErrorRecoveryConfig</class>
    <class kind="class">satox::blockchain::Kawpow</class>
    <class kind="class">satox::blockchain::LRUCache</class>
    <class kind="struct">satox::blockchain::MiningInfo</class>
    <class kind="struct">satox::blockchain::NetworkConfig</class>
    <class kind="struct">satox::blockchain::RecoveryOperation</class>
    <class kind="class">satox::blockchain::Transaction</class>
    <class kind="struct">satox::blockchain::TransactionInfo</class>
    <class kind="struct">satox::blockchain::Version</class>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, bool)&gt;</type>
      <name>BlockchainCallback</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a9f2f52a8555a4323a5b32d1a32711967</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; Block &gt; &amp;)&gt;</type>
      <name>BlockCallback</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a57a9f5d2c530de2903f0c3bb26eae6cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::shared_ptr&lt; Transaction &gt; &amp;)&gt;</type>
      <name>TransactionCallback</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a2ae63ea50736204b1ec76da17acbba96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a56325b0674b90ce933b62eb7a02b27c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlockchainState</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a11215e89ebd13f25dd875df960a5e461</anchor>
      <arglist></arglist>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a11215e89ebd13f25dd875df960a5e461add652546039b18970b8dcf2cff824268">UNINITIALIZED</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a11215e89ebd13f25dd875df960a5e461a86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a11215e89ebd13f25dd875df960a5e461adee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a11215e89ebd13f25dd875df960a5e461a9a14f95e151eec641316e7c784ce832d">CONNECTING</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a11215e89ebd13f25dd875df960a5e461aa5afd6edd5336d91316964e493936858">CONNECTED</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a11215e89ebd13f25dd875df960a5e461abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a11215e89ebd13f25dd875df960a5e461ab9984206799a7f9fe4bd1b6c18db8112">SHUTDOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlockchainType</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>afd0dc108e4a76af0f73d94ebd0f79e7c</anchor>
      <arglist></arglist>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="afd0dc108e4a76af0f73d94ebd0f79e7ca9ff86ed474dbbbbe88b28ee45ec70994">MAINNET</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="afd0dc108e4a76af0f73d94ebd0f79e7cace8400aeb0c47ce5cd8e37a3a54e557b">TESTNET</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="afd0dc108e4a76af0f73d94ebd0f79e7cad10d9759c6b71ea71a78e3a55bafc4d5">REGTEST</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlockchainErrorCode</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a8fc569c8c46948aa0dd279139402b570</anchor>
      <arglist></arglist>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570ad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570a9a10f345b0f755d461a8673a5e9ef6b4">UNKNOWN_ERROR</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570af295a0c3e37c94f078e1c5476479132d">INVALID_ARGUMENT</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570a02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570a1940a630a2a25829533b90f9be04f184">ALREADY_INITIALIZED</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570a0d30777007362ccc9e8b2d0d22e4db13">NOT_RUNNING</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570ae72544c6de918198c7e098d9c9152b1e">ALREADY_RUNNING</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570a8f8d49d3d0842358e0fe8f43601d8537">OPERATION_FAILED</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570a2fa475b43d744661c4c9e1dbd9840278">VALIDATION_ERROR</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570ace94bad90093a6a2538689ddfbb5462f">TIMEOUT_ERROR</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570a4a739fa42dcdbdb8dfe5a5e4d9c5a627">RESOURCE_EXHAUSTED</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570a255df50c140519133f1489ab44a389d9">PERMISSION_DENIED</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="a8fc569c8c46948aa0dd279139402b570a5e6a8de74c8f7d4b04d91a3dc3bf7659">INVALID_STATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BlockchainStatus</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>aaa366cd5c7e6574a2f8a57cc1eac26ec</anchor>
      <arglist></arglist>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="aaa366cd5c7e6574a2f8a57cc1eac26eca696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="aaa366cd5c7e6574a2f8a57cc1eac26eca86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="aaa366cd5c7e6574a2f8a57cc1eac26ecadee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="aaa366cd5c7e6574a2f8a57cc1eac26eca43491564ebcfd38568918efbd6e840fd">RUNNING</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="aaa366cd5c7e6574a2f8a57cc1eac26eca09d4d696b4e935115b9313e3c412509a">STOPPED</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="aaa366cd5c7e6574a2f8a57cc1eac26ecabb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="d9/db3/namespacesatox_1_1blockchain.html" anchor="aaa366cd5c7e6574a2f8a57cc1eac26eca055c1a591abb0e8cd86dc969727bcc0b">DISABLED</enumvalue>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_EPOCH_LENGTH</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>adfb125e8990f68403b73826fee41220e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_PERIOD_LENGTH</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a0c1a95070df097a828f9958b8dc8fe13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_CACHE_ROUNDS</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a4a297fb2d92fa34eaf0cf1d4e808161c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_DATASET_PARENTS</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a1358ad213d6118f16cbbf3c6e54da9fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_CACHE_BYTES_INIT</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a0f36d5d1271fdf88bf1d53d9c7d6db10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_CACHE_BYTES_GROWTH</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>acd327407a2ebae58367c3b584bc6fe4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_EPOCH_MIX_BYTES</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>ac3515025f0221c8b9b37afc26e5a75d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_HASH_BYTES</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>aa9b559827cc484ff11f1bd0ee1e31419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_NONCE_BYTES</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a934f8f9ed4f7fd525c370e1f445aa315</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_HEADER_BYTES</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>a553308b8eeed384443ad2ca8552d2b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_MIX_BYTES</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>aada5dccd80bdc23ae7c601f41ba28250</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_ACCESSES</name>
      <anchorfile>d9/db3/namespacesatox_1_1blockchain.html</anchorfile>
      <anchor>afdf94191eede2d19ffed3e866a58729f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::core</name>
    <filename>d9/dd3/namespacesatox_1_1core.html</filename>
    <namespace>satox::core::cloud</namespace>
    <class kind="class">satox::core::APIManager</class>
    <class kind="struct">satox::core::Asset</class>
    <class kind="class">satox::core::AssetManager</class>
    <class kind="struct">satox::core::Block</class>
    <class kind="class">satox::core::BlockchainManager</class>
    <class kind="class">satox::core::CacheManager</class>
    <class kind="struct">satox::core::ChainState</class>
    <class kind="struct">satox::core::CloudLogEntry</class>
    <class kind="struct">satox::core::CloudMetrics</class>
    <class kind="class">satox::core::CloudMonitoring</class>
    <class kind="struct">satox::core::CloudMonitoringConfig</class>
    <class kind="struct">satox::core::ComponentStatus</class>
    <class kind="class">satox::core::ConfigManager</class>
    <class kind="struct">satox::core::ConfigSection</class>
    <class kind="struct">satox::core::ConfigValue</class>
    <class kind="struct">satox::core::CoreComponentStats</class>
    <class kind="struct">satox::core::CoreConfig</class>
    <class kind="class">satox::core::CoreException</class>
    <class kind="struct">satox::core::CoreHealth</class>
    <class kind="class">satox::core::CoreInitializationException</class>
    <class kind="class">satox::core::CoreManager</class>
    <class kind="class">satox::core::CoreOperationException</class>
    <class kind="struct">satox::core::CoreResult</class>
    <class kind="struct">satox::core::CoreStats</class>
    <class kind="struct">satox::core::DatabaseConnection</class>
    <class kind="class">satox::core::DatabaseManager</class>
    <class kind="class">satox::core::EventManager</class>
    <class kind="struct">satox::core::FirebaseConfig</class>
    <class kind="struct">satox::core::FirebaseConnection</class>
    <class kind="class">satox::core::FirebaseManager</class>
    <class kind="struct">satox::core::Input</class>
    <class kind="class">satox::core::IPFSManager</class>
    <class kind="class">satox::core::IShutdownable</class>
    <class kind="class">satox::core::LoggingManager</class>
    <class kind="class">satox::core::MerkleTree</class>
    <class kind="class">satox::core::MessageHandler</class>
    <class kind="struct">satox::core::NetworkConfig</class>
    <class kind="class">satox::core::NetworkConfigManager</class>
    <class kind="class">satox::core::NetworkInterface</class>
    <class kind="class">satox::core::NetworkManager</class>
    <class kind="struct">satox::core::NetworkMessage</class>
    <class kind="struct">satox::core::NetworkResponse</class>
    <class kind="struct">satox::core::NFT</class>
    <class kind="class">satox::core::NFTManager</class>
    <class kind="struct">satox::core::NFTMetadata</class>
    <class kind="struct">satox::core::OsSystemInfo</class>
    <class kind="struct">satox::core::Output</class>
    <class kind="class">satox::core::PerformanceOptimization</class>
    <class kind="class">satox::core::PluginManager</class>
    <class kind="class">satox::core::ProofOfWork</class>
    <class kind="class">satox::core::QuantumManager</class>
    <class kind="class">satox::core::SatoxManager</class>
    <class kind="class">satox::core::SecurityManager</class>
    <class kind="struct">satox::core::SupabaseConfig</class>
    <class kind="struct">satox::core::SupabaseConnection</class>
    <class kind="class">satox::core::SupabaseManager</class>
    <class kind="struct">satox::core::SystemInfo</class>
    <class kind="struct">satox::core::Transaction</class>
    <class kind="class">satox::core::TransactionManager</class>
    <class kind="struct">satox::core::Version</class>
    <class kind="class">satox::core::WalletManager</class>
    <member kind="typedef">
      <type>std::function&lt; void(const CloudLogEntry &amp;)&gt;</type>
      <name>CloudLogCallback</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a131c9cfd8f0ae4a52ef873afb6aa42cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, CloudOperationStatus)&gt;</type>
      <name>CloudAlertCallback</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a2bc3e1594f45134c831226c69dc487de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(CloudProvider, bool)&gt;</type>
      <name>CloudHealthCallback</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>affe807e65ea2b1f2bb17013421bd26a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(CloudProvider, const CloudMetrics &amp;)&gt;</type>
      <name>CloudMetricsCallback</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a494860b0e33aad15f89c555f1b9df4ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;)&gt;</type>
      <name>ErrorCallback</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a3a4a5137d19f5f5ead5876807b033e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, ComponentState)&gt;</type>
      <name>StatusCallback</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a9b3fa6865dea2c1d869d22e10c4ac898</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void()&gt;</type>
      <name>ShutdownCallback</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>ad21027336d3dfa264649a416848e1d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>IPFSManager::ContentInfo</type>
      <name>ContentInfo</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a229b8e6c3efa12bd3266901a745e663c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>IPFSManager::ContentType</type>
      <name>ContentType</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a5ec53d24e5454ce8935c14d23f23e456</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>IPFSManager::IPFSStats</type>
      <name>IPFSStats</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a7b28ef64a58c163fd65f1209e7edd8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CloudProvider</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>aa04635de796a51678078f049e46c6526</anchor>
      <arglist></arglist>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aa04635de796a51678078f049e46c6526a6d832e11bf487bb87d0d438663b26d36">SUPABASE</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aa04635de796a51678078f049e46c6526a696adc79a202a5ebdfd0d16aea732893">FIREBASE</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aa04635de796a51678078f049e46c6526a4847e034bb0a55fcbc8a3380d6a3ab80">AWS</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aa04635de796a51678078f049e46c6526a71335a48a021ae2aeb7df636ba3d2483">AZURE</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aa04635de796a51678078f049e46c6526a43a097161c73d6bec57d78ce9a44fb2d">GOOGLE_CLOUD</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CloudOperation</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a5c5b3713a3a50c218c8777997d41af4a</anchor>
      <arglist></arglist>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aab57e2519e26151feacdbe52076bc39ec">CONNECT</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aadd7cd0eb57db08d4f98abc48e5593462">DISCONNECT</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aa5662080872eece1e1ceeec5750198283">QUERY</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aae6bed345f53943469741d7295552fcd4">TRANSACTION</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aa45b73ef479821e71be9f69a190f2bb86">SUBSCRIBE</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aa62b18b8274e34fd701d0b684a32c633f">UNSUBSCRIBE</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aa5963e9e09d4377b30d30799d150a1da8">AUTHENTICATE</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aa8dff5f89b87ebf91a1ecc1dbed3a6fbb">UPLOAD</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aa631152daefc8201c641fa7a37c397dce">DOWNLOAD</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aa32f68a60cef40faedbc6af20298c1a1e">DELETE</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aa15a8022d0ed9cd9c2a2e756822703eb4">UPDATE</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a5c5b3713a3a50c218c8777997d41af4aa294ce20cdefa29be3be0735cb62e715d">CREATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CloudOperationStatus</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a012b45b27d5238ebb49f10cd8ea3c018</anchor>
      <arglist></arglist>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a012b45b27d5238ebb49f10cd8ea3c018ad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a012b45b27d5238ebb49f10cd8ea3c018ab9e14d9b2886bcff408b85aefa780419">FAILED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a012b45b27d5238ebb49f10cd8ea3c018a070a0fb40f6c308ab544b227660aadff">TIMEOUT</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a012b45b27d5238ebb49f10cd8ea3c018ac0cc02c3b3d55abb7bfb49ddbb4866c8">RETRY</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a012b45b27d5238ebb49f10cd8ea3c018a9f935beb31030ad0d4d26126c0f39bf2">CANCELLED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ComponentState</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>ab8ad03431c721ab59a3fb0d0541c11ec</anchor>
      <arglist></arglist>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="ab8ad03431c721ab59a3fb0d0541c11ecadd652546039b18970b8dcf2cff824268">UNINITIALIZED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="ab8ad03431c721ab59a3fb0d0541c11eca86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="ab8ad03431c721ab59a3fb0d0541c11eca43491564ebcfd38568918efbd6e840fd">RUNNING</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="ab8ad03431c721ab59a3fb0d0541c11eca323facdc30df77817126b699c7cf49f3">RESTARTING</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="ab8ad03431c721ab59a3fb0d0541c11ecabb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="ab8ad03431c721ab59a3fb0d0541c11ecab9984206799a7f9fe4bd1b6c18db8112">SHUTDOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DatabaseType</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a625a69373d4a274ab6ed5a5fd2b0c51d</anchor>
      <arglist></arglist>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a625a69373d4a274ab6ed5a5fd2b0c51da624f0d1fb84ced47f6b4d05e8ab82c7b">SQLITE</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a625a69373d4a274ab6ed5a5fd2b0c51da3efccad6e4b6b2044be88d6b86505a5b">POSTGRESQL</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a625a69373d4a274ab6ed5a5fd2b0c51da14498b83dd1667a0c78f4fdaf5afbf4b">MYSQL</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a625a69373d4a274ab6ed5a5fd2b0c51da5fae8295948da8c244681d7128882023">REDIS</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a625a69373d4a274ab6ed5a5fd2b0c51da941b4882303c4ec4af3922da066b398b">MONGODB</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a625a69373d4a274ab6ed5a5fd2b0c51dadfdef5cd5ffa240845f810e8d389c576">ROCKSDB</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a625a69373d4a274ab6ed5a5fd2b0c51da7014705458ee3cf0192f6aa52cfddea5">MEMORY</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CoreErrorCode</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a70c767c421c102d9481f4a13a2d312ad</anchor>
      <arglist></arglist>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312adad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312ada9a10f345b0f755d461a8673a5e9ef6b4">UNKNOWN_ERROR</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312adaf295a0c3e37c94f078e1c5476479132d">INVALID_ARGUMENT</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312ada02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312ada1940a630a2a25829533b90f9be04f184">ALREADY_INITIALIZED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312ada0d30777007362ccc9e8b2d0d22e4db13">NOT_RUNNING</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312adae72544c6de918198c7e098d9c9152b1e">ALREADY_RUNNING</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312ada8f8d49d3d0842358e0fe8f43601d8537">OPERATION_FAILED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312ada2fa475b43d744661c4c9e1dbd9840278">VALIDATION_ERROR</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312adace94bad90093a6a2538689ddfbb5462f">TIMEOUT_ERROR</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312ada4a739fa42dcdbdb8dfe5a5e4d9c5a627">RESOURCE_EXHAUSTED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312ada255df50c140519133f1489ab44a389d9">PERMISSION_DENIED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a70c767c421c102d9481f4a13a2d312ada5e6a8de74c8f7d4b04d91a3dc3bf7659">INVALID_STATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NetworkType</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>ad2e5933f3e7d61a462095d066ca7fa47</anchor>
      <arglist></arglist>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="ad2e5933f3e7d61a462095d066ca7fa47a9ff86ed474dbbbbe88b28ee45ec70994">MAINNET</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="ad2e5933f3e7d61a462095d066ca7fa47ace8400aeb0c47ce5cd8e37a3a54e557b">TESTNET</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="ad2e5933f3e7d61a462095d066ca7fa47ad10d9759c6b71ea71a78e3a55bafc4d5">REGTEST</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CoreStatus</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>aaa7ca677e5e438eacd4f667f61cff1a6</anchor>
      <arglist></arglist>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aaa7ca677e5e438eacd4f667f61cff1a6a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aaa7ca677e5e438eacd4f667f61cff1a6a86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aaa7ca677e5e438eacd4f667f61cff1a6adee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aaa7ca677e5e438eacd4f667f61cff1a6a43491564ebcfd38568918efbd6e840fd">RUNNING</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aaa7ca677e5e438eacd4f667f61cff1a6a09d4d696b4e935115b9313e3c412509a">STOPPED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aaa7ca677e5e438eacd4f667f61cff1a6abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="aaa7ca677e5e438eacd4f667f61cff1a6a055c1a591abb0e8cd86dc969727bcc0b">DISABLED</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Status</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a0314d644435466cc53bafcfcf0d85e62</anchor>
      <arglist></arglist>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a0314d644435466cc53bafcfcf0d85e62ac69f06e1a9b016d133907b4e5f5864d2">PENDING</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a0314d644435466cc53bafcfcf0d85e62a1e314c89b115f3a21ca40f76d231bcd0">CONFIRMED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a0314d644435466cc53bafcfcf0d85e62ab9e14d9b2886bcff408b85aefa780419">FAILED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a0314d644435466cc53bafcfcf0d85e62a9f935beb31030ad0d4d26126c0f39bf2">CANCELLED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a0314d644435466cc53bafcfcf0d85e62a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConnectionState</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a87668c69e2d47a98627fe4cadedf8678</anchor>
      <arglist></arglist>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a87668c69e2d47a98627fe4cadedf8678a99c8ce56e7ab246445d3b134724428f3">DISCONNECTED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a87668c69e2d47a98627fe4cadedf8678a9a14f95e151eec641316e7c784ce832d">CONNECTING</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a87668c69e2d47a98627fe4cadedf8678aa5afd6edd5336d91316964e493936858">CONNECTED</enumvalue>
      <enumvalue file="d9/dd3/namespacesatox_1_1core.html" anchor="a87668c69e2d47a98627fe4cadedf8678abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>to_json</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>a8bede3a6ca772eb825a7bdd4b5b1f521</anchor>
      <arglist>(nlohmann::json &amp;j, const TransactionManager::Transaction &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>from_json</name>
      <anchorfile>d9/dd3/namespacesatox_1_1core.html</anchorfile>
      <anchor>ae055d836a66df8caf3788e455db79a3a</anchor>
      <arglist>(const nlohmann::json &amp;j, TransactionManager::Transaction &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::core::cloud</name>
    <filename>dd/dc3/namespacesatox_1_1core_1_1cloud.html</filename>
    <member kind="function">
      <type>void</type>
      <name>to_json</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>a04f55b113e6ed5c85e963a726d603d21</anchor>
      <arglist>(nlohmann::json &amp;j, const AWSConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>from_json</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>ac0a95ceb2f4bec369993a611d026f257</anchor>
      <arglist>(const nlohmann::json &amp;j, AWSConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>to_json</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>aff23fba0ad4e61aa0bd76007d3f84ee3</anchor>
      <arglist>(nlohmann::json &amp;j, const AzureConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>from_json</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>a6a736ecc060f7457b7fbb28521de48b2</anchor>
      <arglist>(const nlohmann::json &amp;j, AzureConfig &amp;config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>WriteCallback</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>a532bd43bdd068dd318d9944ffb331191</anchor>
      <arglist>(void *contents, size_t size, size_t nmemb, std::string *userp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>ReadCallback</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>ad4fd8fe7d2dfe2fa1817b55f7a8be532</anchor>
      <arglist>(void *ptr, size_t size, size_t nmemb, std::string *userp)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>base64_encode</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>ad02ec3b943ae78c780f97f08b76f4381</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>url_encode</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>a48a5299e9b02a0bb1d3eea1424e8d75f</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>to_json</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>a65a994da171f611ce184dcafba9544ac</anchor>
      <arglist>(nlohmann::json &amp;j, const FirebaseConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>from_json</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>a162eb9395ee8b1ed0d80df51b4bffad6</anchor>
      <arglist>(const nlohmann::json &amp;j, FirebaseConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>to_json</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>ae6e9a9e0a17cb940c47c3b57b12eff68</anchor>
      <arglist>(nlohmann::json &amp;j, const GoogleCloudConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>from_json</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>a7d7378a31e21eea876f6f27f6df48136</anchor>
      <arglist>(const nlohmann::json &amp;j, GoogleCloudConfig &amp;config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>WriteCallback</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>a532bd43bdd068dd318d9944ffb331191</anchor>
      <arglist>(void *contents, size_t size, size_t nmemb, std::string *userp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>to_json</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>a15ec664842089f3005525908cfecc6a7</anchor>
      <arglist>(nlohmann::json &amp;j, const SupabaseConfig &amp;config)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>from_json</name>
      <anchorfile>dd/dc3/namespacesatox_1_1core_1_1cloud.html</anchorfile>
      <anchor>aab6bd12f59b4737cb7702f9504f64e42</anchor>
      <arglist>(const nlohmann::json &amp;j, SupabaseConfig &amp;config)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::database</name>
    <filename>db/dfd/namespacesatox_1_1database.html</filename>
    <class kind="class">satox::database::Asset</class>
    <class kind="class">satox::database::Block</class>
    <class kind="class">satox::database::ConnectionPool</class>
    <class kind="struct">satox::database::DatabaseConfig</class>
    <class kind="struct">satox::database::DatabaseData</class>
    <class kind="class">satox::database::DatabaseException</class>
    <class kind="struct">satox::database::DatabaseHealth</class>
    <class kind="class">satox::database::DatabaseInitializationException</class>
    <class kind="class">satox::database::DatabaseManager</class>
    <class kind="class">satox::database::DatabaseOperationException</class>
    <class kind="struct">satox::database::DatabaseResult</class>
    <class kind="struct">satox::database::DatabaseStats</class>
    <class kind="class">satox::database::DataModel</class>
    <class kind="class">satox::database::IPFSFile</class>
    <class kind="class">satox::database::MigrationManager</class>
    <class kind="class">satox::database::NFT</class>
    <class kind="class">satox::database::QueryOptimizer</class>
    <class kind="struct">satox::database::TableData</class>
    <class kind="class">satox::database::Transaction</class>
    <class kind="class">satox::database::TransactionManager</class>
    <class kind="struct">satox::database::Version</class>
    <class kind="class">satox::database::Wallet</class>
    <member kind="typedef">
      <type>std::atomic&lt; T &gt;</type>
      <name>atomic_t</name>
      <anchorfile>db/dfd/namespacesatox_1_1database.html</anchorfile>
      <anchor>a1a2bdcf028c85ca91a7fdfa0731d9b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DatabaseErrorCode</name>
      <anchorfile>db/dfd/namespacesatox_1_1database.html</anchorfile>
      <anchor>a39a52ecf35dfba5b1e247d97a3c9c198</anchor>
      <arglist></arglist>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198ad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198a9a10f345b0f755d461a8673a5e9ef6b4">UNKNOWN_ERROR</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198af295a0c3e37c94f078e1c5476479132d">INVALID_ARGUMENT</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198a02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198a1940a630a2a25829533b90f9be04f184">ALREADY_INITIALIZED</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198a0d30777007362ccc9e8b2d0d22e4db13">NOT_RUNNING</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198ae72544c6de918198c7e098d9c9152b1e">ALREADY_RUNNING</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198a8f8d49d3d0842358e0fe8f43601d8537">OPERATION_FAILED</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198a2fa475b43d744661c4c9e1dbd9840278">VALIDATION_ERROR</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198ace94bad90093a6a2538689ddfbb5462f">TIMEOUT_ERROR</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198a4a739fa42dcdbdb8dfe5a5e4d9c5a627">RESOURCE_EXHAUSTED</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198a255df50c140519133f1489ab44a389d9">PERMISSION_DENIED</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198a5e6a8de74c8f7d4b04d91a3dc3bf7659">INVALID_STATE</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a39a52ecf35dfba5b1e247d97a3c9c198a7a348bf6d29011d629d13513e5382240">INITIALIZATION_ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DatabaseStatus</name>
      <anchorfile>db/dfd/namespacesatox_1_1database.html</anchorfile>
      <anchor>a4792725d5bfd72dfdb5c539acc8f8052</anchor>
      <arglist></arglist>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a4792725d5bfd72dfdb5c539acc8f8052a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a4792725d5bfd72dfdb5c539acc8f8052a86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a4792725d5bfd72dfdb5c539acc8f8052adee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a4792725d5bfd72dfdb5c539acc8f8052a43491564ebcfd38568918efbd6e840fd">RUNNING</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a4792725d5bfd72dfdb5c539acc8f8052a09d4d696b4e935115b9313e3c412509a">STOPPED</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a4792725d5bfd72dfdb5c539acc8f8052abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="db/dfd/namespacesatox_1_1database.html" anchor="a4792725d5bfd72dfdb5c539acc8f8052a055c1a591abb0e8cd86dc969727bcc0b">DISABLED</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTo</name>
      <anchorfile>db/dfd/namespacesatox_1_1database.html</anchorfile>
      <anchor>a2360208dfe9f3544f16b76599283d5cd</anchor>
      <arglist>(const DatabaseResult &amp;result, std::ostream *os)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::ipfs</name>
    <filename>d2/dc8/namespacesatox_1_1ipfs.html</filename>
    <class kind="struct">satox::ipfs::Config</class>
    <class kind="class">satox::ipfs::ContentDistribution</class>
    <class kind="class">satox::ipfs::ContentStorage</class>
    <class kind="struct">satox::ipfs::IPFSConfig</class>
    <class kind="struct">satox::ipfs::IpfsConfig</class>
    <class kind="struct">satox::ipfs::IPFSContent</class>
    <class kind="class">satox::ipfs::IpfsException</class>
    <class kind="struct">satox::ipfs::IpfsHealth</class>
    <class kind="class">satox::ipfs::IpfsInitializationException</class>
    <class kind="class">satox::ipfs::IPFSManager</class>
    <class kind="class">satox::ipfs::IpfsOperationException</class>
    <class kind="struct">satox::ipfs::IpfsResult</class>
    <class kind="struct">satox::ipfs::IpfsStats</class>
    <class kind="struct">satox::ipfs::Version</class>
    <member kind="enumeration">
      <type></type>
      <name>IpfsErrorCode</name>
      <anchorfile>d2/dc8/namespacesatox_1_1ipfs.html</anchorfile>
      <anchor>a8c1da3bc908711c54e408fd829debe8c</anchor>
      <arglist></arglist>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8cad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8ca9a10f345b0f755d461a8673a5e9ef6b4">UNKNOWN_ERROR</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8caf295a0c3e37c94f078e1c5476479132d">INVALID_ARGUMENT</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8ca02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8ca1940a630a2a25829533b90f9be04f184">ALREADY_INITIALIZED</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8ca0d30777007362ccc9e8b2d0d22e4db13">NOT_RUNNING</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8cae72544c6de918198c7e098d9c9152b1e">ALREADY_RUNNING</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8ca8f8d49d3d0842358e0fe8f43601d8537">OPERATION_FAILED</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8ca2fa475b43d744661c4c9e1dbd9840278">VALIDATION_ERROR</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8cace94bad90093a6a2538689ddfbb5462f">TIMEOUT_ERROR</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8ca4a739fa42dcdbdb8dfe5a5e4d9c5a627">RESOURCE_EXHAUSTED</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8ca255df50c140519133f1489ab44a389d9">PERMISSION_DENIED</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="a8c1da3bc908711c54e408fd829debe8ca5e6a8de74c8f7d4b04d91a3dc3bf7659">INVALID_STATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>IpfsStatus</name>
      <anchorfile>d2/dc8/namespacesatox_1_1ipfs.html</anchorfile>
      <anchor>aa8ee1382052dd4c608ba1497ea2afd3e</anchor>
      <arglist></arglist>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="aa8ee1382052dd4c608ba1497ea2afd3ea696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="aa8ee1382052dd4c608ba1497ea2afd3ea86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="aa8ee1382052dd4c608ba1497ea2afd3eadee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="aa8ee1382052dd4c608ba1497ea2afd3ea43491564ebcfd38568918efbd6e840fd">RUNNING</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="aa8ee1382052dd4c608ba1497ea2afd3ea09d4d696b4e935115b9313e3c412509a">STOPPED</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="aa8ee1382052dd4c608ba1497ea2afd3eabb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="d2/dc8/namespacesatox_1_1ipfs.html" anchor="aa8ee1382052dd4c608ba1497ea2afd3ea055c1a591abb0e8cd86dc969727bcc0b">DISABLED</enumvalue>
    </member>
    <member kind="variable" static="yes">
      <type>static IPFSManager *</type>
      <name>instance</name>
      <anchorfile>d2/dc8/namespacesatox_1_1ipfs.html</anchorfile>
      <anchor>a3294d1aa3cd3d04a1d7705d82673117c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::network</name>
    <filename>d6/d65/namespacesatox_1_1network.html</filename>
    <class kind="class">satox::network::CertificateRevocation</class>
    <class kind="class">satox::network::LetsEncryptManager</class>
    <class kind="struct">satox::network::NetworkConfig</class>
    <class kind="class">satox::network::NetworkException</class>
    <class kind="struct">satox::network::NetworkHealth</class>
    <class kind="class">satox::network::NetworkInitializationException</class>
    <class kind="class">satox::network::NetworkManager</class>
    <class kind="class">satox::network::NetworkOperationException</class>
    <class kind="struct">satox::network::NetworkResult</class>
    <class kind="struct">satox::network::NetworkStats</class>
    <class kind="struct">satox::network::Version</class>
    <member kind="enumeration">
      <type></type>
      <name>NetworkErrorCode</name>
      <anchorfile>d6/d65/namespacesatox_1_1network.html</anchorfile>
      <anchor>ab8ae92094cdbeb5d1dc946ae4085b9f2</anchor>
      <arglist></arglist>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2ad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2a9a10f345b0f755d461a8673a5e9ef6b4">UNKNOWN_ERROR</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2af295a0c3e37c94f078e1c5476479132d">INVALID_ARGUMENT</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2a02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2a1940a630a2a25829533b90f9be04f184">ALREADY_INITIALIZED</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2a0d30777007362ccc9e8b2d0d22e4db13">NOT_RUNNING</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2ae72544c6de918198c7e098d9c9152b1e">ALREADY_RUNNING</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2a8f8d49d3d0842358e0fe8f43601d8537">OPERATION_FAILED</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2a2fa475b43d744661c4c9e1dbd9840278">VALIDATION_ERROR</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2ace94bad90093a6a2538689ddfbb5462f">TIMEOUT_ERROR</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2a4a739fa42dcdbdb8dfe5a5e4d9c5a627">RESOURCE_EXHAUSTED</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2a255df50c140519133f1489ab44a389d9">PERMISSION_DENIED</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="ab8ae92094cdbeb5d1dc946ae4085b9f2a5e6a8de74c8f7d4b04d91a3dc3bf7659">INVALID_STATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NetworkStatus</name>
      <anchorfile>d6/d65/namespacesatox_1_1network.html</anchorfile>
      <anchor>abe86c8ec3ac6d36771297efca4394c18</anchor>
      <arglist></arglist>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="abe86c8ec3ac6d36771297efca4394c18a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="abe86c8ec3ac6d36771297efca4394c18a86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="abe86c8ec3ac6d36771297efca4394c18adee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="abe86c8ec3ac6d36771297efca4394c18a43491564ebcfd38568918efbd6e840fd">RUNNING</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="abe86c8ec3ac6d36771297efca4394c18a09d4d696b4e935115b9313e3c412509a">STOPPED</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="abe86c8ec3ac6d36771297efca4394c18abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="d6/d65/namespacesatox_1_1network.html" anchor="abe86c8ec3ac6d36771297efca4394c18a055c1a591abb0e8cd86dc969727bcc0b">DISABLED</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::nft</name>
    <filename>dc/dd7/namespacesatox_1_1nft.html</filename>
    <class kind="class">satox::nft::DatabaseConnection</class>
    <class kind="struct">satox::nft::NftConfig</class>
    <class kind="struct">satox::nft::NFTError</class>
    <class kind="class">satox::nft::NftException</class>
    <class kind="struct">satox::nft::NftHealth</class>
    <class kind="class">satox::nft::NftInitializationException</class>
    <class kind="class">satox::nft::NFTManager</class>
    <class kind="class">satox::nft::NftOperationException</class>
    <class kind="struct">satox::nft::NftResult</class>
    <class kind="struct">satox::nft::NftStats</class>
    <class kind="class">satox::nft::NFTStorage</class>
    <class kind="class">satox::nft::NFTValidator</class>
    <class kind="struct">satox::nft::Version</class>
    <member kind="enumeration">
      <type></type>
      <name>NftErrorCode</name>
      <anchorfile>dc/dd7/namespacesatox_1_1nft.html</anchorfile>
      <anchor>abd49500ba171c6786b3112eed0fa1771</anchor>
      <arglist></arglist>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771ad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771a9a10f345b0f755d461a8673a5e9ef6b4">UNKNOWN_ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771af295a0c3e37c94f078e1c5476479132d">INVALID_ARGUMENT</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771a02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771a1940a630a2a25829533b90f9be04f184">ALREADY_INITIALIZED</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771a0d30777007362ccc9e8b2d0d22e4db13">NOT_RUNNING</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771ae72544c6de918198c7e098d9c9152b1e">ALREADY_RUNNING</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771a8f8d49d3d0842358e0fe8f43601d8537">OPERATION_FAILED</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771a2fa475b43d744661c4c9e1dbd9840278">VALIDATION_ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771ace94bad90093a6a2538689ddfbb5462f">TIMEOUT_ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771a4a739fa42dcdbdb8dfe5a5e4d9c5a627">RESOURCE_EXHAUSTED</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771a255df50c140519133f1489ab44a389d9">PERMISSION_DENIED</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="abd49500ba171c6786b3112eed0fa1771a5e6a8de74c8f7d4b04d91a3dc3bf7659">INVALID_STATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NFTErrorCode</name>
      <anchorfile>dc/dd7/namespacesatox_1_1nft.html</anchorfile>
      <anchor>ad050fa890372160d03b7fc28f9e2c98c</anchor>
      <arglist></arglist>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98cab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98cac50e1bb2806faace54c1514ec9f933d2">INVALID_METADATA</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca6178c5843fc8cda2e3c01c1ebe9e601d">INVALID_OWNER</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca25c5b26be4eebc0ac7ce0fa56dd199ce">TRANSFER_FAILED</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98cadddbe23a31bc89dfe27a46e2d3c59dd5">BURN_FAILED</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca98e363f8592d43e1190b78538452e411">DUPLICATE_ID</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca9acfdae2d16e2592e0c192805f9427d8">INVALID_ID</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca8dc6b7594690d74c61525515f5a9d9c1">INVALID_AMOUNT</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98cacbebbe9896611e1fec95ca0770236ebe">INSUFFICIENT_BALANCE</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98cade918d7abaea4c856c3c64720f3cbb7c">INVALID_OPERATION</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca7ae7f2a13f0d5a18b0db91af9c5aef34">STORAGE_ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca547ba52b62f9302ee1b6950111c36f9f">NETWORK_ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca2fa475b43d744661c4c9e1dbd9840278">VALIDATION_ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca9a10f345b0f755d461a8673a5e9ef6b4">UNKNOWN_ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98cac8266f377ce60529634ea1c362fa9115">CACHE_ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca9c2fce0daadbfe925304024814096609">CONFIG_ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98ca8b2cecb29d944210158570cef3b498c3">QUERY_ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="ad050fa890372160d03b7fc28f9e2c98cabd5afe2bb84e771da655084ba65ec880">CLEAR_ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NftStatus</name>
      <anchorfile>dc/dd7/namespacesatox_1_1nft.html</anchorfile>
      <anchor>a834a5ae847257820d253878104ee3485</anchor>
      <arglist></arglist>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="a834a5ae847257820d253878104ee3485a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="a834a5ae847257820d253878104ee3485a86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="a834a5ae847257820d253878104ee3485adee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="a834a5ae847257820d253878104ee3485a43491564ebcfd38568918efbd6e840fd">RUNNING</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="a834a5ae847257820d253878104ee3485a09d4d696b4e935115b9313e3c412509a">STOPPED</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="a834a5ae847257820d253878104ee3485abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="dc/dd7/namespacesatox_1_1nft.html" anchor="a834a5ae847257820d253878104ee3485a055c1a591abb0e8cd86dc969727bcc0b">DISABLED</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::rpc_proxy</name>
    <filename>df/d05/namespacesatox_1_1rpc__proxy.html</filename>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; spdlog::logger &gt; &amp;</type>
      <name>getLogger</name>
      <anchorfile>df/d05/namespacesatox_1_1rpc__proxy.html</anchorfile>
      <anchor>a633eb9064baf7fd64a5846f02f80d492</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeLogging</name>
      <anchorfile>df/d05/namespacesatox_1_1rpc__proxy.html</anchorfile>
      <anchor>a49ee9c3b0043813d4f067cb36e49bf4a</anchor>
      <arglist>(const std::string &amp;logPath)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::shared_ptr&lt; spdlog::logger &gt;</type>
      <name>g_logger</name>
      <anchorfile>df/d05/namespacesatox_1_1rpc__proxy.html</anchorfile>
      <anchor>a6636cd23684ba67ef4bab4248fb33b01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::mutex</type>
      <name>g_logger_mutex</name>
      <anchorfile>df/d05/namespacesatox_1_1rpc__proxy.html</anchorfile>
      <anchor>a45a3a44be54eebee04bd2afacd6060ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::security</name>
    <filename>d3/d71/namespacesatox_1_1security.html</filename>
    <namespace>satox::security::monitoring</namespace>
    <namespace>satox::security::pqc</namespace>
    <class kind="class">satox::security::InputValidator</class>
    <class kind="class">satox::security::PQCException</class>
    <class kind="struct">satox::security::PQCKeyInfo</class>
    <class kind="struct">satox::security::RateLimitConfig</class>
    <class kind="class">satox::security::RateLimiter</class>
    <class kind="class">satox::security::RateLimitException</class>
    <class kind="struct">satox::security::RateLimitStatus</class>
    <class kind="struct">satox::security::SecurityConfig</class>
    <class kind="struct">satox::security::SecurityEvent</class>
    <class kind="class">satox::security::SecurityException</class>
    <class kind="class">satox::security::SecurityInitializationException</class>
    <class kind="class">satox::security::SecurityManager</class>
    <class kind="struct">satox::security::SecurityResult</class>
    <class kind="struct">satox::security::SecurityStats</class>
    <class kind="class">satox::security::SecurityViolationException</class>
    <class kind="class">satox::security::ValidationException</class>
    <class kind="struct">satox::security::ValidationResult</class>
    <class kind="struct">satox::security::Version</class>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, bool)&gt;</type>
      <name>SecurityCallback</name>
      <anchorfile>d3/d71/namespacesatox_1_1security.html</anchorfile>
      <anchor>a1dce245b3cc4d80fdc448671610d3425</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::function&lt; void(const std::string &amp;, const std::string &amp;)&gt;</type>
      <name>SecurityViolationCallback</name>
      <anchorfile>d3/d71/namespacesatox_1_1security.html</anchorfile>
      <anchor>ae6ac037996762c142410f859544a19bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SecurityErrorCode</name>
      <anchorfile>d3/d71/namespacesatox_1_1security.html</anchorfile>
      <anchor>a2955236067e0895b1d2879a4d2fbd38a</anchor>
      <arglist></arglist>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa9a10f345b0f755d461a8673a5e9ef6b4">UNKNOWN_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aaf295a0c3e37c94f078e1c5476479132d">INVALID_ARGUMENT</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa1940a630a2a25829533b90f9be04f184">ALREADY_INITIALIZED</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa0d30777007362ccc9e8b2d0d22e4db13">NOT_RUNNING</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aae72544c6de918198c7e098d9c9152b1e">ALREADY_RUNNING</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa6428c5a73549adb59db9bc189867268d">PQC_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa2fa475b43d744661c4c9e1dbd9840278">VALIDATION_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aad4b0fa40577458b1d62b465cc69f9407">RATE_LIMIT_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa64ed4e8a806fcac3cfe3b0b8385f27ac">SECURITY_VIOLATION</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aaf924bf7914da2d6f26e1b8ce7f604306">AUTHENTICATION_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aaa717bd072f650da2f634ace6cdf63a09">AUTHORIZATION_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa201c6bb72da0325054ce69d755dafbe5">ENCRYPTION_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa7ebe6c70633f014d64e2bb6408d0302a">DECRYPTION_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa3b2615063f000eceb75abea2871c7277">SIGNATURE_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aacc99b01e1dd1d21ea536e8f59d4d575b">VERIFICATION_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa6f189426c908914c02598121e93c1635">KEY_GENERATION_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aa8112562d72843747f91c68da54f63470">KEY_STORAGE_ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a2955236067e0895b1d2879a4d2fbd38aaaa595e66a778dba96326c52f53662bb6">CONFIGURATION_ERROR</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SecurityState</name>
      <anchorfile>d3/d71/namespacesatox_1_1security.html</anchorfile>
      <anchor>ac2ef4071b626874e0ca8a38fae95805b</anchor>
      <arglist></arglist>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="ac2ef4071b626874e0ca8a38fae95805badd652546039b18970b8dcf2cff824268">UNINITIALIZED</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="ac2ef4071b626874e0ca8a38fae95805ba86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="ac2ef4071b626874e0ca8a38fae95805badee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="ac2ef4071b626874e0ca8a38fae95805ba43491564ebcfd38568918efbd6e840fd">RUNNING</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="ac2ef4071b626874e0ca8a38fae95805ba09d4d696b4e935115b9313e3c412509a">STOPPED</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="ac2ef4071b626874e0ca8a38fae95805babb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="ac2ef4071b626874e0ca8a38fae95805bab9984206799a7f9fe4bd1b6c18db8112">SHUTDOWN</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SecurityLevel</name>
      <anchorfile>d3/d71/namespacesatox_1_1security.html</anchorfile>
      <anchor>a5619ee4876526d89fa32fe3dc035f604</anchor>
      <arglist></arglist>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a5619ee4876526d89fa32fe3dc035f604a41bc94cbd8eebea13ce0491b2ac11b88">LOW</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a5619ee4876526d89fa32fe3dc035f604ac87f3be66ffc3c0d4249f1c2cc5f3cce">MEDIUM</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a5619ee4876526d89fa32fe3dc035f604ab89de3b4b81c4facfac906edf29aec8c">HIGH</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a5619ee4876526d89fa32fe3dc035f604a99cd1c61610c76a57cb8d10d6df6b870">CRITICAL</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PQCAlgorithm</name>
      <anchorfile>d3/d71/namespacesatox_1_1security.html</anchorfile>
      <anchor>a9eab86c1887c87b36a2697668529c67d</anchor>
      <arglist></arglist>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a9eab86c1887c87b36a2697668529c67da643eeccfe0b27b55ec877774cb20dea1">ML_DSA</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a9eab86c1887c87b36a2697668529c67da2953b24252f3989fc79eaec46eb1dbbb">ML_KEM</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a9eab86c1887c87b36a2697668529c67daefd27e6d0a0469f518151196000a982e">HYBRID_ML_DSA</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a9eab86c1887c87b36a2697668529c67da96935d38900f9eb9f42ce5648ca8d831">HYBRID_ML_KEM</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ValidationType</name>
      <anchorfile>d3/d71/namespacesatox_1_1security.html</anchorfile>
      <anchor>a8b5d25f43e8dae46d459258b0b9c2ffa</anchor>
      <arglist></arglist>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a8b5d25f43e8dae46d459258b0b9c2ffaa61a649a33f2869e5e35fbb7aff3a80d9">EMAIL</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a8b5d25f43e8dae46d459258b0b9c2ffaae6b391a8d2c4d45902a23a8b6585703d">URL</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a8b5d25f43e8dae46d459258b0b9c2ffaab3e03bb42ca194c075e80b94ec97b484">IP_ADDRESS</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a8b5d25f43e8dae46d459258b0b9c2ffaa837697b230ef5a34d756f4ea8f3810bc">PHONE_NUMBER</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a8b5d25f43e8dae46d459258b0b9c2ffaa23a27a41c4dad3ef8c54f896b77f9056">CREDIT_CARD</enumvalue>
      <enumvalue file="d3/d71/namespacesatox_1_1security.html" anchor="a8b5d25f43e8dae46d459258b0b9c2ffaa72baef04098f035e8a320b03ad197818">CUSTOM</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>satox::security::monitoring</name>
    <filename>dd/d85/namespacesatox_1_1security_1_1monitoring.html</filename>
    <class kind="class">satox::security::monitoring::SecurityMonitor</class>
  </compound>
  <compound kind="namespace">
    <name>satox::security::pqc</name>
    <filename>db/d68/namespacesatox_1_1security_1_1pqc.html</filename>
    <class kind="class">satox::security::pqc::HybridCrypto</class>
    <class kind="class">satox::security::pqc::KeyManager</class>
    <class kind="struct">satox::security::pqc::KeyMetadata</class>
    <class kind="class">satox::security::pqc::MLDSA</class>
    <class kind="class">satox::security::pqc::MLKEM</class>
  </compound>
  <compound kind="namespace">
    <name>satox::wallet</name>
    <filename>d9/d9b/namespacesatox_1_1wallet.html</filename>
    <class kind="struct">satox::wallet::AddressInfo</class>
    <class kind="class">satox::wallet::AddressManager</class>
    <class kind="class">satox::wallet::KeyManager</class>
    <class kind="struct">satox::wallet::TransactionInfo</class>
    <class kind="struct">satox::wallet::Version</class>
    <class kind="struct">satox::wallet::WalletConfig</class>
    <class kind="class">satox::wallet::WalletException</class>
    <class kind="struct">satox::wallet::WalletHealth</class>
    <class kind="struct">satox::wallet::WalletInfo</class>
    <class kind="class">satox::wallet::WalletInitializationException</class>
    <class kind="class">satox::wallet::WalletManager</class>
    <class kind="class">satox::wallet::WalletOperationException</class>
    <class kind="struct">satox::wallet::WalletResult</class>
    <class kind="struct">satox::wallet::WalletStatistics</class>
    <class kind="struct">satox::wallet::WalletStats</class>
    <member kind="enumeration">
      <type></type>
      <name>WalletErrorCode</name>
      <anchorfile>d9/d9b/namespacesatox_1_1wallet.html</anchorfile>
      <anchor>a99054bf6d0f6899018b9569015b313b3</anchor>
      <arglist></arglist>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3ad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3a9a10f345b0f755d461a8673a5e9ef6b4">UNKNOWN_ERROR</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3af295a0c3e37c94f078e1c5476479132d">INVALID_ARGUMENT</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3a02de9649e258d1dd94056e676061e969">NOT_INITIALIZED</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3a1940a630a2a25829533b90f9be04f184">ALREADY_INITIALIZED</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3a0d30777007362ccc9e8b2d0d22e4db13">NOT_RUNNING</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3ae72544c6de918198c7e098d9c9152b1e">ALREADY_RUNNING</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3a8f8d49d3d0842358e0fe8f43601d8537">OPERATION_FAILED</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3a2fa475b43d744661c4c9e1dbd9840278">VALIDATION_ERROR</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3ace94bad90093a6a2538689ddfbb5462f">TIMEOUT_ERROR</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3a4a739fa42dcdbdb8dfe5a5e4d9c5a627">RESOURCE_EXHAUSTED</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3a255df50c140519133f1489ab44a389d9">PERMISSION_DENIED</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a99054bf6d0f6899018b9569015b313b3a5e6a8de74c8f7d4b04d91a3dc3bf7659">INVALID_STATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>WalletStatus</name>
      <anchorfile>d9/d9b/namespacesatox_1_1wallet.html</anchorfile>
      <anchor>a578106df68b0f033264accfde98c2c69</anchor>
      <arglist></arglist>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a578106df68b0f033264accfde98c2c69a696b031073e74bf2cb98e5ef201d4aa3">UNKNOWN</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a578106df68b0f033264accfde98c2c69a86bf8c89d85949f8f45cde2f73fce113">INITIALIZING</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a578106df68b0f033264accfde98c2c69adee5f03c2c4e73657824e028494b18c0">INITIALIZED</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a578106df68b0f033264accfde98c2c69a43491564ebcfd38568918efbd6e840fd">RUNNING</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a578106df68b0f033264accfde98c2c69a09d4d696b4e935115b9313e3c412509a">STOPPED</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a578106df68b0f033264accfde98c2c69abb1ca97ec761fc37101737ba0aa2e7c5">ERROR</enumvalue>
      <enumvalue file="d9/d9b/namespacesatox_1_1wallet.html" anchor="a578106df68b0f033264accfde98c2c69a055c1a591abb0e8cd86dc969727bcc0b">DISABLED</enumvalue>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>SATOX_COIN_TYPE</name>
      <anchorfile>d9/d9b/namespacesatox_1_1wallet.html</anchorfile>
      <anchor>a5648e0d58f480978e746842a4da3daae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>PURPOSE</name>
      <anchorfile>d9/d9b/namespacesatox_1_1wallet.html</anchorfile>
      <anchor>a8129c4ac8d6170d2eeb1c1ca38ba4024</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>ACCOUNT_INDEX</name>
      <anchorfile>d9/d9b/namespacesatox_1_1wallet.html</anchorfile>
      <anchor>aa209e00684e879a5098e3429d6b06a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_EPOCH_LENGTH</name>
      <anchorfile>d9/d9b/namespacesatox_1_1wallet.html</anchorfile>
      <anchor>a26f18b2ff662985364aaad62a49dcec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_PERIOD_LENGTH</name>
      <anchorfile>d9/d9b/namespacesatox_1_1wallet.html</anchorfile>
      <anchor>a9c8bff6118150ab704af224c73116dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>KAWPOW_CACHE_ROUNDS</name>
      <anchorfile>d9/d9b/namespacesatox_1_1wallet.html</anchorfile>
      <anchor>a592073d0855597d39cd1eb6358d9113d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>MAX_SIGNERS</name>
      <anchorfile>d9/d9b/namespacesatox_1_1wallet.html</anchorfile>
      <anchor>afb0a13fc957ecab4318e49cd7da4153d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr uint32_t</type>
      <name>MIN_SIGNERS</name>
      <anchorfile>d9/d9b/namespacesatox_1_1wallet.html</anchorfile>
      <anchor>a2106eee1e2f8b8dd3662c9ade53a666e</anchor>
      <arglist></arglist>
    </member>
  </compound>
</tagfile>
