name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'
      release_notes:
        description: 'Release notes'
        required: true
        default: 'Initial Release'
      is_prerelease:
        description: 'Is this a prerelease?'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            libssl-dev \
            libspdlog-dev \
            libfmt-dev \
            libnlohmann-json3-dev \
            libcurl4-openssl-dev \
            libsqlite3-dev \
            libpq-dev \
            libmysqlclient-dev \
            libhiredis-dev \
            libmongoc-dev \
            librocksdb-dev \
            libsodium-dev \
            liboqs-dev \
            doxygen \
            graphviz

      - name: Build and test
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON
          make -j$(nproc)
          make test

      - name: Generate documentation
        run: |
          cd build
          make docs

      - name: Create release artifacts
        run: |
          mkdir -p release_artifacts
          cp -r build/*.so release_artifacts/ || true
          cp -r build/*.a release_artifacts/ || true
          cp -r build/examples release_artifacts/ || true
          cp -r docs release_artifacts/ || true
          cp README.md release_artifacts/
          cp LICENSE release_artifacts/

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Satox SDK v${{ github.event.inputs.version }}
          body: |
            ${{ github.event.inputs.release_notes }}
            
            ## Features
            - Quantum-resistant cryptography
            - C++/native SDKs (core, game, mobile)
            - Multi-database support (SQLite, PostgreSQL, MySQL, Redis, MongoDB, RocksDB)
            - Blockchain integration
            - Comprehensive documentation
            
            ## Downloads
            - Source code and binaries included in this release
            - Documentation available in the docs/ directory
            - Examples available in the examples/ directory
          draft: false
          prerelease: ${{ github.event.inputs.is_prerelease }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release_artifacts/
          asset_name: satox-sdk-v${{ github.event.inputs.version }}
          asset_content_type: application/zip

      - name: Cleanup
        run: |
          rm -rf build
          rm -rf release_artifacts 