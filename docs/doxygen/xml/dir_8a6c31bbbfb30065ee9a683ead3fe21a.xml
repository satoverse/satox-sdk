<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="dir_8a6c31bbbfb30065ee9a683ead3fe21a" kind="dir">
    <compoundname>src/security</compoundname>
    <innerdir refid="dir_cc8b4481719d2ec47f5856d021d58a83">src/security/include</innerdir>
    <innerdir refid="dir_c3acbdaa7b7d7de716681236e2ca2d2d">src/security/monitoring</innerdir>
    <innerdir refid="dir_235798cb464e2e3878cb38e8f26779b9">src/security/pqc</innerdir>
    <innerdir refid="dir_43826fe36a13eb8aafc1dded4b5ff805">src/security/src</innerdir>
    <innerfile refid="d2/d58/security_2security__manager_8cpp">security_manager.cpp</innerfile>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<sect1 id="/home/pform/pform-building-stuff/satox-projects/SDK-projects/projects/satox-sdk/src/security/README.md_1autotoc_md120">
<title>Overview</title><para>This component provides comprehensive security functionality for the Satox SDK, including:<itemizedlist>
<listitem><para>Post-Quantum Cryptography (PQC) implementation</para>
</listitem><listitem><para>Input validation and sanitization</para>
</listitem><listitem><para>Rate limiting and security monitoring</para>
</listitem><listitem><para>General security management</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="/home/pform/pform-building-stuff/satox-projects/SDK-projects/projects/satox-sdk/src/security/README.md_1autotoc_md121">
<title>Features</title><para><itemizedlist>
<listitem><para><bold>PQC Support</bold>: ML-DSA, ML-KEM, Hybrid encryption</para>
</listitem><listitem><para><bold>Input Validation</bold>: Email, URL, IP address validation</para>
</listitem><listitem><para><bold>Rate Limiting</bold>: Configurable rate limiting per operation</para>
</listitem><listitem><para><bold>Security Monitoring</bold>: Comprehensive security event tracking</para>
</listitem><listitem><para><bold>Thread Safety</bold>: All operations are thread-safe</para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="/home/pform/pform-building-stuff/satox-projects/SDK-projects/projects/satox-sdk/src/security/README.md_1autotoc_md122">
<title>Usage</title><para><programlisting filename=".cpp"><codeline><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" kindref="compound">satox/security/security_manager.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>security<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>security<sp/>=<sp/><ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aa15090f08e4d58997a55723551b7a3f4" kindref="member">satox::security::SecurityManager::getInstance</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configure<sp/>security</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig" kindref="compound">satox::security::SecurityConfig</ref><sp/>config;</highlight></codeline>
<codeline><highlight class="normal">config.<ref refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig_1a4e00fd85a42da1f18e70faf572a46ab1" kindref="member">enablePQC</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">config.<ref refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig_1a426ddac87ebe6e84914295145005a295" kindref="member">enableInputValidation</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">config.<ref refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig_1a750f492ebd49fead92293e8bce9d204f" kindref="member">enableRateLimiting</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!security.initialize(config))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>security:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>security.getLastError()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>PQC<sp/>for<sp/>signing</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(security.signWithPQC(</highlight><highlight class="stringliteral">&quot;ML-DSA&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;data_to_sign&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>signed<sp/>successfully!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Validate<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(security.validateEmail(</highlight><highlight class="stringliteral">&quot;user@example.com&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Valid<sp/>email<sp/>address!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Check<sp/>rate<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(security.checkRateLimit(</highlight><highlight class="stringliteral">&quot;user123&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;login&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Rate<sp/>limit<sp/>OK!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="/home/pform/pform-building-stuff/satox-projects/SDK-projects/projects/satox-sdk/src/security/README.md_1autotoc_md123">
<title>Building</title><para><programlisting filename=".bash"><codeline><highlight class="normal">mkdir<sp/>build<sp/>&amp;&amp;<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">make</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="/home/pform/pform-building-stuff/satox-projects/SDK-projects/projects/satox-sdk/src/security/README.md_1autotoc_md124">
<title>Testing</title><para><programlisting filename=".bash"><codeline><highlight class="normal">make<sp/>test</highlight></codeline>
</programlisting></para>
</sect1>
<sect1 id="/home/pform/pform-building-stuff/satox-projects/SDK-projects/projects/satox-sdk/src/security/README.md_1autotoc_md125">
<title>⚠️ Limitations</title><sect2 id="/home/pform/pform-building-stuff/satox-projects/SDK-projects/projects/satox-sdk/src/security/README.md_1autotoc_md126">
<title><bold>Blockchain Compatibility</bold></title><para><itemizedlist>
<listitem><para><bold>No Smart Contract Support:</bold> Satox is based on Ravencoin and does <bold>not</bold> support smart contracts or EVM compatibility</para>
</listitem><listitem><para><bold>Asset-Based:</bold> Focuses on asset creation, management, and transfer rather than programmable contracts</para>
</listitem><listitem><para><bold>UTXO Model:</bold> Uses Unspent Transaction Output (UTXO) model like Bitcoin/Ravencoin, not account-based like Ethereum</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="/home/pform/pform-building-stuff/satox-projects/SDK-projects/projects/satox-sdk/src/security/README.md_1autotoc_md127">
<title><bold>Platform Support</bold></title><para><itemizedlist>
<listitem><para><bold>Desktop Focus:</bold> Primarily designed for desktop/server environments</para>
</listitem><listitem><para><bold>Mobile Limitations:</bold> Mobile SDK provides limited functionality compared to core SDK</para>
</listitem><listitem><para><bold>Browser Support:</bold> WebAssembly bindings have performance limitations for complex operations</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="/home/pform/pform-building-stuff/satox-projects/SDK-projects/projects/satox-sdk/src/security/README.md_1autotoc_md128">
<title><bold>Network Requirements</bold></title><para><itemizedlist>
<listitem><para><bold>Internet Connection:</bold> Requires active internet connection for blockchain operations</para>
</listitem><listitem><para><bold>Node Synchronization:</bold> Full node operations require significant storage and bandwidth</para>
</listitem><listitem><para><bold>API Dependencies:</bold> Some features depend on external API services</para>
</listitem></itemizedlist>
</para>
</sect2>
<sect2 id="/home/pform/pform-building-stuff/satox-projects/SDK-projects/projects/satox-sdk/src/security/README.md_1autotoc_md129">
<title><bold>Development Considerations</bold></title><para><itemizedlist>
<listitem><para><bold>Learning Curve:</bold> Ravencoin/UTXO model differs from Ethereum/smart contract development</para>
</listitem><listitem><para><bold>Testing Environment:</bold> Testnet required for development and testing</para>
</listitem><listitem><para><bold>Asset Management:</bold> Asset creation and management have specific requirements and limitations </para>
</listitem></itemizedlist>
</para>
</sect2>
</sect1>
    </detaileddescription>
    <location file="src/security/"/>
  </compounddef>
</doxygen>
