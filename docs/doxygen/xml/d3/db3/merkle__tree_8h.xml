<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d3/db3/merkle__tree_8h" kind="file" language="C++">
    <compoundname>merkle_tree.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">memory</includes>
    <includes local="no">openssl/sha.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/core/include/satox/core/merkle_tree.h</label>
        <link refid="d3/db3/merkle__tree_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="5">
        <label>openssl/sha.h</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="d0/de2/classsatox_1_1core_1_1MerkleTree" prot="public">satox::core::MerkleTree</innerclass>
    <innerclass refid="de/d1b/structsatox_1_1core_1_1MerkleTree_1_1Node" prot="private">satox::core::MerkleTree::Node</innerclass>
    <innernamespace refid="df/daa/namespacesatox">satox</innernamespace>
    <innernamespace refid="d9/dd3/namespacesatox_1_1core">satox::core</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/sha.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="df/daa/namespacesatox" kindref="compound">satox</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d9/dd3/namespacesatox_1_1core" kindref="compound">core</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="d0/de2/classsatox_1_1core_1_1MerkleTree" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a4dc4cbd9f39b3dbc5166f13af47ed844" kindref="member">MerkleTree</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a4dc4cbd9f39b3dbc5166f13af47ed844" kindref="member">MerkleTree</ref>();</highlight></codeline>
<codeline lineno="39" refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1af960ea492f0ba4cde30bed71c3a928cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1af960ea492f0ba4cde30bed71c3a928cd" kindref="member">~MerkleTree</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prevent<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a3bca7636a0e75fbe6a740426fc9379f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a3bca7636a0e75fbe6a740426fc9379f8" kindref="member">MerkleTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a4dc4cbd9f39b3dbc5166f13af47ed844" kindref="member">MerkleTree</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43" refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a18c5da965129417729b3d208aac9a5ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a4dc4cbd9f39b3dbc5166f13af47ed844" kindref="member">MerkleTree</ref>&amp;<sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a18c5da965129417729b3d208aac9a5ad" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a4dc4cbd9f39b3dbc5166f13af47ed844" kindref="member">MerkleTree</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>moving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a5f3cc6158d5b348fceff9630a2494699" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a5f3cc6158d5b348fceff9630a2494699" kindref="member">MerkleTree</ref>(<ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a4dc4cbd9f39b3dbc5166f13af47ed844" kindref="member">MerkleTree</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="47" refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a886d5e205c625277d36f04a4135400b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a4dc4cbd9f39b3dbc5166f13af47ed844" kindref="member">MerkleTree</ref>&amp;<sp/>operator=(<ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a4dc4cbd9f39b3dbc5166f13af47ed844" kindref="member">MerkleTree</ref>&amp;&amp;)<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tree<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1ab1b66e9ee4d06f07a721b1f0f3eedd4b" kindref="member">buildTree</ref>(const<sp/>std::vector&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;&amp;<sp/>transactions);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1af616c48f0d2e0a3e39cd9f637dd9d8c7" kindref="member">getRoot</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;<sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1a8b02a10da12fe0c6040545df4a185ff3" kindref="member">getProof</ref>(const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>transaction)<sp/>const;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/de2/classsatox_1_1core_1_1MerkleTree_1aa5bf3805b9aec9ca935963771143dfe4" kindref="member">verifyProof</ref>(const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>transaction,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&amp;<sp/>root,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;&amp;<sp/>proof)<sp/>const;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>struct<sp/>Node<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>hash;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Node&gt;<sp/>left;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Node&gt;<sp/>right;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>data;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>Node(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>h)<sp/>:<sp/>hash(h),<sp/>left(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>right(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Node&gt;<sp/>root_;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optimized<sp/>hash<sp/>calculation<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>calculateHash(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>data);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>calculateHashOptimized(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>data);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>combineHashes(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>right);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>combineHashesOptimized(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>right);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tree<sp/>building<sp/>and<sp/>traversal<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>buildTreeRecursive(std::vector&lt;std::shared_ptr&lt;Node&gt;&gt;&amp;<sp/>nodes);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>getProofRecursive(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Node&gt;&amp;<sp/>node,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>transaction,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;&amp;<sp/>proof)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>satox<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/core/include/satox/core/merkle_tree.h"/>
  </compounddef>
</doxygen>
