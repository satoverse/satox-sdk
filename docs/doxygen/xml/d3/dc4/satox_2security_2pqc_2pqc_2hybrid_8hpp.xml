<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d3/dc4/satox_2security_2pqc_2pqc_2hybrid_8hpp" kind="file" language="C++">
    <compoundname>hybrid.hpp</compoundname>
    <includes refid="df/d78/satox_2security_2pqc_2pqc_2ml__kem_8hpp" local="yes">ml_kem.hpp</includes>
    <includes refid="df/d82/satox_2security_2pqc_2pqc_2ml__dsa_8hpp" local="yes">ml_dsa.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">memory</includes>
    <includes local="no">optional</includes>
    <includedby refid="dc/d66/security_2include_2satox_2security_2pqc_2pqc_2key__manager_8hpp" local="yes">src/security/include/satox/security/pqc/pqc/key_manager.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/security/include/satox/security/pqc/pqc/hybrid.hpp</label>
        <link refid="d3/dc4/satox_2security_2pqc_2pqc_2hybrid_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ml_dsa.hpp</label>
        <link refid="df/d82/satox_2security_2pqc_2pqc_2ml__dsa_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ml_kem.hpp</label>
        <link refid="df/d78/satox_2security_2pqc_2pqc_2ml__kem_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
      <node id="6">
        <label>optional</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/security/include/satox/security/pqc/pqc/hybrid.hpp</label>
        <link refid="d3/dc4/satox_2security_2pqc_2pqc_2hybrid_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/security/include/satox/security/pqc/pqc/key_manager.hpp</label>
        <link refid="dc/d66/security_2include_2satox_2security_2pqc_2pqc_2key__manager_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto" prot="public">satox::security::pqc::HybridCrypto</innerclass>
    <innernamespace refid="df/daa/namespacesatox">satox</innernamespace>
    <innernamespace refid="d3/d71/namespacesatox_1_1security">satox::security</innernamespace>
    <innernamespace refid="db/d68/namespacesatox_1_1security_1_1pqc">satox::security::pqc</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d78/satox_2security_2pqc_2pqc_2ml__kem_8hpp" kindref="compound">ml_kem.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d82/satox_2security_2pqc_2pqc_2ml__dsa_8hpp" kindref="compound">ml_dsa.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="df/daa/namespacesatox" kindref="compound">satox</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d3/d71/namespacesatox_1_1security" kindref="compound">security</ref><sp/>{</highlight></codeline>
<codeline lineno="37" refid="db/d68/namespacesatox_1_1security_1_1pqc" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="db/d68/namespacesatox_1_1security_1_1pqc" kindref="compound">pqc</ref><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a0df4980ee6f6e29c42f8c109b03243a3" kindref="member">HybridCrypto</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor<sp/>with<sp/>security<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a0df4980ee6f6e29c42f8c109b03243a3" kindref="member">HybridCrypto</ref>(<ref refid="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM_1ad4b148c35e9eae7df4ac85231487f6ec" kindref="member">MLKEM::SecurityLevel</ref><sp/>kemLevel<sp/>=<sp/><ref refid="d8/d57/classsatox_1_1security_1_1pqc_1_1MLKEM_1ad4b148c35e9eae7df4ac85231487f6eca68290d8bb76fe3ceb98d34e8b068f6be" kindref="member">MLKEM::SecurityLevel::Level3</ref>,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA_1aeed164fbe548fc220ca287c432eae9cc" kindref="member">MLDSA::SecurityLevel</ref><sp/>dsaLevel<sp/>=<sp/><ref refid="d3/dc9/classsatox_1_1security_1_1pqc_1_1MLDSA_1aeed164fbe548fc220ca287c432eae9cca68290d8bb76fe3ceb98d34e8b068f6be" kindref="member">MLDSA::SecurityLevel::Level3</ref>);</highlight></codeline>
<codeline lineno="44" refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a359c7441d41eff4b0e55fcde2057eeb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a359c7441d41eff4b0e55fcde2057eeb1" kindref="member">~HybridCrypto</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hybrid<sp/>key<sp/>generation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1ae41c32e671e7b09ef78dd1728fc4d697" kindref="member">generateHybridKeyPair</ref>(std::vector&lt;uint8_t&gt;&amp;<sp/>publicKey,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>privateKey);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hybrid<sp/>encryption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a38561f9efc29fb5c3b4649fac6e39667" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a38561f9efc29fb5c3b4649fac6e39667" kindref="member">encrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>message,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>publicKey,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>ciphertext);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hybrid<sp/>decryption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a5bfc98f37cade1de61fa301a3fe79c38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a5bfc98f37cade1de61fa301a3fe79c38" kindref="member">decrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>ciphertext,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>privateKey,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>message);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hybrid<sp/>signing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a6b81de3bb70db76ac508f8f93090374a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a6b81de3bb70db76ac508f8f93090374a" kindref="member">sign</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>message,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>privateKey,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>signature);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hybrid<sp/>verification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1ad49e57783cd3a92645d0e607a61707dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1ad49e57783cd3a92645d0e607a61707dc" kindref="member">verify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>message,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>signature,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>publicKey);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Key<sp/>rotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a5a1f29cdde44d36bc5b6e343276089d5" kindref="member">rotateKeys</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>oldPrivateKey,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>newPublicKey,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>newPrivateKey);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>algorithm<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a58d4eccde28f310417fe33d74e3e2dc7" kindref="member">getPublicKeySize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1adc0b4fed405ea427f8078e0c6963849d" kindref="member">getPrivateKeySize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a8aa04ef774a5d88b1b4bb1c0d239cef3" kindref="member">getCiphertextSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a95357aa84d8ab19eb5f90f7d41c2bbf3" kindref="member">getSignatureSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Error<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a07b73548a004c0a7c6e5bb4abfdf5748" kindref="member">getLastError</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="df/d13/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1a71ff8ab9eb7fa9ae53b884dd43cd2563" kindref="member">clearLastError</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/d3f/classsatox_1_1security_1_1pqc_1_1HybridCrypto_1_1Impl" kindref="compound">Impl</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;Impl&gt;<sp/>pImpl;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pqc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>security</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>satox<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/security/include/satox/security/pqc/pqc/hybrid.hpp"/>
  </compounddef>
</doxygen>
