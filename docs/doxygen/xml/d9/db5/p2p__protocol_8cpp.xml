<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d9/db5/p2p__protocol_8cpp" kind="file" language="C++">
    <compoundname>p2p_protocol.cpp</compoundname>
    <includes refid="da/d86/p2p__protocol_8hpp" local="yes">p2p_protocol.hpp</includes>
    <includes local="no">openssl/sha.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cstring</includes>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="1">
        <label>src/network/src/p2p_protocol.cpp</label>
        <link refid="d9/db5/p2p__protocol_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>p2p_protocol.hpp</label>
        <link refid="da/d86/p2p__protocol_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>cstring</label>
      </node>
      <node id="6">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="7">
        <label>openssl/sha.h</label>
      </node>
      <node id="10">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="df/daa/namespacesatox">satox</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="da/d86/p2p__protocol_8hpp" kindref="compound">p2p_protocol.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/sha.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="df/daa/namespacesatox" kindref="compound">satox</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>calculate<sp/>double<sp/>SHA256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="df/daa/namespacesatox_1ab0ce8271214b47af3952d156ceecadfe" refkind="member"><highlight class="normal">std::vector&lt;uint8_t&gt;<sp/><ref refid="df/daa/namespacesatox_1ab0ce8271214b47af3952d156ceecadfe" kindref="member">doubleSHA256</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>hash1(SHA256_DIGEST_LENGTH);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>hash2(SHA256_DIGEST_LENGTH);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_CTX<sp/>sha256;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Init(&amp;sha256);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;sha256,<sp/>data.data(),<sp/>data.size());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Final(hash1.data(),<sp/>&amp;sha256);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Init(&amp;sha256);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Update(&amp;sha256,<sp/>hash1.data(),<sp/>hash1.size());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>SHA256_Final(hash2.data(),<sp/>&amp;sha256);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hash2;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="df/daa/namespacesatox_1ae80ce1f7ea517a4383fae0c21b9eb377" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="df/daa/namespacesatox_1ae80ce1f7ea517a4383fae0c21b9eb377" kindref="member">calculateChecksum</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>hash<sp/>=<sp/><ref refid="df/daa/namespacesatox_1ab0ce8271214b47af3952d156ceecadfe" kindref="member">doubleSHA256</ref>(data);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>checksum;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;checksum,<sp/>hash.data(),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(checksum));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>checksum;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="df/daa/namespacesatox_1a0851ccbd9270ab4a7c4a69ac6749d1e4" refkind="member"><highlight class="normal">std::string<sp/><ref refid="df/daa/namespacesatox_1a0851ccbd9270ab4a7c4a69ac6749d1e4" kindref="member">messageTypeToString</ref>(<ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8" kindref="member">P2PMessageType</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a021321e8c168ba3ae39ce3a2e7b3ec87" kindref="member">P2PMessageType::VERSION</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a71b8e1ef4ef6163a22737f81e8ccba26" kindref="member">P2PMessageType::VERACK</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;verack&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a29d6f6fdd03ec410fce653724c115f95" kindref="member">P2PMessageType::INV</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;inv&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a356d92fcd2984aedf52f30c9453c6cdc" kindref="member">P2PMessageType::GETDATA</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;getdata&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a4d34f53389ed7f28ca91fc31ea360a66" kindref="member">P2PMessageType::BLOCK</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;block&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a869036c9d97cf6593c6f1c2ccfd99a49" kindref="member">P2PMessageType::TX</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;tx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a91d203f256719cce68e22a243858099c" kindref="member">P2PMessageType::GETBLOCKS</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;getblocks&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8ae89244bb2f789fda678f72f3eb31ec35" kindref="member">P2PMessageType::GETHEADERS</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;getheaders&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a1242249ca7c09fa7634e292cf2819f85" kindref="member">P2PMessageType::HEADERS</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;headers&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8ae07ff41a486c27c095a15898dcca34d1" kindref="member">P2PMessageType::PING</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;ping&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a15c94917c8795679ecb650ed760c27f0" kindref="member">P2PMessageType::PONG</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;pong&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a59b228d9fec9b88833bfe5d812ed8ad4" kindref="member">P2PMessageType::REJECT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;reject&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a9bb9239ff286274c8363021f3d82b782" kindref="member">P2PMessageType::MEMPOOL</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;mempool&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::FILTERLOAD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;filterload&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::FILTERADD:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;filteradd&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::FILTERCLEAR:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;filterclear&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::MERKLEBLOCK:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;merkleblock&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::ALERT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;alert&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8ab78ba1bb9a29122b8c7c95a888520375" kindref="member">P2PMessageType::SENDHEADERS</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;sendheaders&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a9241e399d9d36c370eed49f41dbcb852" kindref="member">P2PMessageType::FEEFILTER</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;feefilter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8aa2247525433d55b6ca2d65b2fbe1f0da" kindref="member">P2PMessageType::SENDCMPCT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;sendcmpct&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a42fe1421c4ee89b91f37c43a770cb580" kindref="member">P2PMessageType::CMPCTBLOCK</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;cmpctblock&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a46db4dfbb204d457c8a0c6e9ae129d08" kindref="member">P2PMessageType::GETBLOCKTXN</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;getblocktxn&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8aabf2d377f556063c6762e684369de851" kindref="member">P2PMessageType::BLOCKTXN</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;blocktxn&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::GETCFILTERS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;getcfilters&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::CFILTER:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;cfilter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::GETCFHEADERS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;getcfheaders&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::CFHEADERS:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;cfheaders&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::GETCFCHECKPT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;getcfcheckpt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::CFCHECKPT:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;cfcheckpt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>P2PMessageType::WTXIDRELAY:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;wtxidrelay&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>message<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="df/daa/namespacesatox_1a9fb2253f461d62b0ff58953968ddefe6" refkind="member"><highlight class="normal"><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8" kindref="member">P2PMessageType</ref><sp/><ref refid="df/daa/namespacesatox_1a9fb2253f461d62b0ff58953968ddefe6" kindref="member">stringToMessageType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a021321e8c168ba3ae39ce3a2e7b3ec87" kindref="member">P2PMessageType::VERSION</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;verack&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a71b8e1ef4ef6163a22737f81e8ccba26" kindref="member">P2PMessageType::VERACK</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;inv&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a29d6f6fdd03ec410fce653724c115f95" kindref="member">P2PMessageType::INV</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;getdata&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a356d92fcd2984aedf52f30c9453c6cdc" kindref="member">P2PMessageType::GETDATA</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;block&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a4d34f53389ed7f28ca91fc31ea360a66" kindref="member">P2PMessageType::BLOCK</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;tx&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a869036c9d97cf6593c6f1c2ccfd99a49" kindref="member">P2PMessageType::TX</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;getblocks&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a91d203f256719cce68e22a243858099c" kindref="member">P2PMessageType::GETBLOCKS</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;getheaders&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8ae89244bb2f789fda678f72f3eb31ec35" kindref="member">P2PMessageType::GETHEADERS</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;headers&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a1242249ca7c09fa7634e292cf2819f85" kindref="member">P2PMessageType::HEADERS</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ping&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8ae07ff41a486c27c095a15898dcca34d1" kindref="member">P2PMessageType::PING</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;pong&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a15c94917c8795679ecb650ed760c27f0" kindref="member">P2PMessageType::PONG</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;reject&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a59b228d9fec9b88833bfe5d812ed8ad4" kindref="member">P2PMessageType::REJECT</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mempool&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a9bb9239ff286274c8363021f3d82b782" kindref="member">P2PMessageType::MEMPOOL</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;filterload&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::FILTERLOAD;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;filteradd&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::FILTERADD;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;filterclear&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::FILTERCLEAR;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;merkleblock&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::MERKLEBLOCK;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;alert&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::ALERT;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sendheaders&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8ab78ba1bb9a29122b8c7c95a888520375" kindref="member">P2PMessageType::SENDHEADERS</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;feefilter&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a9241e399d9d36c370eed49f41dbcb852" kindref="member">P2PMessageType::FEEFILTER</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;sendcmpct&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8aa2247525433d55b6ca2d65b2fbe1f0da" kindref="member">P2PMessageType::SENDCMPCT</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cmpctblock&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a42fe1421c4ee89b91f37c43a770cb580" kindref="member">P2PMessageType::CMPCTBLOCK</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;getblocktxn&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8a46db4dfbb204d457c8a0c6e9ae129d08" kindref="member">P2PMessageType::GETBLOCKTXN</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;blocktxn&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8aabf2d377f556063c6762e684369de851" kindref="member">P2PMessageType::BLOCKTXN</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;getcfilters&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::GETCFILTERS;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cfilter&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::CFILTER;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;getcfheaders&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::GETCFHEADERS;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cfheaders&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::CFHEADERS;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;getcfcheckpt&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::GETCFCHECKPT;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;cfcheckpt&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::CFCHECKPT;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;wtxidrelay&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>P2PMessageType::WTXIDRELAY;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>message<sp/>type<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="d6/d48/structsatox_1_1P2PMessage_1ae04769260475a6a1442a3327a21698f4" refkind="member"><highlight class="normal"><ref refid="d6/d48/structsatox_1_1P2PMessage_1a86113a4274d2f11696a0af3d275cb071" kindref="member">P2PMessage::P2PMessage</ref>(<ref refid="df/daa/namespacesatox_1ad79bbcb7f0f87ba6f076287b2ac5cbd8" kindref="member">P2PMessageType</ref><sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.magic<sp/>=<sp/>0x52415645;<sp/></highlight><highlight class="comment">//<sp/>Satoxcoin<sp/>magic<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>cmd<sp/>=<sp/><ref refid="df/daa/namespacesatox_1a0851ccbd9270ab4a7c4a69ac6749d1e4" kindref="member">messageTypeToString</ref>(type);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(cmd.begin(),<sp/>cmd.end(),<sp/><ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.command);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.length<sp/>=<sp/>data.size();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.checksum<sp/>=<sp/><ref refid="df/daa/namespacesatox_1ae80ce1f7ea517a4383fae0c21b9eb377" kindref="member">calculateChecksum</ref>(data);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d48/structsatox_1_1P2PMessage_1af8a504e25e633ecc3535001767ab38ca" kindref="member">payload</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="df/daa/namespacesatox_1a07fa45fd0fed5c5a7c48b26fa685dcad" refkind="member"><highlight class="normal">std::vector&lt;uint8_t&gt;<sp/><ref refid="df/daa/namespacesatox_1a07fa45fd0fed5c5a7c48b26fa685dcad" kindref="member">serializeMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d48/structsatox_1_1P2PMessage" kindref="compound">P2PMessage</ref>&amp;<sp/>message)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>result;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>result.reserve(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader" kindref="compound">P2PMessageHeader</ref>)<sp/>+<sp/>message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1af8a504e25e633ecc3535001767ab38ca" kindref="member">payload</ref>.size());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Serialize<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a529800d31d39de8cdcc3597efa357610" kindref="member">magic</ref>),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a529800d31d39de8cdcc3597efa357610" kindref="member">magic</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a529800d31d39de8cdcc3597efa357610" kindref="member">magic</ref>));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/>message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1aee0155cd14de7addc6ad26dfdd0689da" kindref="member">command</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1aee0155cd14de7addc6ad26dfdd0689da" kindref="member">command</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1aee0155cd14de7addc6ad26dfdd0689da" kindref="member">command</ref>));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a515f1a00be7aa3ae0fa996e5dd3424a1" kindref="member">length</ref>),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a515f1a00be7aa3ae0fa996e5dd3424a1" kindref="member">length</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a515f1a00be7aa3ae0fa996e5dd3424a1" kindref="member">length</ref>));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a2fd40c965ea79c7268727ed08bc0d4c4" kindref="member">checksum</ref>),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a2fd40c965ea79c7268727ed08bc0d4c4" kindref="member">checksum</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a2fd40c965ea79c7268727ed08bc0d4c4" kindref="member">checksum</ref>));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/>message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1af8a504e25e633ecc3535001767ab38ca" kindref="member">payload</ref>.begin(),<sp/>message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1af8a504e25e633ecc3535001767ab38ca" kindref="member">payload</ref>.end());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="df/daa/namespacesatox_1ab631626a1a7d1e1ea09c09fab02357c5" refkind="member"><highlight class="normal"><ref refid="d6/d48/structsatox_1_1P2PMessage" kindref="compound">P2PMessage</ref><sp/><ref refid="df/daa/namespacesatox_1ab631626a1a7d1e1ea09c09fab02357c5" kindref="member">deserializeMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.size()<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader" kindref="compound">P2PMessageHeader</ref>))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Message<sp/>too<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d48/structsatox_1_1P2PMessage" kindref="compound">P2PMessage</ref><sp/>message;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deserialize<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a529800d31d39de8cdcc3597efa357610" kindref="member">magic</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a529800d31d39de8cdcc3597efa357610" kindref="member">magic</ref>));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a529800d31d39de8cdcc3597efa357610" kindref="member">magic</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1aee0155cd14de7addc6ad26dfdd0689da" kindref="member">command</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1aee0155cd14de7addc6ad26dfdd0689da" kindref="member">command</ref>));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1aee0155cd14de7addc6ad26dfdd0689da" kindref="member">command</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a515f1a00be7aa3ae0fa996e5dd3424a1" kindref="member">length</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a515f1a00be7aa3ae0fa996e5dd3424a1" kindref="member">length</ref>));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a515f1a00be7aa3ae0fa996e5dd3424a1" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a2fd40c965ea79c7268727ed08bc0d4c4" kindref="member">checksum</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a2fd40c965ea79c7268727ed08bc0d4c4" kindref="member">checksum</ref>));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a2fd40c965ea79c7268727ed08bc0d4c4" kindref="member">checksum</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>magic<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a529800d31d39de8cdcc3597efa357610" kindref="member">magic</ref><sp/>!=<sp/>0x52415645)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>magic<sp/>number&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>payload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.size()<sp/>&lt;<sp/>offset<sp/>+<sp/>message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a515f1a00be7aa3ae0fa996e5dd3424a1" kindref="member">length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Message<sp/>payload<sp/>too<sp/>short&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1af8a504e25e633ecc3535001767ab38ca" kindref="member">payload</ref>.assign(data.begin()<sp/>+<sp/>offset,<sp/>data.begin()<sp/>+<sp/>offset<sp/>+<sp/>message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a515f1a00be7aa3ae0fa996e5dd3424a1" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>checksum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>calculated_checksum<sp/>=<sp/><ref refid="df/daa/namespacesatox_1ae80ce1f7ea517a4383fae0c21b9eb377" kindref="member">calculateChecksum</ref>(message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1af8a504e25e633ecc3535001767ab38ca" kindref="member">payload</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calculated_checksum<sp/>!=<sp/>message.<ref refid="d6/d48/structsatox_1_1P2PMessage_1a1003c5de16ffa3677a6b9780787a1517" kindref="member">header</ref>.<ref refid="dd/d2a/structsatox_1_1P2PMessageHeader_1a2fd40c965ea79c7268727ed08bc0d4c4" kindref="member">checksum</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>checksum&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>message;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="df/daa/namespacesatox_1abea63b3e740b658f49103d6afe6814f5" refkind="member"><highlight class="normal">std::vector&lt;uint8_t&gt;<sp/><ref refid="df/daa/namespacesatox_1abea63b3e740b658f49103d6afe6814f5" kindref="member">serializeVersionMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/ddf/structsatox_1_1VersionMessage" kindref="compound">VersionMessage</ref>&amp;<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>result;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>result.reserve(100);<sp/></highlight><highlight class="comment">//<sp/>Approximate<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1ab55c5350becfce166901eae65cc77430" kindref="member">version</ref>),</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1ab55c5350becfce166901eae65cc77430" kindref="member">version</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1ab55c5350becfce166901eae65cc77430" kindref="member">version</ref>));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Services</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a9a55dc8d02d40382605b00254d0c2a1c" kindref="member">services</ref>),</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a9a55dc8d02d40382605b00254d0c2a1c" kindref="member">services</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a9a55dc8d02d40382605b00254d0c2a1c" kindref="member">services</ref>));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a8fb23161c507f4fefc10ced3aacb4e1b" kindref="member">timestamp</ref>),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a8fb23161c507f4fefc10ced3aacb4e1b" kindref="member">timestamp</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a8fb23161c507f4fefc10ced3aacb4e1b" kindref="member">timestamp</ref>));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Address<sp/>receiving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a5afa89be9b901bd909939bc50e82b106" kindref="member">addr_recv_services</ref>),</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a5afa89be9b901bd909939bc50e82b106" kindref="member">addr_recv_services</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a5afa89be9b901bd909939bc50e82b106" kindref="member">addr_recv_services</ref>));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IP<sp/>address<sp/>(16<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>ip_bytes(16,<sp/>0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a988149091b8ae2799d6105180dd589a4" kindref="member">addr_recv_ip</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>IP<sp/>string<sp/>to<sp/>bytes<sp/>(simplified)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ip<sp/>=<sp/>msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a988149091b8ae2799d6105180dd589a4" kindref="member">addr_recv_ip</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::replace(ip.begin(),<sp/>ip.end(),<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss(ip);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/>b,<sp/>c,<sp/>d;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iss<sp/>&gt;&gt;<sp/>a<sp/>&gt;&gt;<sp/>b<sp/>&gt;&gt;<sp/>c<sp/>&gt;&gt;<sp/>d;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[10]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[11]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[12]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[13]<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[14]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[15]<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/>ip_bytes.begin(),<sp/>ip_bytes.end());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a06dee3ca1fff40158312066224827a74" kindref="member">addr_recv_port</ref>),</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a06dee3ca1fff40158312066224827a74" kindref="member">addr_recv_port</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a06dee3ca1fff40158312066224827a74" kindref="member">addr_recv_port</ref>));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Address<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a4e4a71c63c83a54b21f9d348c25b8f4e" kindref="member">addr_from_services</ref>),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a4e4a71c63c83a54b21f9d348c25b8f4e" kindref="member">addr_from_services</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a4e4a71c63c83a54b21f9d348c25b8f4e" kindref="member">addr_from_services</ref>));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IP<sp/>address<sp/>(16<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>ip_bytes.assign(16,<sp/>0);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1ae6a4d50c1ad8fefe492bb4073039454b" kindref="member">addr_from_ip</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>IP<sp/>string<sp/>to<sp/>bytes<sp/>(simplified)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ip<sp/>=<sp/>msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1ae6a4d50c1ad8fefe492bb4073039454b" kindref="member">addr_from_ip</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::replace(ip.begin(),<sp/>ip.end(),<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::istringstream<sp/>iss(ip);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/>b,<sp/>c,<sp/>d;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iss<sp/>&gt;&gt;<sp/>a<sp/>&gt;&gt;<sp/>b<sp/>&gt;&gt;<sp/>c<sp/>&gt;&gt;<sp/>d;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[10]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[11]<sp/>=<sp/>0xff;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[12]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[13]<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[14]<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip_bytes[15]<sp/>=<sp/>d;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/>ip_bytes.begin(),<sp/>ip_bytes.end());</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1addc6e0318ee6a4e5377967fd2cab804f" kindref="member">addr_from_port</ref>),</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1addc6e0318ee6a4e5377967fd2cab804f" kindref="member">addr_from_port</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1addc6e0318ee6a4e5377967fd2cab804f" kindref="member">addr_from_port</ref>));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nonce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1aef23153cac5433451f557656739c5bb7" kindref="member">nonce</ref>),</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1aef23153cac5433451f557656739c5bb7" kindref="member">nonce</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1aef23153cac5433451f557656739c5bb7" kindref="member">nonce</ref>));</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>agent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>user_agent_size<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1aac8b3b2a824b79912d9268a63179d8b5" kindref="member">user_agent</ref>.size());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(user_agent_size);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/>msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1aac8b3b2a824b79912d9268a63179d8b5" kindref="member">user_agent</ref>.begin(),<sp/>msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1aac8b3b2a824b79912d9268a63179d8b5" kindref="member">user_agent</ref>.end());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>result.insert(result.end(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1adaae642859c97022b7492e2a0bcf4bbd" kindref="member">start_height</ref>),</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">uint8_t*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1adaae642859c97022b7492e2a0bcf4bbd" kindref="member">start_height</ref>)<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1adaae642859c97022b7492e2a0bcf4bbd" kindref="member">start_height</ref>));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>result.push_back(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a7bf5935a60357749d1afc099bf1c971d" kindref="member">relay</ref><sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="df/daa/namespacesatox_1a48479ac3eced91178c75abd370de67fa" refkind="member"><highlight class="normal"><ref refid="db/ddf/structsatox_1_1VersionMessage" kindref="compound">VersionMessage</ref><sp/><ref refid="df/daa/namespacesatox_1a48479ac3eced91178c75abd370de67fa" kindref="member">deserializeVersionMessage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uint8_t&gt;&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/ddf/structsatox_1_1VersionMessage" kindref="compound">VersionMessage</ref><sp/>msg;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1ab55c5350becfce166901eae65cc77430" kindref="member">version</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1ab55c5350becfce166901eae65cc77430" kindref="member">version</ref>));</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1ab55c5350becfce166901eae65cc77430" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Services</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a9a55dc8d02d40382605b00254d0c2a1c" kindref="member">services</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a9a55dc8d02d40382605b00254d0c2a1c" kindref="member">services</ref>));</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a9a55dc8d02d40382605b00254d0c2a1c" kindref="member">services</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timestamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a8fb23161c507f4fefc10ced3aacb4e1b" kindref="member">timestamp</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a8fb23161c507f4fefc10ced3aacb4e1b" kindref="member">timestamp</ref>));</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a8fb23161c507f4fefc10ced3aacb4e1b" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Address<sp/>receiving</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a5afa89be9b901bd909939bc50e82b106" kindref="member">addr_recv_services</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a5afa89be9b901bd909939bc50e82b106" kindref="member">addr_recv_services</ref>));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a5afa89be9b901bd909939bc50e82b106" kindref="member">addr_recv_services</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IP<sp/>address<sp/>(16<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>ip_bytes(data.begin()<sp/>+<sp/>offset,<sp/>data.begin()<sp/>+<sp/>offset<sp/>+<sp/>16);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip_bytes[10]<sp/>==<sp/>0xff<sp/>&amp;&amp;<sp/>ip_bytes[11]<sp/>==<sp/>0xff)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a988149091b8ae2799d6105180dd589a4" kindref="member">addr_recv_ip</ref><sp/>=<sp/>std::to_string(ip_bytes[12])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(ip_bytes[13])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(ip_bytes[14])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(ip_bytes[15]);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a06dee3ca1fff40158312066224827a74" kindref="member">addr_recv_port</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a06dee3ca1fff40158312066224827a74" kindref="member">addr_recv_port</ref>));</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a06dee3ca1fff40158312066224827a74" kindref="member">addr_recv_port</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Address<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a4e4a71c63c83a54b21f9d348c25b8f4e" kindref="member">addr_from_services</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a4e4a71c63c83a54b21f9d348c25b8f4e" kindref="member">addr_from_services</ref>));</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a4e4a71c63c83a54b21f9d348c25b8f4e" kindref="member">addr_from_services</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IP<sp/>address<sp/>(16<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>ip_bytes.assign(data.begin()<sp/>+<sp/>offset,<sp/>data.begin()<sp/>+<sp/>offset<sp/>+<sp/>16);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>16;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ip_bytes[10]<sp/>==<sp/>0xff<sp/>&amp;&amp;<sp/>ip_bytes[11]<sp/>==<sp/>0xff)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1ae6a4d50c1ad8fefe492bb4073039454b" kindref="member">addr_from_ip</ref><sp/>=<sp/>std::to_string(ip_bytes[12])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(ip_bytes[13])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(ip_bytes[14])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(ip_bytes[15]);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1addc6e0318ee6a4e5377967fd2cab804f" kindref="member">addr_from_port</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1addc6e0318ee6a4e5377967fd2cab804f" kindref="member">addr_from_port</ref>));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1addc6e0318ee6a4e5377967fd2cab804f" kindref="member">addr_from_port</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nonce</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1aef23153cac5433451f557656739c5bb7" kindref="member">nonce</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1aef23153cac5433451f557656739c5bb7" kindref="member">nonce</ref>));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1aef23153cac5433451f557656739c5bb7" kindref="member">nonce</ref>);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>User<sp/>agent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>user_agent_size<sp/>=<sp/>data[offset++];</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1aac8b3b2a824b79912d9268a63179d8b5" kindref="member">user_agent</ref>.assign(data.begin()<sp/>+<sp/>offset,<sp/>data.begin()<sp/>+<sp/>offset<sp/>+<sp/>user_agent_size);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>user_agent_size;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1adaae642859c97022b7492e2a0bcf4bbd" kindref="member">start_height</ref>,<sp/>&amp;data[offset],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1adaae642859c97022b7492e2a0bcf4bbd" kindref="member">start_height</ref>));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1adaae642859c97022b7492e2a0bcf4bbd" kindref="member">start_height</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.<ref refid="db/ddf/structsatox_1_1VersionMessage_1a7bf5935a60357749d1afc099bf1c971d" kindref="member">relay</ref><sp/>=<sp/>data[offset]<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Additional<sp/>serialization/deserialization<sp/>functions<sp/>for<sp/>other<sp/>message<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>would<sp/>be<sp/>implemented<sp/>similarly...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>satox<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/network/src/p2p_protocol.cpp"/>
  </compounddef>
</doxygen>
