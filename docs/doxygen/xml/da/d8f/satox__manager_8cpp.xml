<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="da/d8f/satox__manager_8cpp" kind="file" language="C++">
    <compoundname>satox_manager.cpp</compoundname>
    <includes local="yes">satox/core/satox_manager.hpp</includes>
    <includes local="yes">satox/network/network_manager.hpp</includes>
    <includes local="yes">satox/core/security_manager.hpp</includes>
    <includes local="yes">satox/core/database_manager.hpp</includes>
    <includes local="yes">satox/wallet/wallet_manager.hpp</includes>
    <includes local="yes">satox/core/quantum_manager.hpp</includes>
    <includes local="no">fstream</includes>
    <includes local="no">nlohmann/json.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">mutex</includes>
    <includes local="no">filesystem</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">chrono</includes>
    <incdepgraph>
      <node id="1">
        <label>src/core/src/satox_manager.cpp</label>
        <link refid="da/d8f/satox__manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>chrono</label>
      </node>
      <node id="12">
        <label>filesystem</label>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>mutex</label>
      </node>
      <node id="9">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="5">
        <label>satox/core/database_manager.hpp</label>
      </node>
      <node id="7">
        <label>satox/core/quantum_manager.hpp</label>
      </node>
      <node id="2">
        <label>satox/core/satox_manager.hpp</label>
      </node>
      <node id="4">
        <label>satox/core/security_manager.hpp</label>
      </node>
      <node id="3">
        <label>satox/network/network_manager.hpp</label>
      </node>
      <node id="6">
        <label>satox/wallet/wallet_manager.hpp</label>
      </node>
    </incdepgraph>
    <innernamespace refid="df/daa/namespacesatox">satox</innernamespace>
    <innernamespace refid="d9/dd3/namespacesatox_1_1core">satox::core</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;satox/core/satox_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;satox/network/network_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;satox/core/security_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;satox/core/database_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;satox/wallet/wallet_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;satox/core/quantum_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nlohmann/json.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="df/daa/namespacesatox" kindref="compound">satox</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d9/dd3/namespacesatox_1_1core" kindref="compound">core</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a4d3f14dc8fc77fcaf84ffffebe2cb53f" refkind="member"><highlight class="normal">SatoxManager&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a4d3f14dc8fc77fcaf84ffffebe2cb53f" kindref="member">SatoxManager::getInstance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SatoxManager<sp/>instance;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a4963e11a837dfa422113ecf7a2c912cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a4963e11a837dfa422113ecf7a2c912cc" kindref="member">SatoxManager::initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nlohmann::json&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialized_)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SatoxManager<sp/>already<sp/>initialized&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>config_<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>core<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initializeCoreComponent())<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initializeBlockchainComponent())<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initializeTransactionComponent())<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initializeWalletComponent())<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initializeIPFSComponent())<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initializeNetworkComponent())<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initializeConfigComponent())<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>initialized_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_.start_time<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_.last_activity<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a0342598ab5d52dfff34359a3f3fac053" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a0342598ab5d52dfff34359a3f3fac053" kindref="member">SatoxManager::shutdown</ref>()<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shutdown<sp/>components<sp/>in<sp/>reverse<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Components<sp/>are<sp/>singletons,<sp/>so<sp/>we<sp/>just<sp/>update<sp/>our<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>initialized_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_.last_activity<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>components_.clear();<sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>registered<sp/>components<sp/>for<sp/>clean<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1aae8f73ab4a5a0edb8644791f4cc2f00b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1aae8f73ab4a5a0edb8644791f4cc2f00b" kindref="member">SatoxManager::clearLastError</ref>()<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>lastError_.clear();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1af203d74f9df6110bfee18a67b75e6bfc" refkind="member"><highlight class="normal">std::string<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1af203d74f9df6110bfee18a67b75e6bfc" kindref="member">SatoxManager::getLastError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastError_;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>state<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a76e50cf9626923f4565c712f40af67cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a76e50cf9626923f4565c712f40af67cc" kindref="member">SatoxManager::start</ref>()<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SatoxManager<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>running_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a597df11e26b3e7325a4e89d253fa19d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a597df11e26b3e7325a4e89d253fa19d9" kindref="member">SatoxManager::stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>running_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a74ec2932da92b4a4fc14befb0bfcb8b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a74ec2932da92b4a4fc14befb0bfcb8b5" kindref="member">SatoxManager::pause</ref>()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!running_)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;SatoxManager<sp/>not<sp/>running&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>paused_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1ad92eca3c34f5f3d62fb662356ae38ffe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1ad92eca3c34f5f3d62fb662356ae38ffe" kindref="member">SatoxManager::resume</ref>()<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>paused_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a3a0fe5be6bba7d8c8c2b2e72435638ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a3a0fe5be6bba7d8c8c2b2e72435638ed" kindref="member">SatoxManager::isRunning</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>running_;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a263dd7fcd7218969895661d8058c85e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a263dd7fcd7218969895661d8058c85e4" kindref="member">SatoxManager::isPaused</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>paused_;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configuration<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1af01b43032bb9dc11f73e976a31a09bbe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1af01b43032bb9dc11f73e976a31a09bbe" kindref="member">SatoxManager::update</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nlohmann::json&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>config_<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1adde91ac6247b3b4b7f4e4c161926106c" refkind="member"><highlight class="normal">std::optional&lt;nlohmann::json&gt;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1adde91ac6247b3b4b7f4e4c161926106c" kindref="member">SatoxManager::getConfig</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::optional&lt;nlohmann::json&gt;(config_);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Manager<sp/>access<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a7d74a4ed6ed3ff9bb4a6ab7a43b89023" refkind="member"><highlight class="normal"><ref refid="de/d4d/classsatox_1_1core_1_1CoreManager" kindref="compound">CoreManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a7d74a4ed6ed3ff9bb4a6ab7a43b89023" kindref="member">SatoxManager::getCoreManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d4d/classsatox_1_1core_1_1CoreManager_1a649ac2234732b2e90101cbb9170a951b" kindref="member">CoreManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a62751482d2a9874595770176f91d009b" refkind="member"><highlight class="normal"><ref refid="d5/d44/classsatox_1_1core_1_1NetworkManager" kindref="compound">NetworkManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a62751482d2a9874595770176f91d009b" kindref="member">SatoxManager::getNetworkManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d5/d44/classsatox_1_1core_1_1NetworkManager_1a005891a357a019f087dd0fd20d92ad3d" kindref="member">NetworkManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a4a2b13a21dcab9433e2d995e190659c9" refkind="member"><highlight class="normal"><ref refid="d3/d13/classsatox_1_1core_1_1BlockchainManager" kindref="compound">BlockchainManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a4a2b13a21dcab9433e2d995e190659c9" kindref="member">SatoxManager::getBlockchainManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d13/classsatox_1_1core_1_1BlockchainManager_1a6e7da1dbe56feba80275276fa212883b" kindref="member">BlockchainManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a67751fc0373a4ef36f9265ed697481b2" refkind="member"><highlight class="normal"><ref refid="d2/d34/classsatox_1_1core_1_1TransactionManager" kindref="compound">TransactionManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a67751fc0373a4ef36f9265ed697481b2" kindref="member">SatoxManager::getTransactionManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d34/classsatox_1_1core_1_1TransactionManager_1ada7a5b72e3f6031bd3a2d5d7e87ff47e" kindref="member">TransactionManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1ac6bfccbd08978aec73c542e8f501c4d7" refkind="member"><highlight class="normal"><ref refid="d2/d37/classsatox_1_1core_1_1AssetManager" kindref="compound">AssetManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1ac6bfccbd08978aec73c542e8f501c4d7" kindref="member">SatoxManager::getAssetManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d37/classsatox_1_1core_1_1AssetManager_1a274b07e3ea293b76e6fe20b63343f233" kindref="member">AssetManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a2a67d9c315a26015dfb6e074f52fa526" refkind="member"><highlight class="normal"><ref refid="d3/d26/classsatox_1_1core_1_1WalletManager" kindref="compound">WalletManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a2a67d9c315a26015dfb6e074f52fa526" kindref="member">SatoxManager::getWalletManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/d26/classsatox_1_1core_1_1WalletManager_1acc98cf7173f9690951680fb0f755a38e" kindref="member">WalletManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1aa275fec33a040465754a58534ea75fcb" refkind="member"><highlight class="normal"><ref refid="da/d68/classsatox_1_1core_1_1IPFSManager" kindref="compound">IPFSManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1aa275fec33a040465754a58534ea75fcb" kindref="member">SatoxManager::getIPFSManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="da/d68/classsatox_1_1core_1_1IPFSManager_1acaa8da9841075249cf584f8efdea738a" kindref="member">IPFSManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Comment<sp/>out<sp/>managers<sp/>that<sp/>don&apos;t<sp/>have<sp/>getInstance()<sp/>methods<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="204"><highlight class="comment">DatabaseManager&amp;<sp/>SatoxManager::getDatabaseManager()<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>DatabaseManager::getInstance();</highlight></codeline>
<codeline lineno="206"><highlight class="comment">}</highlight></codeline>
<codeline lineno="207"><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment">SecurityManager&amp;<sp/>SatoxManager::getSecurityManager()<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>SecurityManager::getInstance();</highlight></codeline>
<codeline lineno="210"><highlight class="comment">}</highlight></codeline>
<codeline lineno="211"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1ab28dc972f3ffcff275e4778ef761d8ca" refkind="member"><highlight class="normal"><ref refid="d4/d3a/classsatox_1_1core_1_1NFTManager" kindref="compound">NFTManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1ab28dc972f3ffcff275e4778ef761d8ca" kindref="member">SatoxManager::getNFTManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d3a/classsatox_1_1core_1_1NFTManager_1a2b8736f58b59b9c5ae78806512082b61" kindref="member">NFTManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a25c63f6b5f5b90c36624b9f913a1568e" refkind="member"><highlight class="normal"><ref refid="d3/dce/classsatox_1_1core_1_1PluginManager" kindref="compound">PluginManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a25c63f6b5f5b90c36624b9f913a1568e" kindref="member">SatoxManager::getPluginManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d3/dce/classsatox_1_1core_1_1PluginManager_1aafcf2e83f35ac5f9e90f17989a7885d1" kindref="member">PluginManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a22823ce23bcf55f1f6499a33678db555" refkind="member"><highlight class="normal"><ref refid="d9/db4/classsatox_1_1core_1_1EventManager" kindref="compound">EventManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a22823ce23bcf55f1f6499a33678db555" kindref="member">SatoxManager::getEventManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/db4/classsatox_1_1core_1_1EventManager_1ae3ad14452c46f2aaa65cc18f2309d762" kindref="member">EventManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a5d5a55616a06520f608ba6834a125816" refkind="member"><highlight class="normal"><ref refid="db/de3/classsatox_1_1core_1_1CacheManager" kindref="compound">CacheManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a5d5a55616a06520f608ba6834a125816" kindref="member">SatoxManager::getCacheManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="db/de3/classsatox_1_1core_1_1CacheManager_1afd6382b9e12c0d66533e6bab12b80231" kindref="member">CacheManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a43dc986a73b15d436f9bdd197f23c73e" refkind="member"><highlight class="normal"><ref refid="d4/d83/classsatox_1_1core_1_1ConfigManager" kindref="compound">ConfigManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a43dc986a73b15d436f9bdd197f23c73e" kindref="member">SatoxManager::getConfigManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/d83/classsatox_1_1core_1_1ConfigManager_1a8d7ed0f52f1d0ac955a26f01273f7515" kindref="member">ConfigManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1ad85bd4e3722c3c82e1adbb261e2b7c7a" refkind="member"><highlight class="normal"><ref refid="de/d20/classsatox_1_1core_1_1LoggingManager" kindref="compound">LoggingManager</ref>&amp;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1ad85bd4e3722c3c82e1adbb261e2b7c7a" kindref="member">SatoxManager::getLoggingManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="de/d20/classsatox_1_1core_1_1LoggingManager" kindref="compound">LoggingManager</ref><sp/>dummyLogger;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dummyLogger;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>information<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a4d89cfb0e820a58cbcafa11cbb66531f" refkind="member"><highlight class="normal">std::optional&lt;SatoxManager::SystemInfo&gt;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a4d89cfb0e820a58cbcafa11cbb66531f" kindref="member">SatoxManager::getSystemInfo</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo" kindref="compound">SystemInfo</ref><sp/>info;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a008f8ab46b365e7373dc714886b6c5cc" kindref="member">initialized</ref><sp/>=<sp/>initialized_;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1ac54fbac08646af383e95001cdae2f90a" kindref="member">running</ref><sp/>=<sp/>running_;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a184430c008bfd5205cad1da1b0a734d6" kindref="member">paused</ref><sp/>=<sp/>paused_;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1afed023fb01e6a04a3faba8770b4b7eb1" kindref="member">version</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;1.0.0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1ac8852cdab4327d08542b74c5904e034b" kindref="member">build</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>manager<sp/>status</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a3e3ac2c6fee28d9da1482079261c85c6" kindref="member">managerStatus</ref>[</highlight><highlight class="stringliteral">&quot;core&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a3e3ac2c6fee28d9da1482079261c85c6" kindref="member">managerStatus</ref>[</highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a3e3ac2c6fee28d9da1482079261c85c6" kindref="member">managerStatus</ref>[</highlight><highlight class="stringliteral">&quot;blockchain&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a3e3ac2c6fee28d9da1482079261c85c6" kindref="member">managerStatus</ref>[</highlight><highlight class="stringliteral">&quot;transaction&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a3e3ac2c6fee28d9da1482079261c85c6" kindref="member">managerStatus</ref>[</highlight><highlight class="stringliteral">&quot;asset&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a3e3ac2c6fee28d9da1482079261c85c6" kindref="member">managerStatus</ref>[</highlight><highlight class="stringliteral">&quot;wallet&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a3e3ac2c6fee28d9da1482079261c85c6" kindref="member">managerStatus</ref>[</highlight><highlight class="stringliteral">&quot;ipfs&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a3e3ac2c6fee28d9da1482079261c85c6" kindref="member">managerStatus</ref>[</highlight><highlight class="stringliteral">&quot;database&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a3e3ac2c6fee28d9da1482079261c85c6" kindref="member">managerStatus</ref>[</highlight><highlight class="stringliteral">&quot;security&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>info.<ref refid="d4/d68/structsatox_1_1core_1_1SatoxManager_1_1SystemInfo_1a3e3ac2c6fee28d9da1482079261c85c6" kindref="member">managerStatus</ref>[</highlight><highlight class="stringliteral">&quot;nft&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1af2fc7e66fd8dd9afd97e23b8de8885c9" refkind="member"><highlight class="normal">std::optional&lt;ComponentStatus&gt;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1af2fc7e66fd8dd9afd97e23b8de8885c9" kindref="member">SatoxManager::getComponentStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>component)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>return<sp/>a<sp/>default<sp/>status<sp/>for<sp/>any<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/deb/structsatox_1_1core_1_1ComponentStatus" kindref="compound">ComponentStatus</ref><sp/>status;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>status.<ref refid="d1/deb/structsatox_1_1core_1_1ComponentStatus_1a0e4d1ae88bd0e7cdead51400051d8c0f" kindref="member">name</ref><sp/>=<sp/>component;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>status.<ref refid="d1/deb/structsatox_1_1core_1_1ComponentStatus_1ac3047cf286170ce772503fedfe8cdb2c" kindref="member">state</ref><sp/>=<sp/><ref refid="d9/dd3/namespacesatox_1_1core_1ab8ad03431c721ab59a3fb0d0541c11eca43491564ebcfd38568918efbd6e840fd" kindref="member">ComponentState::RUNNING</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>status.health<sp/>=<sp/>ComponentHealth::HEALTHY;<sp/><sp/>//<sp/>Not<sp/>available<sp/>in<sp/>current<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>status.last_activity<sp/>=<sp/>std::chrono::system_clock::now();<sp/><sp/>//<sp/>Not<sp/>available<sp/>in<sp/>current<sp/>struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a8c636312603e33b4cb01eab5cfdea6cd" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a8c636312603e33b4cb01eab5cfdea6cd" kindref="member">SatoxManager::getAvailableComponents</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="stringliteral">&quot;core&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;network&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;blockchain&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;transaction&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;asset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wallet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ipfs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;database&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;security&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;nft&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>System<sp/>statistics<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a36b86c650d1f2bf2867952ec53cbb487" refkind="member"><highlight class="normal"><ref refid="d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats" kindref="compound">SatoxManager::SystemStats</ref><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a36b86c650d1f2bf2867952ec53cbb487" kindref="member">SatoxManager::getSystemStats</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stats_;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a1acaea563dc8b1a040516fb7f68404bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a1acaea563dc8b1a040516fb7f68404bd" kindref="member">SatoxManager::enableStats</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>statsEnabled_<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1aa2f535c3f4206c1592a9b34731a9be95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1aa2f535c3f4206c1592a9b34731a9be95" kindref="member">SatoxManager::resetStats</ref>()<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_<sp/>=<sp/><ref refid="d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats" kindref="compound">SystemStats</ref>{};</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_.<ref refid="d6/d88/structsatox_1_1core_1_1SatoxManager_1_1SystemStats_1a7b3e45c28392a7469ceeee0af7f63354" kindref="member">start_time</ref><sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_.last_activity<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Callback<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a391e74e9a3ee4b87d692b709248521dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a391e74e9a3ee4b87d692b709248521dd" kindref="member">SatoxManager::registerStateCallback</ref>(<ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a045fdede16f431916c7e66c72b151079" kindref="member">StateCallback</ref><sp/>callback)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>stateCallback_<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a80d12f4b502e4d35012e75df2d720c08" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a80d12f4b502e4d35012e75df2d720c08" kindref="member">SatoxManager::registerErrorCallback</ref>(<ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1aef0f2d9b88917557eb7100ec32e353b6" kindref="member">ErrorCallback</ref><sp/>callback)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>errorCallback_<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a75cd8ad758999b29d201d6e9586ac119" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a75cd8ad758999b29d201d6e9586ac119" kindref="member">SatoxManager::registerStatsCallback</ref>(<ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a5f6ec9da68a7da95a8a9bb85cba006a8" kindref="member">StatsCallback</ref><sp/>callback)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>statsCallback_<sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a19e580fb8c9d2f07d289d6569993e3fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a19e580fb8c9d2f07d289d6569993e3fe" kindref="member">SatoxManager::unregisterStateCallback</ref>()<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>stateCallback_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1af8a6704e447cace730fc673678d9e914" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1af8a6704e447cace730fc673678d9e914" kindref="member">SatoxManager::unregisterErrorCallback</ref>()<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>errorCallback_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a0d43634bdd665f00bbc643b10028e957" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a0d43634bdd665f00bbc643b10028e957" kindref="member">SatoxManager::unregisterStatsCallback</ref>()<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>statsCallback_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configuration<sp/>management<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1ad3ca99fd19480142831ba7efd8815334" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1ad3ca99fd19480142831ba7efd8815334" kindref="member">SatoxManager::updateConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nlohmann::json&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>config_<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a167c298b40116413ae7787c2b0457b68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a167c298b40116413ae7787c2b0457b68" kindref="member">SatoxManager::reloadConfig</ref>()<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>just<sp/>return<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Statistics<sp/>and<sp/>monitoring<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1aeada89919d87ad8c2507377f3fd3364d" refkind="member"><highlight class="normal"><ref refid="d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats" kindref="compound">SatoxManager::Stats</ref><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1aeada89919d87ad8c2507377f3fd3364d" kindref="member">SatoxManager::getStats</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats" kindref="compound">Stats</ref><sp/>stats;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats_1a8be12036b3875f82a115e02c84fc886e" kindref="member">total_components</ref><sp/>=<sp/>stats_.total_components;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats_1a74505d4afdbb9735f07019debdc701ed" kindref="member">active_components</ref><sp/>=<sp/>stats_.active_components;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats_1abdda38826a61df8af4b9b2e2692de5f1" kindref="member">failed_components</ref><sp/>=<sp/>stats_.failed_components;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats_1a262752bb7bf89929139a661ee89ac601" kindref="member">start_time</ref><sp/>=<sp/>stats_.start_time;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="d7/dcb/structsatox_1_1core_1_1SatoxManager_1_1Stats_1abb7aa07a0fdae030464308e0c5d1393f" kindref="member">last_activity</ref><sp/>=<sp/>stats_.last_activity;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stats;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a152fc1a1cd799cd48e9736a0200ec1cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a152fc1a1cd799cd48e9736a0200ec1cd" kindref="member">SatoxManager::isHealthy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::recursive_mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initialized_<sp/>&amp;&amp;<sp/>stats_.failed_components<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>helper<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SatoxManager::setError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>error)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorCallback_)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorCallback_(error);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SatoxManager::validateConfig(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nlohmann::json&amp;<sp/>config)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>accept<sp/>any<sp/>valid<sp/>JSON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!config.is_null();</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SatoxManager::updateState()<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stateCallback_)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>info<sp/>=<sp/><ref refid="d8/def/classsatox_1_1core_1_1SatoxManager_1a4d89cfb0e820a58cbcafa11cbb66531f" kindref="member">getSystemInfo</ref>();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateCallback_(*info);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SatoxManager::handleError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>error)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>setError(error);</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SatoxManager::updateStats()<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_.last_activity<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(statsCallback_)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statsCallback_(stats_);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Component<sp/>initialization<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SatoxManager::initializeCoreComponent()<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CoreManager<sp/>is<sp/>a<sp/>singleton,<sp/>just<sp/>check<sp/>if<sp/>it&apos;s<sp/>accessible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d4d/classsatox_1_1core_1_1CoreManager_1a649ac2234732b2e90101cbb9170a951b" kindref="member">CoreManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.total_components++;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.active_components++;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>core<sp/>component:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what());</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.failed_components++;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SatoxManager::initializeBlockchainComponent()<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BlockchainManager<sp/>is<sp/>a<sp/>singleton,<sp/>just<sp/>check<sp/>if<sp/>it&apos;s<sp/>accessible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>blockchain<sp/>=<sp/><ref refid="d3/d13/classsatox_1_1core_1_1BlockchainManager_1a6e7da1dbe56feba80275276fa212883b" kindref="member">BlockchainManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.total_components++;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.active_components++;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>blockchain<sp/>component:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what());</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.failed_components++;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SatoxManager::initializeTransactionComponent()<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TransactionManager<sp/>is<sp/>a<sp/>singleton,<sp/>just<sp/>check<sp/>if<sp/>it&apos;s<sp/>accessible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>transaction<sp/>=<sp/><ref refid="d2/d34/classsatox_1_1core_1_1TransactionManager_1ada7a5b72e3f6031bd3a2d5d7e87ff47e" kindref="member">TransactionManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.total_components++;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.active_components++;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>transaction<sp/>component:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what());</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.failed_components++;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SatoxManager::initializeWalletComponent()<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WalletManager<sp/>is<sp/>a<sp/>singleton,<sp/>just<sp/>check<sp/>if<sp/>it&apos;s<sp/>accessible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>wallet<sp/>=<sp/><ref refid="d3/d26/classsatox_1_1core_1_1WalletManager_1acc98cf7173f9690951680fb0f755a38e" kindref="member">WalletManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.total_components++;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.active_components++;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>wallet<sp/>component:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what());</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.failed_components++;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SatoxManager::initializeIPFSComponent()<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IPFSManager<sp/>is<sp/>a<sp/>singleton,<sp/>just<sp/>check<sp/>if<sp/>it&apos;s<sp/>accessible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ipfs<sp/>=<sp/><ref refid="da/d68/classsatox_1_1core_1_1IPFSManager_1acaa8da9841075249cf584f8efdea738a" kindref="member">IPFSManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.total_components++;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.active_components++;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>IPFS<sp/>component:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what());</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.failed_components++;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SatoxManager::initializeNetworkComponent()<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NetworkManager<sp/>is<sp/>a<sp/>singleton,<sp/>just<sp/>check<sp/>if<sp/>it&apos;s<sp/>accessible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>network<sp/>=<sp/><ref refid="d5/d44/classsatox_1_1core_1_1NetworkManager_1a005891a357a019f087dd0fd20d92ad3d" kindref="member">NetworkManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.total_components++;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.active_components++;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>network<sp/>component:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what());</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.failed_components++;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SatoxManager::initializeConfigComponent()<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ConfigManager<sp/>is<sp/>a<sp/>singleton,<sp/>just<sp/>check<sp/>if<sp/>it&apos;s<sp/>accessible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>config<sp/>=<sp/><ref refid="d4/d83/classsatox_1_1core_1_1ConfigManager_1a8d7ed0f52f1d0ac955a26f01273f7515" kindref="member">ConfigManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.total_components++;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.active_components++;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>initialize<sp/>config<sp/>component:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what());</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.failed_components++;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>satox<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/core/src/satox_manager.cpp"/>
  </compounddef>
</doxygen>
