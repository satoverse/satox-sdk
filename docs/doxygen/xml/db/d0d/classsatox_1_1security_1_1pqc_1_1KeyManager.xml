<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager" kind="class" language="C++" prot="public">
    <compoundname>satox::security::pqc::KeyManager</compoundname>
    <includes refid="dc/d66/security_2include_2satox_2security_2pqc_2pqc_2key__manager_8hpp" local="no">key_manager.hpp</includes>
    <innerclass refid="dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl" prot="public">satox::security::pqc::KeyManager::Impl</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a8173a8c4bcc0ff7f72e5653661c3d845" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="dc/d64/classsatox_1_1security_1_1pqc_1_1KeyManager_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>std::unique_ptr&lt; Impl &gt; satox::security::pqc::KeyManager::pImpl</definition>
        <argsstring></argsstring>
        <name>pImpl</name>
        <qualifiedname>satox::security::pqc::KeyManager::pImpl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="94" column="21" bodyfile="src/security/include/satox/security/pqc/pqc/key_manager.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a7a8b31a3f1bafa65c815223b89610dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::security::pqc::KeyManager::KeyManager</definition>
        <argsstring>()</argsstring>
        <name>KeyManager</name>
        <qualifiedname>satox::security::pqc::KeyManager::KeyManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="53" column="5" bodyfile="src/security/pqc/key_manager.cpp" bodystart="250" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1afadecefff8c59a78d6989477b8b94af0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::security::pqc::KeyManager::~KeyManager</definition>
        <argsstring>()</argsstring>
        <name>~KeyManager</name>
        <qualifiedname>satox::security::pqc::KeyManager::~KeyManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="54" column="5"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a4bd2bc01d877e2819bd66586da1be065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::generateAndStoreKey</definition>
        <argsstring>(const std::string &amp;keyId, const std::string &amp;algorithm, int securityLevel, const std::string &amp;metadata=&quot;&quot;)</argsstring>
        <name>generateAndStoreKey</name>
        <qualifiedname>satox::security::pqc::KeyManager::generateAndStoreKey</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>securityLevel</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metadata</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a4921768394a10144d0e21b28d47bdceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::getKey</definition>
        <argsstring>(const std::string &amp;keyId, std::vector&lt; uint8_t &gt; &amp;key, KeyMetadata &amp;metadata)</argsstring>
        <name>getKey</name>
        <qualifiedname>satox::security::pqc::KeyManager::getKey</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <param>
          <type>std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata" kindref="compound">KeyMetadata</ref> &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="63" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a6b676d88a80fceddcbaa1a7533f92d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::rotateKey</definition>
        <argsstring>(const std::string &amp;keyId, const std::string &amp;newMetadata=&quot;&quot;)</argsstring>
        <name>rotateKey</name>
        <qualifiedname>satox::security::pqc::KeyManager::rotateKey</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>newMetadata</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="68" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a3ba531a928f06963211c985bd3aff4c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::deleteKey</definition>
        <argsstring>(const std::string &amp;keyId)</argsstring>
        <name>deleteKey</name>
        <qualifiedname>satox::security::pqc::KeyManager::deleteKey</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="72" column="10" bodyfile="src/security/pqc/key_manager.cpp" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a9ec8265aad35d0714a337e4aae338ced" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; KeyMetadata &gt; satox::security::pqc::KeyManager::listKeys</definition>
        <argsstring>() const</argsstring>
        <name>listKeys</name>
        <qualifiedname>satox::security::pqc::KeyManager::listKeys</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="75" column="17" bodyfile="src/security/pqc/key_manager.cpp" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a5190d2fb1450f515998a117203f1fd45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata" kindref="compound">KeyMetadata</ref> &gt;</type>
        <definition>std::vector&lt; KeyMetadata &gt; satox::security::pqc::KeyManager::listKeyMetadata</definition>
        <argsstring>() const</argsstring>
        <name>listKeyMetadata</name>
        <qualifiedname>satox::security::pqc::KeyManager::listKeyMetadata</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="76" column="17"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a2705b9c30e5d508f2507d0d41ccd2fea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::isKeyValid</definition>
        <argsstring>(const std::string &amp;keyId) const</argsstring>
        <name>isKeyValid</name>
        <qualifiedname>satox::security::pqc::KeyManager::isKeyValid</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a42ff3ec665d1f74809eaedb1d0db6c87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::isKeyExpired</definition>
        <argsstring>(const std::string &amp;keyId) const</argsstring>
        <name>isKeyExpired</name>
        <qualifiedname>satox::security::pqc::KeyManager::isKeyExpired</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="80" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a75249f23c3a040e25b691bfbeef2da05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::updateKeyMetadata</definition>
        <argsstring>(const std::string &amp;keyId, const std::string &amp;metadata)</argsstring>
        <name>updateKeyMetadata</name>
        <qualifiedname>satox::security::pqc::KeyManager::updateKeyMetadata</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="83" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1aa2356bd6f556ef61e25f676e292ddec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::setKeyExpiration</definition>
        <argsstring>(const std::string &amp;keyId, const std::chrono::system_clock::time_point &amp;expiration)</argsstring>
        <name>setKeyExpiration</name>
        <qualifiedname>satox::security::pqc::KeyManager::setKeyExpiration</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <param>
          <type>const std::chrono::system_clock::time_point &amp;</type>
          <declname>expiration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a58460498c6dbecca9a0c816d3a967df5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::security::pqc::KeyManager::getLastError</definition>
        <argsstring>() const</argsstring>
        <name>getLastError</name>
        <qualifiedname>satox::security::pqc::KeyManager::getLastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="89" column="17" bodyfile="src/security/pqc/key_manager.cpp" bodystart="292" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a5190a2764a1ca5061a22da47926d517e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::pqc::KeyManager::clearLastError</definition>
        <argsstring>()</argsstring>
        <name>clearLastError</name>
        <qualifiedname>satox::security::pqc::KeyManager::clearLastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="90" column="10" bodyfile="src/security/pqc/key_manager.cpp" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a7a8b31a3f1bafa65c815223b89610dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::security::pqc::KeyManager::KeyManager</definition>
        <argsstring>()</argsstring>
        <name>KeyManager</name>
        <qualifiedname>satox::security::pqc::KeyManager::KeyManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="53" column="5"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1afadecefff8c59a78d6989477b8b94af0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::security::pqc::KeyManager::~KeyManager</definition>
        <argsstring>()</argsstring>
        <name>~KeyManager</name>
        <qualifiedname>satox::security::pqc::KeyManager::~KeyManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="54" column="5"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a4bd2bc01d877e2819bd66586da1be065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::generateAndStoreKey</definition>
        <argsstring>(const std::string &amp;keyId, const std::string &amp;algorithm, int securityLevel, const std::string &amp;metadata=&quot;&quot;)</argsstring>
        <name>generateAndStoreKey</name>
        <qualifiedname>satox::security::pqc::KeyManager::generateAndStoreKey</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>securityLevel</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metadata</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a4921768394a10144d0e21b28d47bdceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::getKey</definition>
        <argsstring>(const std::string &amp;keyId, std::vector&lt; uint8_t &gt; &amp;key, KeyMetadata &amp;metadata)</argsstring>
        <name>getKey</name>
        <qualifiedname>satox::security::pqc::KeyManager::getKey</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <param>
          <type>std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata" kindref="compound">KeyMetadata</ref> &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="63" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a6b676d88a80fceddcbaa1a7533f92d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::rotateKey</definition>
        <argsstring>(const std::string &amp;keyId, const std::string &amp;newMetadata=&quot;&quot;)</argsstring>
        <name>rotateKey</name>
        <qualifiedname>satox::security::pqc::KeyManager::rotateKey</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>newMetadata</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="68" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a3ba531a928f06963211c985bd3aff4c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::deleteKey</definition>
        <argsstring>(const std::string &amp;keyId)</argsstring>
        <name>deleteKey</name>
        <qualifiedname>satox::security::pqc::KeyManager::deleteKey</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a82ab17774d4973ab9414e58175d9f18d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; satox::security::pqc::KeyManager::listKeys</definition>
        <argsstring>() const</argsstring>
        <name>listKeys</name>
        <qualifiedname>satox::security::pqc::KeyManager::listKeys</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="75" column="17"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a5190d2fb1450f515998a117203f1fd45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="db/dd6/structsatox_1_1security_1_1pqc_1_1KeyMetadata" kindref="compound">KeyMetadata</ref> &gt;</type>
        <definition>std::vector&lt; KeyMetadata &gt; satox::security::pqc::KeyManager::listKeyMetadata</definition>
        <argsstring>() const</argsstring>
        <name>listKeyMetadata</name>
        <qualifiedname>satox::security::pqc::KeyManager::listKeyMetadata</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="76" column="17"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a2705b9c30e5d508f2507d0d41ccd2fea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::isKeyValid</definition>
        <argsstring>(const std::string &amp;keyId) const</argsstring>
        <name>isKeyValid</name>
        <qualifiedname>satox::security::pqc::KeyManager::isKeyValid</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a42ff3ec665d1f74809eaedb1d0db6c87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::isKeyExpired</definition>
        <argsstring>(const std::string &amp;keyId) const</argsstring>
        <name>isKeyExpired</name>
        <qualifiedname>satox::security::pqc::KeyManager::isKeyExpired</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="80" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a75249f23c3a040e25b691bfbeef2da05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::updateKeyMetadata</definition>
        <argsstring>(const std::string &amp;keyId, const std::string &amp;metadata)</argsstring>
        <name>updateKeyMetadata</name>
        <qualifiedname>satox::security::pqc::KeyManager::updateKeyMetadata</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="83" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1aa2356bd6f556ef61e25f676e292ddec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::pqc::KeyManager::setKeyExpiration</definition>
        <argsstring>(const std::string &amp;keyId, const std::chrono::system_clock::time_point &amp;expiration)</argsstring>
        <name>setKeyExpiration</name>
        <qualifiedname>satox::security::pqc::KeyManager::setKeyExpiration</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>keyId</declname>
        </param>
        <param>
          <type>const std::chrono::system_clock::time_point &amp;</type>
          <declname>expiration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a58460498c6dbecca9a0c816d3a967df5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::security::pqc::KeyManager::getLastError</definition>
        <argsstring>() const</argsstring>
        <name>getLastError</name>
        <qualifiedname>satox::security::pqc::KeyManager::getLastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="89" column="17"/>
      </memberdef>
      <memberdef kind="function" id="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a5190a2764a1ca5061a22da47926d517e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::pqc::KeyManager::clearLastError</definition>
        <argsstring>()</argsstring>
        <name>clearLastError</name>
        <qualifiedname>satox::security::pqc::KeyManager::clearLastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/security/pqc/key_manager.hpp" line="90" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/security/include/satox/security/pqc/pqc/key_manager.hpp" line="51" column="1" bodyfile="src/security/include/satox/security/pqc/pqc/key_manager.hpp" bodystart="51" bodyend="95"/>
    <listofallmembers>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a5190a2764a1ca5061a22da47926d517e" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>clearLastError</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a5190a2764a1ca5061a22da47926d517e" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>clearLastError</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a3ba531a928f06963211c985bd3aff4c0" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>deleteKey</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a3ba531a928f06963211c985bd3aff4c0" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>deleteKey</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a4bd2bc01d877e2819bd66586da1be065" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>generateAndStoreKey</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a4bd2bc01d877e2819bd66586da1be065" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>generateAndStoreKey</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a4921768394a10144d0e21b28d47bdceb" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>getKey</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a4921768394a10144d0e21b28d47bdceb" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>getKey</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a58460498c6dbecca9a0c816d3a967df5" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>getLastError</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a58460498c6dbecca9a0c816d3a967df5" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>getLastError</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a42ff3ec665d1f74809eaedb1d0db6c87" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>isKeyExpired</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a42ff3ec665d1f74809eaedb1d0db6c87" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>isKeyExpired</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a2705b9c30e5d508f2507d0d41ccd2fea" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>isKeyValid</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a2705b9c30e5d508f2507d0d41ccd2fea" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>isKeyValid</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a7a8b31a3f1bafa65c815223b89610dc8" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>KeyManager</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a7a8b31a3f1bafa65c815223b89610dc8" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>KeyManager</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a5190d2fb1450f515998a117203f1fd45" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>listKeyMetadata</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a5190d2fb1450f515998a117203f1fd45" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>listKeyMetadata</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a9ec8265aad35d0714a337e4aae338ced" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>listKeys</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a82ab17774d4973ab9414e58175d9f18d" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>listKeys</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a8173a8c4bcc0ff7f72e5653661c3d845" prot="private" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>pImpl</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a6b676d88a80fceddcbaa1a7533f92d38" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>rotateKey</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a6b676d88a80fceddcbaa1a7533f92d38" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>rotateKey</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1aa2356bd6f556ef61e25f676e292ddec9" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>setKeyExpiration</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1aa2356bd6f556ef61e25f676e292ddec9" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>setKeyExpiration</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a75249f23c3a040e25b691bfbeef2da05" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>updateKeyMetadata</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1a75249f23c3a040e25b691bfbeef2da05" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>updateKeyMetadata</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1afadecefff8c59a78d6989477b8b94af0" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>~KeyManager</name></member>
      <member refid="db/d0d/classsatox_1_1security_1_1pqc_1_1KeyManager_1afadecefff8c59a78d6989477b8b94af0" prot="public" virt="non-virtual"><scope>satox::security::pqc::KeyManager</scope><name>~KeyManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
