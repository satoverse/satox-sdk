<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="dd/deb/satox__sdk__c_8cpp" kind="file" language="C++">
    <compoundname>satox_sdk_c.cpp</compoundname>
    <includes local="yes">../include/satox_sdk.h</includes>
    <includes local="yes">../include/satox/satox.hpp</includes>
    <includes local="yes">satox/core/core_manager.hpp</includes>
    <includes refid="dc/d21/database_2include_2satox_2database_2database__manager_8hpp" local="yes">satox/database/database_manager.hpp</includes>
    <includes refid="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" local="yes">satox/security/security_manager.hpp</includes>
    <includes local="yes">satox/asset/asset_manager.hpp</includes>
    <includes refid="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" local="yes">satox/nft/nft_manager.hpp</includes>
    <includes local="no">nlohmann/json.hpp</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="3">
        <label>../include/satox/satox.hpp</label>
      </node>
      <node id="2">
        <label>../include/satox_sdk.h</label>
      </node>
      <node id="5">
        <label>satox/database/database_manager.hpp</label>
        <link refid="dc/d21/database_2include_2satox_2database_2database__manager_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>error.hpp</label>
        <link refid="d9/dba/database_2include_2satox_2database_2error_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>types.hpp</label>
        <link refid="dc/d57/database_2include_2satox_2database_2types_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>satox/nft/nft_manager.hpp</label>
        <link refid="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/satox_sdk_c.cpp</label>
        <link refid="dd/deb/satox__sdk__c_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>satox/security/input_validator.hpp</label>
        <link refid="df/ddb/input__validator_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>satox/security/rate_limiter.hpp</label>
        <link refid="d9/dd7/security_2include_2satox_2security_2rate__limiter_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>satox/security/security_manager.hpp</label>
        <link refid="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>atomic</label>
      </node>
      <node id="12">
        <label>chrono</label>
      </node>
      <node id="29">
        <label>condition_variable</label>
      </node>
      <node id="30">
        <label>cstring</label>
      </node>
      <node id="17">
        <label>exception</label>
      </node>
      <node id="11">
        <label>functional</label>
      </node>
      <node id="15">
        <label>map</label>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
      <node id="9">
        <label>mutex</label>
      </node>
      <node id="13">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="24">
        <label>regex</label>
      </node>
      <node id="26">
        <label>satox/asset/asset_manager.hpp</label>
      </node>
      <node id="4">
        <label>satox/core/core_manager.hpp</label>
      </node>
      <node id="20">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="18">
        <label>system_error</label>
      </node>
      <node id="28">
        <label>thread</label>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="22">
        <label>variant</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="dd/deb/satox__sdk__c_8cpp_1acf7b5c64f399e208e640affbee740571" prot="public" static="yes" mutable="no">
        <type>bool</type>
        <definition>bool sdk_initialized</definition>
        <argsstring></argsstring>
        <name>sdk_initialized</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="45" column="13" bodyfile="src/satox_sdk_c.cpp" bodystart="45" bodyend="-1"/>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1ae1343a49cf5c6b40999230f858aa6486" compoundref="dd/deb/satox__sdk__c_8cpp" startline="61" endline="77">satox_sdk_initialize</referencedby>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1abadfe77456ac3638d3723ba00d7c3f21" compoundref="dd/deb/satox__sdk__c_8cpp" startline="80" endline="89">satox_sdk_shutdown</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * string_to_c_string</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>string_to_c_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="48" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="48" bodyend="52"/>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1a12fec068a72dfd482056414565efcf40" compoundref="dd/deb/satox__sdk__c_8cpp" startline="55" endline="58">json_to_c_string</referencedby>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1aa8ccff6068bb256f4edb0e3da414ff2f" compoundref="dd/deb/satox__sdk__c_8cpp" startline="176" endline="186">satox_security_manager_decrypt_data</referencedby>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1a14ba8815f415492a519d155f6994809f" compoundref="dd/deb/satox__sdk__c_8cpp" startline="164" endline="174">satox_security_manager_encrypt_data</referencedby>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1a5022cd99d69329335abd45f888b55b00" compoundref="dd/deb/satox__sdk__c_8cpp" startline="114" endline="127">satox_security_manager_generate_keypair</referencedby>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1adb6ac90d10b479392036bcc4e662b385" compoundref="dd/deb/satox__sdk__c_8cpp" startline="153" endline="162">satox_security_manager_sha256</referencedby>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1abc094429788d2a2053abb73708809b66" compoundref="dd/deb/satox__sdk__c_8cpp" startline="129" endline="139">satox_security_manager_sign_data</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a12fec068a72dfd482056414565efcf40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * json_to_c_string</definition>
        <argsstring>(const json &amp;j)</argsstring>
        <name>json_to_c_string</name>
        <param>
          <type>const <ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref> &amp;</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="55" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="55" bodyend="58"/>
        <references refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" compoundref="dd/deb/satox__sdk__c_8cpp" startline="48" endline="52">string_to_c_string</references>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1a5c563e34dd062f2ea0864a485c4e8697" compoundref="dd/deb/satox__sdk__c_8cpp" startline="223" endline="235">satox_database_manager_list_databases</referencedby>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1a5b53cbbf009c79909efb1fdaf016ca42" compoundref="dd/deb/satox__sdk__c_8cpp" startline="327" endline="359">satox_nft_manager_create_nft</referencedby>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1a04bcf47732d1e8e99ccb2f084ced556c" compoundref="dd/deb/satox__sdk__c_8cpp" startline="361" endline="389">satox_nft_manager_get_nft_info</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ae1343a49cf5c6b40999230f858aa6486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_sdk_initialize</definition>
        <argsstring>()</argsstring>
        <name>satox_sdk_initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="61" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="61" bodyend="77"/>
        <references refid="dd/deb/satox__sdk__c_8cpp_1acf7b5c64f399e208e640affbee740571" compoundref="dd/deb/satox__sdk__c_8cpp" startline="45">sdk_initialized</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1abadfe77456ac3638d3723ba00d7c3f21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox_sdk_shutdown</definition>
        <argsstring>()</argsstring>
        <name>satox_sdk_shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="80" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="80" bodyend="89"/>
        <references refid="dd/deb/satox__sdk__c_8cpp_1acf7b5c64f399e208e640affbee740571" compoundref="dd/deb/satox__sdk__c_8cpp" startline="45">sdk_initialized</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ad80f49135ff2a4054710448cd7140cf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * satox_sdk_get_version</definition>
        <argsstring>()</argsstring>
        <name>satox_sdk_get_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="92" column="12" bodyfile="src/satox_sdk_c.cpp" bodystart="92" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a004dad2272532774ebf3821f8c3b9020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * satox_security_manager_create</definition>
        <argsstring>()</argsstring>
        <name>satox_security_manager_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="101" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="101" bodyend="108"/>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aa15090f08e4d58997a55723551b7a3f4" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="44" endline="47">satox::security::SecurityManager::getInstance</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ab7c96d1fc10306dbf58cf26387612a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox_security_manager_destroy</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_security_manager_destroy</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="110" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a5022cd99d69329335abd45f888b55b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_security_manager_generate_keypair</definition>
        <argsstring>(void *handle, char **public_key, char **private_key)</argsstring>
        <name>satox_security_manager_generate_keypair</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>public_key</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>private_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="114" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="114" bodyend="127"/>
        <references refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" compoundref="dd/deb/satox__sdk__c_8cpp" startline="48" endline="52">string_to_c_string</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1abc094429788d2a2053abb73708809b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_security_manager_sign_data</definition>
        <argsstring>(void *handle, const char *data, const char *private_key)</argsstring>
        <name>satox_security_manager_sign_data</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>private_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="129" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="129" bodyend="139"/>
        <references refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" compoundref="dd/deb/satox__sdk__c_8cpp" startline="48" endline="52">string_to_c_string</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a9795de3fef39d5f46f5b1e54df6706c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_security_manager_verify_signature</definition>
        <argsstring>(void *handle, const char *data, const char *signature, const char *public_key)</argsstring>
        <name>satox_security_manager_verify_signature</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>public_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="141" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="141" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1adb6ac90d10b479392036bcc4e662b385" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_security_manager_sha256</definition>
        <argsstring>(void *handle, const char *data)</argsstring>
        <name>satox_security_manager_sha256</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="153" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="153" bodyend="162"/>
        <references refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" compoundref="dd/deb/satox__sdk__c_8cpp" startline="48" endline="52">string_to_c_string</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a14ba8815f415492a519d155f6994809f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_security_manager_encrypt_data</definition>
        <argsstring>(void *handle, const char *data, const char *public_key)</argsstring>
        <name>satox_security_manager_encrypt_data</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>public_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="164" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="164" bodyend="174"/>
        <references refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" compoundref="dd/deb/satox__sdk__c_8cpp" startline="48" endline="52">string_to_c_string</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1aa8ccff6068bb256f4edb0e3da414ff2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_security_manager_decrypt_data</definition>
        <argsstring>(void *handle, const char *encrypted_data, const char *private_key)</argsstring>
        <name>satox_security_manager_decrypt_data</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>encrypted_data</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>private_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="176" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="176" bodyend="186"/>
        <references refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" compoundref="dd/deb/satox__sdk__c_8cpp" startline="48" endline="52">string_to_c_string</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a6624d815757db0a326f68bbe3b48ac60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * satox_database_manager_create</definition>
        <argsstring>(const char *config_json)</argsstring>
        <name>satox_database_manager_create</name>
        <param>
          <type>const char *</type>
          <declname>config_json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="189" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="189" bodyend="208"/>
        <references refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig_1a126d0f6d00000ab9365c7c30bc4d0eeb" compoundref="dc/d57/database_2include_2satox_2database_2types_8hpp" startline="55">satox::database::DatabaseConfig::connectionTimeout</references>
        <references refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig_1ac2a6acec1a314217fa9112fa453a7aaf" compoundref="dc/d57/database_2include_2satox_2database_2types_8hpp" startline="52">satox::database::DatabaseConfig::enableLogging</references>
        <references refid="df/dcb/classsatox_1_1database_1_1DatabaseManager_1ab3e8f0d2dfff4e964c87b6a7277ef731" compoundref="d7/d7a/database_2src_2database__manager_8cpp" startline="24" endline="27">satox::database::DatabaseManager::getInstance</references>
        <references refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig_1a22f19d5de470facb43ab5dc85e2f030a" compoundref="dc/d57/database_2include_2satox_2database_2types_8hpp" startline="53">satox::database::DatabaseConfig::logPath</references>
        <references refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig_1a9c3a5d0de3446ee27388acfcbb3eeb07" compoundref="dc/d57/database_2include_2satox_2database_2types_8hpp" startline="54">satox::database::DatabaseConfig::maxConnections</references>
        <references refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig_1a2b628c7dbd95742a5850efcf202e89e3" compoundref="dc/d57/database_2include_2satox_2database_2types_8hpp" startline="51">satox::database::DatabaseConfig::name</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ad523821d4327889f48f903bfe1933e20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox_database_manager_destroy</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_database_manager_destroy</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="210" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a6fe38bb29bff13ac74b987dbfbc782f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_database_manager_create_database</definition>
        <argsstring>(void *handle, const char *name)</argsstring>
        <name>satox_database_manager_create_database</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="214" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="214" bodyend="221"/>
        <references refid="df/dcb/classsatox_1_1database_1_1DatabaseManager_1ac3b40406766cd08437aef73d9ef59569" compoundref="d7/d7a/database_2src_2database__manager_8cpp" startline="200" endline="236">satox::database::DatabaseManager::createDatabase</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a5c563e34dd062f2ea0864a485c4e8697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_database_manager_list_databases</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_database_manager_list_databases</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="223" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="223" bodyend="235"/>
        <references refid="dd/deb/satox__sdk__c_8cpp_1a12fec068a72dfd482056414565efcf40" compoundref="dd/deb/satox__sdk__c_8cpp" startline="55" endline="58">json_to_c_string</references>
        <references refid="df/dcb/classsatox_1_1database_1_1DatabaseManager_1a2ae4f323f19e41a2d1d54bed4a930ebc" compoundref="d7/d7a/database_2src_2database__manager_8cpp" startline="277" endline="295">satox::database::DatabaseManager::listDatabases</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1aaa14fd52d8fd5cc0ca88d7decc556fc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * satox_asset_manager_create</definition>
        <argsstring>()</argsstring>
        <name>satox_asset_manager_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="238" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="238" bodyend="245"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a16c138da27f1d66ba124a1c44a5b8808" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="63" endline="66">satox::asset::AssetManager::getInstance</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ac2a8136439426046c2414cd7effe4134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox_asset_manager_destroy</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_asset_manager_destroy</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="247" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a570e963c5efbc80219e936bc48623601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_asset_manager_create_asset</definition>
        <argsstring>(void *handle, const char *name, const char *symbol)</argsstring>
        <name>satox_asset_manager_create_asset</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="251" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="251" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a79db5cbfabc0e3a41304f98b09f28c5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_asset_manager_get_asset_info</definition>
        <argsstring>(void *handle, const char *asset_id)</argsstring>
        <name>satox_asset_manager_get_asset_info</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>asset_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="283" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="283" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a4edc8aba54a1bf9e3e7e4864c75e5740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * satox_nft_manager_create</definition>
        <argsstring>()</argsstring>
        <name>satox_nft_manager_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="314" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="314" bodyend="321"/>
        <references refid="dc/d55/classsatox_1_1nft_1_1NFTManager_1a64e23bcdc2c4a44a11d2a4e88563d6d3" compoundref="d5/d80/nft_2src_2nft__manager_8cpp" startline="39" endline="42">satox::nft::NFTManager::getInstance</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a04dfda3739381df5dfb7dd7cedb0163e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox_nft_manager_destroy</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_nft_manager_destroy</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="323" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a5b53cbbf009c79909efb1fdaf016ca42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_nft_manager_create_nft</definition>
        <argsstring>(void *handle, const char *asset_id, const char *metadata_json, const char *owner_address)</argsstring>
        <name>satox_nft_manager_create_nft</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>metadata_json</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>owner_address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="327" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="327" bodyend="359"/>
        <references refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1a1def8874c57af51de7abe830f84f9a42" compoundref="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" startline="99">satox::nft::NFTManager::NFTMetadata::additionalData</references>
        <references refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1ab28221f92d02362279da520e610d0b8c" compoundref="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" startline="98">satox::nft::NFTManager::NFTMetadata::attributes</references>
        <references refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1a8a4932497d180ae3ec9110ab3204dbbe" compoundref="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" startline="95">satox::nft::NFTManager::NFTMetadata::description</references>
        <references refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1a882bc24e9370492d59c2bfdd7fc79ef7" compoundref="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" startline="97">satox::nft::NFTManager::NFTMetadata::externalUrl</references>
        <references refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1a5994f8264025239737f02433692f40a1" compoundref="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" startline="96">satox::nft::NFTManager::NFTMetadata::image</references>
        <references refid="dd/deb/satox__sdk__c_8cpp_1a12fec068a72dfd482056414565efcf40" compoundref="dd/deb/satox__sdk__c_8cpp" startline="55" endline="58">json_to_c_string</references>
        <references refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1ab620d206dc3ea7aef13b3d2fe71e7b79" compoundref="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" startline="94">satox::nft::NFTManager::NFTMetadata::name</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a04bcf47732d1e8e99ccb2f084ced556c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_nft_manager_get_nft_info</definition>
        <argsstring>(void *handle, const char *nft_id)</argsstring>
        <name>satox_nft_manager_get_nft_info</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nft_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="361" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="361" bodyend="389"/>
        <references refid="dc/d55/classsatox_1_1nft_1_1NFTManager_1a30d71e29b2633dbd64f160646db2fe7e" compoundref="d5/d80/nft_2src_2nft__manager_8cpp" startline="478" endline="498">satox::nft::NFTManager::getNFT</references>
        <references refid="dd/deb/satox__sdk__c_8cpp_1a12fec068a72dfd482056414565efcf40" compoundref="dd/deb/satox__sdk__c_8cpp" startline="55" endline="58">json_to_c_string</references>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ad5f871c9beed736813522c3e469f390f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * satox_blockchain_manager_create</definition>
        <argsstring>(const char *config_json)</argsstring>
        <name>satox_blockchain_manager_create</name>
        <param>
          <type>const char *</type>
          <declname>config_json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="392" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="392" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ae645745ac03c0feb39c07b04f46a675b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox_blockchain_manager_destroy</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_blockchain_manager_destroy</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="393" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="393" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a9c512ce2ba147bb055cb196eedd96093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_blockchain_manager_get_block_height</definition>
        <argsstring>(void *handle, unsigned long long *height)</argsstring>
        <name>satox_blockchain_manager_get_block_height</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned long long *</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="394" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="394" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a49f966a0aa1818001affffbbd3ac6be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_blockchain_manager_get_block_info</definition>
        <argsstring>(void *handle, const char *hash)</argsstring>
        <name>satox_blockchain_manager_get_block_info</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="395" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="395" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a87f8836c5ebc5543e19d25a3b206b27d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_blockchain_manager_get_transaction_info</definition>
        <argsstring>(void *handle, const char *txid)</argsstring>
        <name>satox_blockchain_manager_get_transaction_info</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>txid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="396" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="396" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1af146bebc814f08d1703595475e574280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_blockchain_manager_get_best_block_hash</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_blockchain_manager_get_best_block_hash</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="397" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="397" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a7a8b1d56c98639954b75d7294c1e47c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_blockchain_manager_get_block_hash</definition>
        <argsstring>(void *handle, unsigned long long height)</argsstring>
        <name>satox_blockchain_manager_get_block_hash</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="398" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="398" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a156398b089260294617f8fcff7c53a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_asset_manager_transfer_asset</definition>
        <argsstring>(void *handle, const char *asset_id, const char *from_address, const char *to_address, unsigned long long amount)</argsstring>
        <name>satox_asset_manager_transfer_asset</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>from_address</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>to_address</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="400" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="400" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1acd1ba6cbe61bb0d96d845fed057abaa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_asset_manager_get_asset_balance</definition>
        <argsstring>(void *handle, const char *asset_id, const char *address, unsigned long long *balance)</argsstring>
        <name>satox_asset_manager_get_asset_balance</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>unsigned long long *</type>
          <declname>balance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="401" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="401" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a1f22a08c3a3820d8c790ffb123ad5a61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_asset_manager_reissue_asset</definition>
        <argsstring>(void *handle, const char *asset_id, const char *owner_address, unsigned long long amount)</argsstring>
        <name>satox_asset_manager_reissue_asset</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>owner_address</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="402" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="402" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a7ba030f24e48f9d91ac5148659d90d4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_asset_manager_burn_asset</definition>
        <argsstring>(void *handle, const char *asset_id, const char *owner_address, unsigned long long amount)</argsstring>
        <name>satox_asset_manager_burn_asset</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>owner_address</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="403" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="403" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1aed75a4361f15782432b4de24bf7b2445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * satox_network_manager_create</definition>
        <argsstring>(const char *config_json)</argsstring>
        <name>satox_network_manager_create</name>
        <param>
          <type>const char *</type>
          <declname>config_json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="405" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="405" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a0535a7ad8a8b7e54e87753d325280666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox_network_manager_destroy</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_network_manager_destroy</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="406" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="406" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a290a94ba010b34399ad9f85b3e4076a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_network_manager_start</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_network_manager_start</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="407" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="407" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1af77da003f661c2df255ebb9c63ae1344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_network_manager_stop</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_network_manager_stop</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="408" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="408" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ad5990de38701feadd8297ed785d1b3c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_network_manager_get_peers</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_network_manager_get_peers</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="409" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="409" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1aea7c326d5d8b1db5c9c661ddbe9f1a5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_network_manager_get_stats</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_network_manager_get_stats</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="410" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="410" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ab4e6105e766963a7f0b49df981242687" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_network_manager_add_peer</definition>
        <argsstring>(void *handle, const char *address, unsigned short port)</argsstring>
        <name>satox_network_manager_add_peer</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="411" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="411" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1adb0f2003fcc949bbe9d6378b8a41c4a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_network_manager_remove_peer</definition>
        <argsstring>(void *handle, const char *address, unsigned short port)</argsstring>
        <name>satox_network_manager_remove_peer</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="412" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="412" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a6a17fc1319ad145e8ffd906cdebc3305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_network_manager_send_message</definition>
        <argsstring>(void *handle, const char *address, unsigned short port, const char *message)</argsstring>
        <name>satox_network_manager_send_message</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="413" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="413" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a05f667eff9e5fc2e4ba0ba7a9af91a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_nft_manager_transfer_nft</definition>
        <argsstring>(void *handle, const char *nft_id, const char *from_address, const char *to_address)</argsstring>
        <name>satox_nft_manager_transfer_nft</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nft_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>from_address</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>to_address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="415" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="415" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a518d0410225cb654171fb450977071ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_nft_manager_get_nfts_by_owner</definition>
        <argsstring>(void *handle, const char *address)</argsstring>
        <name>satox_nft_manager_get_nfts_by_owner</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="416" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="416" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a34ddb102c053c7b72878ea70f5ddba12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_nft_manager_update_metadata</definition>
        <argsstring>(void *handle, const char *nft_id, const char *metadata_json, const char *owner_address)</argsstring>
        <name>satox_nft_manager_update_metadata</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nft_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>metadata_json</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>owner_address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="417" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="417" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1aa8d85ed313fcfb12fbec7fb619c90b23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * satox_ipfs_manager_create</definition>
        <argsstring>(const char *config_json)</argsstring>
        <name>satox_ipfs_manager_create</name>
        <param>
          <type>const char *</type>
          <declname>config_json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="419" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="419" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1af3f1e971271b099fdb8c88404270193d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox_ipfs_manager_destroy</definition>
        <argsstring>(void *handle)</argsstring>
        <name>satox_ipfs_manager_destroy</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="420" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="420" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a9b8331c457e018dfc8acf54ed8ffe0d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_ipfs_manager_upload_file</definition>
        <argsstring>(void *handle, const char *file_path)</argsstring>
        <name>satox_ipfs_manager_upload_file</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="421" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="421" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a230d9077890254ece33751f7c9ae1470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_ipfs_manager_upload_data</definition>
        <argsstring>(void *handle, const unsigned char *data, unsigned long long size, const char *filename)</argsstring>
        <name>satox_ipfs_manager_upload_data</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="422" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="422" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a3c9d56cbb6a05ea7b904f1b67137c2ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_ipfs_manager_download_file</definition>
        <argsstring>(void *handle, const char *hash, const char *output_path)</argsstring>
        <name>satox_ipfs_manager_download_file</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>output_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="423" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="423" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a8a17485b2a3e5bd0f4a013246cbeafba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_ipfs_manager_get_file_info</definition>
        <argsstring>(void *handle, const char *hash)</argsstring>
        <name>satox_ipfs_manager_get_file_info</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="424" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="424" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ab0ac62f272d739959cf6ed98d8658bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_ipfs_manager_pin_file</definition>
        <argsstring>(void *handle, const char *hash)</argsstring>
        <name>satox_ipfs_manager_pin_file</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="425" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="425" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1ac9b1dd03b6b0a305e6edca1ccd2d29b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int satox_ipfs_manager_unpin_file</definition>
        <argsstring>(void *handle, const char *hash)</argsstring>
        <name>satox_ipfs_manager_unpin_file</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="426" column="5" bodyfile="src/satox_sdk_c.cpp" bodystart="426" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="dd/deb/satox__sdk__c_8cpp_1a47ef298740e638a46d8f53aa5459ffd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * satox_ipfs_manager_get_gateway_url</definition>
        <argsstring>(void *handle, const char *hash)</argsstring>
        <name>satox_ipfs_manager_get_gateway_url</name>
        <param>
          <type>void *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/satox_sdk_c.cpp" line="427" column="6" bodyfile="src/satox_sdk_c.cpp" bodystart="427" bodyend="427"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/satox_sdk.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/satox/satox.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;satox/core/core_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d21/database_2include_2satox_2database_2database__manager_8hpp" kindref="compound">satox/database/database_manager.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" kindref="compound">satox/security/security_manager.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;satox/asset/asset_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp" kindref="compound">satox/nft/nft_manager.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nlohmann/json.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>=<sp/>nlohmann::json;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>SDK<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="dd/deb/satox__sdk__c_8cpp_1acf7b5c64f399e208e640affbee740571" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1acf7b5c64f399e208e640affbee740571" kindref="member">sdk_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>convert<sp/>std::string<sp/>to<sp/>C<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" kindref="member">string_to_c_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>c_str<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[str.length()<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::strcpy(c_str,<sp/>str.c_str());</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c_str;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>convert<sp/>JSON<sp/>to<sp/>C<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="dd/deb/satox__sdk__c_8cpp_1a12fec068a72dfd482056414565efcf40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a12fec068a72dfd482056414565efcf40" kindref="member">json_to_c_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref>&amp;<sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str<sp/>=<sp/>j.dump();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" kindref="member">string_to_c_string</ref>(str);</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>Satox<sp/>SDK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="dd/deb/satox__sdk__c_8cpp_1ae1343a49cf5c6b40999230f858aa6486" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ae1343a49cf5c6b40999230f858aa6486" kindref="member">satox_sdk_initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/deb/satox__sdk__c_8cpp_1acf7b5c64f399e208e640affbee740571" kindref="member">sdk_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Already<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>SDK<sp/>with<sp/>default<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>config<sp/>=<sp/>json::object();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(satox::SDK::getInstance().initialize(config))<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1acf7b5c64f399e208e640affbee740571" kindref="member">sdk_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Shutdown<sp/>the<sp/>Satox<sp/>SDK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="dd/deb/satox__sdk__c_8cpp_1abadfe77456ac3638d3723ba00d7c3f21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1abadfe77456ac3638d3723ba00d7c3f21" kindref="member">satox_sdk_shutdown</ref>()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/deb/satox__sdk__c_8cpp_1acf7b5c64f399e208e640affbee740571" kindref="member">sdk_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>satox::SDK::getInstance().shutdown();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1acf7b5c64f399e208e640affbee740571" kindref="member">sdk_initialized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>errors<sp/>during<sp/>shutdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>SDK<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="dd/deb/satox__sdk__c_8cpp_1ad80f49135ff2a4054710448cd7140cf2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ad80f49135ff2a4054710448cd7140cf2" kindref="member">satox_sdk_get_version</ref>()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>satox::SDK::getInstance().getVersion().c_str();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;unknown&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Security<sp/>manager<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="dd/deb/satox__sdk__c_8cpp_1a004dad2272532774ebf3821f8c3b9020" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a004dad2272532774ebf3821f8c3b9020" kindref="member">satox_security_manager_create</ref>()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/><ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aa15090f08e4d58997a55723551b7a3f4" kindref="member">satox::security::SecurityManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;manager;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="dd/deb/satox__sdk__c_8cpp_1ab7c96d1fc10306dbf58cf26387612a4e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ab7c96d1fc10306dbf58cf26387612a4e" kindref="member">satox_security_manager_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No-op<sp/>for<sp/>singleton<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="dd/deb/satox__sdk__c_8cpp_1a5022cd99d69329335abd45f888b55b00" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a5022cd99d69329335abd45f888b55b00" kindref="member">satox_security_manager_generate_keypair</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>public_key,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>private_key)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager" kindref="compound">satox::security::SecurityManager</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(manager.generatePQCKeyPair(</highlight><highlight class="stringliteral">&quot;DEFAULT&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>return<sp/>placeholder<sp/>keys</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*public_key<sp/>=<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" kindref="member">string_to_c_string</ref>(</highlight><highlight class="stringliteral">&quot;placeholder_public_key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*private_key<sp/>=<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" kindref="member">string_to_c_string</ref>(</highlight><highlight class="stringliteral">&quot;placeholder_private_key&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="dd/deb/satox__sdk__c_8cpp_1abc094429788d2a2053abb73708809b66" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1abc094429788d2a2053abb73708809b66" kindref="member">satox_security_manager_sign_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>private_key)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager" kindref="compound">satox::security::SecurityManager</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(manager.signWithPQC(</highlight><highlight class="stringliteral">&quot;DEFAULT&quot;</highlight><highlight class="normal">,<sp/>data))<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" kindref="member">string_to_c_string</ref>(</highlight><highlight class="stringliteral">&quot;placeholder_signature&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="dd/deb/satox__sdk__c_8cpp_1a9795de3fef39d5f46f5b1e54df6706c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a9795de3fef39d5f46f5b1e54df6706c6" kindref="member">satox_security_manager_verify_signature</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>signature,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>public_key)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager" kindref="compound">satox::security::SecurityManager</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(manager.verifyWithPQC(</highlight><highlight class="stringliteral">&quot;DEFAULT&quot;</highlight><highlight class="normal">,<sp/>data,<sp/>signature))<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="dd/deb/satox__sdk__c_8cpp_1adb6ac90d10b479392036bcc4e662b385" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1adb6ac90d10b479392036bcc4e662b385" kindref="member">satox_security_manager_sha256</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>SHA256<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>input(data);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>hash<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;placeholder_sha256_hash&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>In<sp/>real<sp/>implementation,<sp/>compute<sp/>actual<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" kindref="member">string_to_c_string</ref>(hash);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="dd/deb/satox__sdk__c_8cpp_1a14ba8815f415492a519d155f6994809f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a14ba8815f415492a519d155f6994809f" kindref="member">satox_security_manager_encrypt_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>public_key)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager" kindref="compound">satox::security::SecurityManager</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(manager.encryptWithPQC(</highlight><highlight class="stringliteral">&quot;DEFAULT&quot;</highlight><highlight class="normal">,<sp/>data))<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" kindref="member">string_to_c_string</ref>(</highlight><highlight class="stringliteral">&quot;placeholder_encrypted_data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="dd/deb/satox__sdk__c_8cpp_1aa8ccff6068bb256f4edb0e3da414ff2f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1aa8ccff6068bb256f4edb0e3da414ff2f" kindref="member">satox_security_manager_decrypt_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>encrypted_data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>private_key)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager" kindref="compound">satox::security::SecurityManager</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(manager.decryptWithPQC(</highlight><highlight class="stringliteral">&quot;DEFAULT&quot;</highlight><highlight class="normal">,<sp/>encrypted_data))<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a78aebb34729a67740349e6384ae6cb94" kindref="member">string_to_c_string</ref>(</highlight><highlight class="stringliteral">&quot;placeholder_decrypted_data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Database<sp/>manager<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="dd/deb/satox__sdk__c_8cpp_1a6624d815757db0a326f68bbe3b48ac60" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a6624d815757db0a326f68bbe3b48ac60" kindref="member">satox_database_manager_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>config_json)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/><ref refid="df/dcb/classsatox_1_1database_1_1DatabaseManager_1ab3e8f0d2dfff4e964c87b6a7277ef731" kindref="member">satox::database::DatabaseManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig" kindref="compound">satox::database::DatabaseConfig</ref><sp/>config;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config_json)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>j<sp/>=<sp/>json::parse(config_json);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j.contains(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">))<sp/>config.<ref refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig_1a2b628c7dbd95742a5850efcf202e89e3" kindref="member">name</ref><sp/>=<sp/>j[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j.contains(</highlight><highlight class="stringliteral">&quot;enableLogging&quot;</highlight><highlight class="normal">))<sp/>config.<ref refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig_1ac2a6acec1a314217fa9112fa453a7aaf" kindref="member">enableLogging</ref><sp/>=<sp/>j[</highlight><highlight class="stringliteral">&quot;enableLogging&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j.contains(</highlight><highlight class="stringliteral">&quot;logPath&quot;</highlight><highlight class="normal">))<sp/>config.<ref refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig_1a22f19d5de470facb43ab5dc85e2f030a" kindref="member">logPath</ref><sp/>=<sp/>j[</highlight><highlight class="stringliteral">&quot;logPath&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j.contains(</highlight><highlight class="stringliteral">&quot;maxConnections&quot;</highlight><highlight class="normal">))<sp/>config.<ref refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig_1a9c3a5d0de3446ee27388acfcbb3eeb07" kindref="member">maxConnections</ref><sp/>=<sp/>j[</highlight><highlight class="stringliteral">&quot;maxConnections&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j.contains(</highlight><highlight class="stringliteral">&quot;connectionTimeout&quot;</highlight><highlight class="normal">))<sp/>config.<ref refid="d0/df3/structsatox_1_1database_1_1DatabaseConfig_1a126d0f6d00000ab9365c7c30bc4d0eeb" kindref="member">connectionTimeout</ref><sp/>=<sp/>j[</highlight><highlight class="stringliteral">&quot;connectionTimeout&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(manager.initialize(config))<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;manager;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="dd/deb/satox__sdk__c_8cpp_1ad523821d4327889f48f903bfe1933e20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ad523821d4327889f48f903bfe1933e20" kindref="member">satox_database_manager_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No-op<sp/>for<sp/>singleton<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="dd/deb/satox__sdk__c_8cpp_1a6fe38bb29bff13ac74b987dbfbc782f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a6fe38bb29bff13ac74b987dbfbc782f0" kindref="member">satox_database_manager_create_database</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="df/dcb/classsatox_1_1database_1_1DatabaseManager" kindref="compound">satox::database::DatabaseManager</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>manager.<ref refid="df/dcb/classsatox_1_1database_1_1DatabaseManager_1ac3b40406766cd08437aef73d9ef59569" kindref="member">createDatabase</ref>(name)<sp/>?<sp/>0<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="dd/deb/satox__sdk__c_8cpp_1a5c563e34dd062f2ea0864a485c4e8697" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a5c563e34dd062f2ea0864a485c4e8697" kindref="member">satox_database_manager_list_databases</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="df/dcb/classsatox_1_1database_1_1DatabaseManager" kindref="compound">satox::database::DatabaseManager</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>databases<sp/>=<sp/>manager.<ref refid="df/dcb/classsatox_1_1database_1_1DatabaseManager_1a2ae4f323f19e41a2d1d54bed4a930ebc" kindref="member">listDatabases</ref>();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>result<sp/>=<sp/>json::array();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>db<sp/>:<sp/>databases)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(db);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a12fec068a72dfd482056414565efcf40" kindref="member">json_to_c_string</ref>(result);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Asset<sp/>manager<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="dd/deb/satox__sdk__c_8cpp_1aaa14fd52d8fd5cc0ca88d7decc556fc1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1aaa14fd52d8fd5cc0ca88d7decc556fc1" kindref="member">satox_asset_manager_create</ref>()<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a16c138da27f1d66ba124a1c44a5b8808" kindref="member">satox::asset::AssetManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;manager;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="dd/deb/satox__sdk__c_8cpp_1ac2a8136439426046c2414cd7effe4134" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ac2a8136439426046c2414cd7effe4134" kindref="member">satox_asset_manager_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No-op<sp/>for<sp/>singleton<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="dd/deb/satox__sdk__c_8cpp_1a570e963c5efbc80219e936bc48623601" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a570e963c5efbc80219e936bc48623601" kindref="member">satox_asset_manager_create_asset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>symbol)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Fix<sp/>this<sp/>function<sp/>to<sp/>use<sp/>correct<sp/>AssetManager<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto&amp;<sp/>manager<sp/>=<sp/>satox::asset::AssetManager::getInstance();</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>satox::asset::Asset<sp/>asset;</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset.id<sp/>=<sp/>&quot;asset_&quot;<sp/>+<sp/>std::to_string(time(nullptr));</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset.name<sp/>=<sp/>name<sp/>?<sp/>name<sp/>:<sp/>&quot;&quot;;</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset.symbol<sp/>=<sp/>symbol<sp/>?<sp/>symbol<sp/>:<sp/>&quot;&quot;;</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset.owner<sp/>=<sp/>&quot;default_owner&quot;;</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset.total_supply<sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset.decimals<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset.status<sp/>=<sp/>&quot;created&quot;;</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset.metadata<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;asset_id&quot;,<sp/>asset.id},</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;status&quot;,<sp/>&quot;created&quot;}</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>result<sp/>=<sp/>manager.createAsset(asset);</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(result.success)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>strdup(asset.id.c_str());</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>strdup(result.error_message.c_str());</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(const<sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>strdup(e.what());</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(</highlight><highlight class="stringliteral">&quot;C<sp/>wrapper<sp/>not<sp/>implemented<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="dd/deb/satox__sdk__c_8cpp_1a79db5cbfabc0e3a41304f98b09f28c5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a79db5cbfabc0e3a41304f98b09f28c5b" kindref="member">satox_asset_manager_get_asset_info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>asset_id)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Fix<sp/>this<sp/>function<sp/>to<sp/>use<sp/>correct<sp/>AssetManager<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto&amp;<sp/>manager<sp/>=<sp/>satox::asset::AssetManager::getInstance();</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>asset_opt<sp/>=<sp/>manager.getAsset(asset_id);</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(asset_opt)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto&amp;<sp/>asset<sp/>=<sp/>*asset_opt;</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlohmann::json<sp/>result<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;id&quot;,<sp/>asset.id},</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;name&quot;,<sp/>asset.name},</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;symbol&quot;,<sp/>asset.symbol},</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;owner&quot;,<sp/>asset.owner},</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;total_supply&quot;,<sp/>asset.total_supply},</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;decimals&quot;,<sp/>asset.decimals},</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;status&quot;,<sp/>asset.status},</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{&quot;metadata&quot;,<sp/>asset.metadata}</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>strdup(result.dump().c_str());</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>strdup(&quot;Asset<sp/>not<sp/>found&quot;);</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>catch<sp/>(const<sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>strdup(e.what());</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strdup(</highlight><highlight class="stringliteral">&quot;C<sp/>wrapper<sp/>not<sp/>implemented<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NFT<sp/>manager<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="dd/deb/satox__sdk__c_8cpp_1a4edc8aba54a1bf9e3e7e4864c75e5740" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a4edc8aba54a1bf9e3e7e4864c75e5740" kindref="member">satox_nft_manager_create</ref>()<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/><ref refid="dc/d55/classsatox_1_1nft_1_1NFTManager_1a64e23bcdc2c4a44a11d2a4e88563d6d3" kindref="member">satox::nft::NFTManager::getInstance</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;manager;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="dd/deb/satox__sdk__c_8cpp_1a04dfda3739381df5dfb7dd7cedb0163e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a04dfda3739381df5dfb7dd7cedb0163e" kindref="member">satox_nft_manager_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No-op<sp/>for<sp/>singleton<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="dd/deb/satox__sdk__c_8cpp_1a5b53cbbf009c79909efb1fdaf016ca42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a5b53cbbf009c79909efb1fdaf016ca42" kindref="member">satox_nft_manager_create_nft</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>asset_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>metadata_json,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>owner_address)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="dc/d55/classsatox_1_1nft_1_1NFTManager" kindref="compound">satox::nft::NFTManager</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>metadata<sp/>=<sp/>json::parse(metadata_json);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata" kindref="compound">satox::nft::NFTManager::NFTMetadata</ref><sp/>nft_metadata;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nft_metadata.<ref refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1ab620d206dc3ea7aef13b3d2fe71e7b79" kindref="member">name</ref><sp/>=<sp/>metadata.value(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Default<sp/>NFT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nft_metadata.<ref refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1a8a4932497d180ae3ec9110ab3204dbbe" kindref="member">description</ref><sp/>=<sp/>metadata.value(</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nft_metadata.<ref refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1a5994f8264025239737f02433692f40a1" kindref="member">image</ref><sp/>=<sp/>metadata.value(</highlight><highlight class="stringliteral">&quot;image&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nft_metadata.<ref refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1a882bc24e9370492d59c2bfdd7fc79ef7" kindref="member">externalUrl</ref><sp/>=<sp/>metadata.value(</highlight><highlight class="stringliteral">&quot;external_url&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nft_metadata.<ref refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1a1def8874c57af51de7abe830f84f9a42" kindref="member">additionalData</ref><sp/>=<sp/>metadata;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata.contains(</highlight><highlight class="stringliteral">&quot;attributes&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[key,<sp/>value]<sp/>:<sp/>metadata[</highlight><highlight class="stringliteral">&quot;attributes&quot;</highlight><highlight class="normal">].items())<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nft_metadata.<ref refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata_1ab28221f92d02362279da520e610d0b8c" kindref="member">attributes</ref>[key]<sp/>=<sp/>value.get&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>contract_address<sp/>=<sp/>metadata.value(</highlight><highlight class="stringliteral">&quot;contract_address&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;default_contract&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>nft_id<sp/>=<sp/>manager.createNFT(contract_address,<sp/>nft_metadata,<sp/>owner_address);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nft_id.empty())<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>result<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;nft_id&quot;</highlight><highlight class="normal">,<sp/>nft_id},</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;created&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a12fec068a72dfd482056414565efcf40" kindref="member">json_to_c_string</ref>(result);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361" refid="dd/deb/satox__sdk__c_8cpp_1a04bcf47732d1e8e99ccb2f084ced556c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a04bcf47732d1e8e99ccb2f084ced556c" kindref="member">satox_nft_manager_get_nft_info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>nft_id)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>manager<sp/>=<sp/>*</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="dc/d55/classsatox_1_1nft_1_1NFTManager" kindref="compound">satox::nft::NFTManager</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(handle);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nft<sp/>=<sp/>manager.<ref refid="dc/d55/classsatox_1_1nft_1_1NFTManager_1a30d71e29b2633dbd64f160646db2fe7e" kindref="member">getNFT</ref>(nft_id);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nft.id.empty())<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>result<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/>nft.id},</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;contract_address&quot;</highlight><highlight class="normal">,<sp/>nft.contractAddress},</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;owner&quot;</highlight><highlight class="normal">,<sp/>nft.owner},</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;creator&quot;</highlight><highlight class="normal">,<sp/>nft.creator},</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;token_id&quot;</highlight><highlight class="normal">,<sp/>nft.tokenId},</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;token_uri&quot;</highlight><highlight class="normal">,<sp/>nft.tokenURI},</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;metadata&quot;</highlight><highlight class="normal">,<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>nft.metadata.name},</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">,<sp/>nft.metadata.description},</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;image&quot;</highlight><highlight class="normal">,<sp/>nft.metadata.image},</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;external_url&quot;</highlight><highlight class="normal">,<sp/>nft.metadata.externalUrl},</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;attributes&quot;</highlight><highlight class="normal">,<sp/>nft.metadata.attributes},</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;additional_data&quot;</highlight><highlight class="normal">,<sp/>nft.metadata.additionalData}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a12fec068a72dfd482056414565efcf40" kindref="member">json_to_c_string</ref>(result);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Placeholder<sp/>implementations<sp/>for<sp/>other<sp/>managers<sp/>(to<sp/>be<sp/>implemented<sp/>as<sp/>needed)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="dd/deb/satox__sdk__c_8cpp_1ad5f871c9beed736813522c3e469f390f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ad5f871c9beed736813522c3e469f390f" kindref="member">satox_blockchain_manager_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>config_json)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="393" refid="dd/deb/satox__sdk__c_8cpp_1ae645745ac03c0feb39c07b04f46a675b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ae645745ac03c0feb39c07b04f46a675b" kindref="member">satox_blockchain_manager_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{}</highlight></codeline>
<codeline lineno="394" refid="dd/deb/satox__sdk__c_8cpp_1a9c512ce2ba147bb055cb196eedd96093" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a9c512ce2ba147bb055cb196eedd96093" kindref="member">satox_blockchain_manager_get_block_height</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>height)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="395" refid="dd/deb/satox__sdk__c_8cpp_1a49f966a0aa1818001affffbbd3ac6be5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a49f966a0aa1818001affffbbd3ac6be5" kindref="member">satox_blockchain_manager_get_block_info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hash)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="396" refid="dd/deb/satox__sdk__c_8cpp_1a87f8836c5ebc5543e19d25a3b206b27d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a87f8836c5ebc5543e19d25a3b206b27d" kindref="member">satox_blockchain_manager_get_transaction_info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>txid)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="397" refid="dd/deb/satox__sdk__c_8cpp_1af146bebc814f08d1703595475e574280" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1af146bebc814f08d1703595475e574280" kindref="member">satox_blockchain_manager_get_best_block_hash</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="398" refid="dd/deb/satox__sdk__c_8cpp_1a7a8b1d56c98639954b75d7294c1e47c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a7a8b1d56c98639954b75d7294c1e47c6" kindref="member">satox_blockchain_manager_get_block_hash</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>height)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="dd/deb/satox__sdk__c_8cpp_1a156398b089260294617f8fcff7c53a31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a156398b089260294617f8fcff7c53a31" kindref="member">satox_asset_manager_transfer_asset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>asset_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>from_address,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>to_address,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="401" refid="dd/deb/satox__sdk__c_8cpp_1acd1ba6cbe61bb0d96d845fed057abaa3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1acd1ba6cbe61bb0d96d845fed057abaa3" kindref="member">satox_asset_manager_get_asset_balance</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>asset_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>address,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>balance)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="402" refid="dd/deb/satox__sdk__c_8cpp_1a1f22a08c3a3820d8c790ffb123ad5a61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a1f22a08c3a3820d8c790ffb123ad5a61" kindref="member">satox_asset_manager_reissue_asset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>asset_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>owner_address,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="403" refid="dd/deb/satox__sdk__c_8cpp_1a7ba030f24e48f9d91ac5148659d90d4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a7ba030f24e48f9d91ac5148659d90d4d" kindref="member">satox_asset_manager_burn_asset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>asset_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>owner_address,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>amount)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405" refid="dd/deb/satox__sdk__c_8cpp_1aed75a4361f15782432b4de24bf7b2445" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1aed75a4361f15782432b4de24bf7b2445" kindref="member">satox_network_manager_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>config_json)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="406" refid="dd/deb/satox__sdk__c_8cpp_1a0535a7ad8a8b7e54e87753d325280666" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a0535a7ad8a8b7e54e87753d325280666" kindref="member">satox_network_manager_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{}</highlight></codeline>
<codeline lineno="407" refid="dd/deb/satox__sdk__c_8cpp_1a290a94ba010b34399ad9f85b3e4076a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a290a94ba010b34399ad9f85b3e4076a3" kindref="member">satox_network_manager_start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="408" refid="dd/deb/satox__sdk__c_8cpp_1af77da003f661c2df255ebb9c63ae1344" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1af77da003f661c2df255ebb9c63ae1344" kindref="member">satox_network_manager_stop</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="409" refid="dd/deb/satox__sdk__c_8cpp_1ad5990de38701feadd8297ed785d1b3c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ad5990de38701feadd8297ed785d1b3c6" kindref="member">satox_network_manager_get_peers</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="410" refid="dd/deb/satox__sdk__c_8cpp_1aea7c326d5d8b1db5c9c661ddbe9f1a5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1aea7c326d5d8b1db5c9c661ddbe9f1a5b" kindref="member">satox_network_manager_get_stats</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="411" refid="dd/deb/satox__sdk__c_8cpp_1ab4e6105e766963a7f0b49df981242687" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ab4e6105e766963a7f0b49df981242687" kindref="member">satox_network_manager_add_peer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>address,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>port)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="412" refid="dd/deb/satox__sdk__c_8cpp_1adb0f2003fcc949bbe9d6378b8a41c4a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1adb0f2003fcc949bbe9d6378b8a41c4a7" kindref="member">satox_network_manager_remove_peer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>address,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>port)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="413" refid="dd/deb/satox__sdk__c_8cpp_1a6a17fc1319ad145e8ffd906cdebc3305" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a6a17fc1319ad145e8ffd906cdebc3305" kindref="member">satox_network_manager_send_message</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>address,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>port,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>message)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="dd/deb/satox__sdk__c_8cpp_1a05f667eff9e5fc2e4ba0ba7a9af91a20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a05f667eff9e5fc2e4ba0ba7a9af91a20" kindref="member">satox_nft_manager_transfer_nft</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>nft_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>from_address,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>to_address)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="416" refid="dd/deb/satox__sdk__c_8cpp_1a518d0410225cb654171fb450977071ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a518d0410225cb654171fb450977071ab" kindref="member">satox_nft_manager_get_nfts_by_owner</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>address)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="417" refid="dd/deb/satox__sdk__c_8cpp_1a34ddb102c053c7b72878ea70f5ddba12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a34ddb102c053c7b72878ea70f5ddba12" kindref="member">satox_nft_manager_update_metadata</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>nft_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>metadata_json,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>owner_address)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="dd/deb/satox__sdk__c_8cpp_1aa8d85ed313fcfb12fbec7fb619c90b23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1aa8d85ed313fcfb12fbec7fb619c90b23" kindref="member">satox_ipfs_manager_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>config_json)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="420" refid="dd/deb/satox__sdk__c_8cpp_1af3f1e971271b099fdb8c88404270193d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1af3f1e971271b099fdb8c88404270193d" kindref="member">satox_ipfs_manager_destroy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle)<sp/>{}</highlight></codeline>
<codeline lineno="421" refid="dd/deb/satox__sdk__c_8cpp_1a9b8331c457e018dfc8acf54ed8ffe0d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a9b8331c457e018dfc8acf54ed8ffe0d1" kindref="member">satox_ipfs_manager_upload_file</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>file_path)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="422" refid="dd/deb/satox__sdk__c_8cpp_1a230d9077890254ece33751f7c9ae1470" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a230d9077890254ece33751f7c9ae1470" kindref="member">satox_ipfs_manager_upload_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filename)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="423" refid="dd/deb/satox__sdk__c_8cpp_1a3c9d56cbb6a05ea7b904f1b67137c2ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a3c9d56cbb6a05ea7b904f1b67137c2ac" kindref="member">satox_ipfs_manager_download_file</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>output_path)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="424" refid="dd/deb/satox__sdk__c_8cpp_1a8a17485b2a3e5bd0f4a013246cbeafba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a8a17485b2a3e5bd0f4a013246cbeafba" kindref="member">satox_ipfs_manager_get_file_info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hash)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="425" refid="dd/deb/satox__sdk__c_8cpp_1ab0ac62f272d739959cf6ed98d8658bb5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ab0ac62f272d739959cf6ed98d8658bb5" kindref="member">satox_ipfs_manager_pin_file</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hash)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="426" refid="dd/deb/satox__sdk__c_8cpp_1ac9b1dd03b6b0a305e6edca1ccd2d29b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1ac9b1dd03b6b0a305e6edca1ccd2d29b4" kindref="member">satox_ipfs_manager_unpin_file</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hash)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="427" refid="dd/deb/satox__sdk__c_8cpp_1a47ef298740e638a46d8f53aa5459ffd0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="dd/deb/satox__sdk__c_8cpp_1a47ef298740e638a46d8f53aa5459ffd0" kindref="member">satox_ipfs_manager_get_gateway_url</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>hash)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="src/satox_sdk_c.cpp"/>
  </compounddef>
</doxygen>
