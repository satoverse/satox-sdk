<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d0/d1b/asset_2src_2asset__manager_8cpp" kind="file" language="C++">
    <compoundname>asset_manager.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">thread</includes>
    <includes local="no">mutex</includes>
    <includes local="yes">satox/asset/asset_manager.hpp</includes>
    <includes local="no">nlohmann/json.hpp</includes>
    <includes local="no">filesystem</includes>
    <includes local="no">chrono</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">sstream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">openssl/sha.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/asset/src/asset_manager.cpp</label>
        <link refid="d0/d1b/asset_2src_2asset__manager_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>algorithm</label>
      </node>
      <node id="8">
        <label>chrono</label>
      </node>
      <node id="7">
        <label>filesystem</label>
      </node>
      <node id="11">
        <label>iomanip</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>mutex</label>
      </node>
      <node id="6">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="12">
        <label>openssl/sha.h</label>
      </node>
      <node id="5">
        <label>satox/asset/asset_manager.hpp</label>
      </node>
      <node id="10">
        <label>sstream</label>
      </node>
      <node id="3">
        <label>thread</label>
      </node>
    </incdepgraph>
    <innerclass refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger" prot="public">satox::asset::SimpleLogger</innerclass>
    <innernamespace refid="df/daa/namespacesatox">satox</innernamespace>
    <innernamespace refid="d5/d84/namespacesatox_1_1asset">satox::asset</innernamespace>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" prot="public" static="no">
        <type>nlohmann::json</type>
        <definition>using json =  nlohmann::json</definition>
        <argsstring></argsstring>
        <name>json</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/src/asset_manager.cpp" line="38" column="1" bodyfile="src/asset/src/asset_manager.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;satox/asset/asset_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nlohmann/json.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;openssl/sha.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>=<sp/>nlohmann::json;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d5/d84/namespacesatox_1_1asset" kindref="compound">satox::asset</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>logging<sp/>wrapper<sp/>to<sp/>avoid<sp/>spdlog<sp/>compatibility<sp/>issues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger" kindref="compound">SimpleLogger</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a2267a7ef636dfaa3109dba09ca79fca0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a2267a7ef636dfaa3109dba09ca79fca0" kindref="member">debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[DEBUG]<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49" refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">info</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[INFO]<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53" refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a037a74de77f35424cad251116277b44a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a037a74de77f35424cad251116277b44a" kindref="member">warn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[WARN]<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>msg)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[ERROR]<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Singleton<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a16c138da27f1d66ba124a1c44a5b8808" refkind="member"><highlight class="normal"><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" kindref="member">AssetManager</ref>&amp;<sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a16c138da27f1d66ba124a1c44a5b8808" kindref="member">AssetManager::getInstance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" kindref="member">AssetManager</ref><sp/>instance;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" refkind="member"><highlight class="normal"><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" kindref="member">AssetManager::AssetManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a2267a7ef636dfaa3109dba09ca79fca0" kindref="member">SimpleLogger::debug</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager:<sp/>Constructor<sp/>called&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad51f1a7f60d3660a8ff4af292021f2af" refkind="member"><highlight class="normal"><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad51f1a7f60d3660a8ff4af292021f2af" kindref="member">AssetManager::~AssetManager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a2267a7ef636dfaa3109dba09ca79fca0" kindref="member">SimpleLogger::debug</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager:<sp/>Destructor<sp/>called&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b1eb94ad2739d81529ae13b4141bd12" kindref="member">shutdown</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialization<sp/>and<sp/>shutdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d9f0cc1e3012bc9aa17a64898f3cb05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d9f0cc1e3012bc9aa17a64898f3cb05" kindref="member">AssetManager::initialize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig" kindref="compound">AssetConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialized_)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>already<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager:<sp/>Initializing<sp/>with<sp/>config:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>config.<ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1a920509bb616945a30b96fed54c6dc072" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8cf00ad6cdb99e779eb246dcddd47d44" kindref="member">validateConfig</ref>(config))<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>configuration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>state<sp/>to<sp/>initializing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_<sp/>=<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaa86bf8c89d85949f8f45cde2f73fce113" kindref="member">AssetState::INITIALIZING</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>configuration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_<sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>logging<sp/>if<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config.<ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1a9bf52117f5749d2e65a68d6d372c54f3" kindref="member">enableLogging</ref><sp/>&amp;&amp;<sp/>!config.<ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1a30b64dfb878772d9a0753fb9004f932e" kindref="member">logPath</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::filesystem::create_directories(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::filesystem::path(config.<ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1a30b64dfb878772d9a0753fb9004f932e" kindref="member">logPath</ref>).parent_path()</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;Logging<sp/>initialized<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>config.<ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1a30b64dfb878772d9a0753fb9004f932e" kindref="member">logPath</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a037a74de77f35424cad251116277b44a" kindref="member">SimpleLogger::warn</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>setup<sp/>logging:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>asset<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assets_.clear();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balances_.clear();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assetStatuses_.clear();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>state<sp/>to<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_<sp/>=<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaadee5f03c2c4e73657824e028494b18c0" kindref="member">AssetState::INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastHealthCheck_<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager:<sp/>Initialized<sp/>successfully&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyAssetEvent(</highlight><highlight class="stringliteral">&quot;initialized&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">SimpleLogger::error</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager:<sp/>Initialization<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(e.what());</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_<sp/>=<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaabb1ca97ec761fc37101737ba0aa2e7c5" kindref="member">AssetState::ERROR</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b1eb94ad2739d81529ae13b4141bd12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b1eb94ad2739d81529ae13b4141bd12" kindref="member">AssetManager::shutdown</ref>()<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager:<sp/>Shutting<sp/>down&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>all<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assets_.clear();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balances_.clear();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assetStatuses_.clear();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>callbacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assetCallbacks_.clear();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operationCallbacks_.clear();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorCallbacks_.clear();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_<sp/>=<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaab9984206799a7f9fe4bd1b6c18db8112" kindref="member">AssetState::SHUTDOWN</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_.clear();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager:<sp/>Shutdown<sp/>completed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyAssetEvent(</highlight><highlight class="stringliteral">&quot;shutdown&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">SimpleLogger::error</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager:<sp/>Shutdown<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(e.what());</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a67c17d67518e2eb72f4bebaa049e48" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a67c17d67518e2eb72f4bebaa049e48" kindref="member">AssetManager::isInitialized</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initialized_;</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b" refkind="member"><highlight class="normal">std::string<sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b" kindref="member">AssetManager::getLastError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastError_;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Asset<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a54c37c151dfaeeb9eec7f50a24ea11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a54c37c151dfaeeb9eec7f50a24ea11" kindref="member">AssetManager::createAsset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest" kindref="compound">AssetCreationRequest</ref>&amp;<sp/>request)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>startTime<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validateAssetCreationRequest(request,<sp/>result))<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;createAsset&quot;</highlight><highlight class="normal">,<sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyAssetEvent(</highlight><highlight class="stringliteral">&quot;asset_creation_failed&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dcb/structsatox_1_1asset_1_1AssetResult" kindref="compound">AssetResult</ref><sp/>opResult{</highlight><highlight class="stringliteral">&quot;createAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyOperationEvent(opResult);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>asset<sp/>already<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assets_.find(request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a8ca3902f4725bddd3c465787f320b82d" kindref="member">name</ref>)<sp/>!=<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Asset<sp/>already<sp/>exists:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a8ca3902f4725bddd3c465787f320b82d" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;createAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>already<sp/>exists:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a8ca3902f4725bddd3c465787f320b82d" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>max<sp/>assets<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assets_.size()<sp/>&gt;=<sp/>config_.maxAssets)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>number<sp/>of<sp/>assets<sp/>reached:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(config_.maxAssets));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;createAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>number<sp/>of<sp/>assets<sp/>reached:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(config_.maxAssets));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>metadata<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a372eda169f4f86ded6abf47fc7b7821b" kindref="member">metadata</ref>.is_object()<sp/>&amp;&amp;<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a372eda169f4f86ded6abf47fc7b7821b" kindref="member">metadata</ref>.size()<sp/>&gt;<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Metadata<sp/>too<sp/>large,<sp/>maximum<sp/>100<sp/>fields<sp/>allowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;createAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Metadata<sp/>too<sp/>large,<sp/>maximum<sp/>100<sp/>fields<sp/>allowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>asset<sp/>metadata</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata" kindref="compound">AssetMetadata</ref><sp/>metadata;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a550ac87a7e53fb345097bab92412c455" kindref="member">name</ref><sp/>=<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a8ca3902f4725bddd3c465787f320b82d" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1ac44800463ba72924225a38e1d3d72613" kindref="member">symbol</ref><sp/>=<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1abf5f1ece4c6d5abe52aaefd1b59f60c8" kindref="member">symbol</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a5c95a10593861a617cc70af08eb5db14" kindref="member">description</ref><sp/>=<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a372eda169f4f86ded6abf47fc7b7821b" kindref="member">metadata</ref>.is_object()<sp/>&amp;&amp;<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a372eda169f4f86ded6abf47fc7b7821b" kindref="member">metadata</ref>.contains(</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a372eda169f4f86ded6abf47fc7b7821b" kindref="member">metadata</ref>[</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">].get&lt;std::string&gt;()<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a57983cf05f4a28861fa1e0c83def2631" kindref="member">issuer</ref><sp/>=<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1ae2bfccd2f2cbd885a5bd380e367d831b" kindref="member">owner_address</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a59a69248ea36cf7703bbc5c3e50c9e20" kindref="member">total_supply</ref><sp/>=<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a10f446954a8ae2df7530c81b50d8ae96" kindref="member">amount</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1aed7446f9f8ba8a03ab4cc545aa311214" kindref="member">decimals</ref><sp/>=<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1acec1410d0886a0ce4b63725250379ed8" kindref="member">units</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a40dd949b393496e0263a32613ace8f88" kindref="member">reissuable</ref><sp/>=<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a196596cc6afa5ee638dd1fde823bfc73" kindref="member">reissuable</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a672955e9d46262370a87c4ad47c2cb94" kindref="member">frozen</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1aee877510af7084dd8fc554f308caf01e" kindref="member">additional_data</ref><sp/>=<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a372eda169f4f86ded6abf47fc7b7821b" kindref="member">metadata</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>asset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assets_[request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a8ca3902f4725bddd3c465787f320b82d" kindref="member">name</ref>]<sp/>=<sp/>metadata;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assetStatuses_[request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a8ca3902f4725bddd3c465787f320b82d" kindref="member">name</ref>]<sp/>=<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea18ff74f43da410c5529f7d6fca84f115" kindref="member">AssetStatus::ACTIVE</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>balance<sp/>for<sp/>owner</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balances_[request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a8ca3902f4725bddd3c465787f320b82d" kindref="member">name</ref>][request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1ae2bfccd2f2cbd885a5bd380e367d831b" kindref="member">owner_address</ref>]<sp/>=<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a10f446954a8ae2df7530c81b50d8ae96" kindref="member">amount</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>duration<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(endTime<sp/>-<sp/>startTime);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>duration.count());</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logOperation(</highlight><highlight class="stringliteral">&quot;createAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>duration.count());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>created:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a8ca3902f4725bddd3c465787f320b82d" kindref="member">name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1abf5f1ece4c6d5abe52aaefd1b59f60c8" kindref="member">symbol</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyAssetEvent(</highlight><highlight class="stringliteral">&quot;asset_created&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dcb/structsatox_1_1asset_1_1AssetResult" kindref="compound">AssetResult</ref><sp/>opResult{</highlight><highlight class="stringliteral">&quot;createAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyOperationEvent(opResult);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">SimpleLogger::error</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>creation<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(e.what());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;createAsset&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad95c0ec540a1dc9cce084d67a9e46c9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad95c0ec540a1dc9cce084d67a9e46c9b" kindref="member">AssetManager::transferAsset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest" kindref="compound">AssetTransferRequest</ref>&amp;<sp/>request)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>startTime<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af85c5ee5e782983545fb460c0c5fea4d" kindref="member">validateAssetTransfer</ref>(request,<sp/>result))<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;transferAsset&quot;</highlight><highlight class="normal">,<sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>asset<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assets_.find(request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" kindref="member">asset_name</ref>)<sp/>==<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Asset<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" kindref="member">asset_name</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;transferAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" kindref="member">asset_name</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>asset<sp/>is<sp/>frozen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assetStatuses_[request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" kindref="member">asset_name</ref>]<sp/>==<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea081912e034fd835fdda076251f2cd586" kindref="member">AssetStatus::FROZEN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Asset<sp/>is<sp/>frozen:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" kindref="member">asset_name</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;transferAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>is<sp/>frozen:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" kindref="member">asset_name</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>sender<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>assetBalances<sp/>=<sp/>balances_[request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" kindref="member">asset_name</ref>];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assetBalances[request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a04a38cc7e591871d4caf3bfd59fb8c07" kindref="member">from_address</ref>]<sp/>&lt;<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab100278db0cfce07aa41fff671117c48" kindref="member">amount</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>balance<sp/>for<sp/>transfer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;transferAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Insufficient<sp/>balance<sp/>for<sp/>transfer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assetBalances[request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a04a38cc7e591871d4caf3bfd59fb8c07" kindref="member">from_address</ref>]<sp/>-=<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab100278db0cfce07aa41fff671117c48" kindref="member">amount</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assetBalances[request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a70a0263d529af325d9db1a18faa426ee" kindref="member">to_address</ref>]<sp/>+=<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab100278db0cfce07aa41fff671117c48" kindref="member">amount</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>duration<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(endTime<sp/>-<sp/>startTime);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>duration.count());</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logOperation(</highlight><highlight class="stringliteral">&quot;transferAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>duration.count());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>transferred:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" kindref="member">asset_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a04a38cc7e591871d4caf3bfd59fb8c07" kindref="member">from_address</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a70a0263d529af325d9db1a18faa426ee" kindref="member">to_address</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(amount:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab100278db0cfce07aa41fff671117c48" kindref="member">amount</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyAssetEvent(</highlight><highlight class="stringliteral">&quot;asset_transferred&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">SimpleLogger::error</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>transfer<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(e.what());</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;transferAsset&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5968767e0f5ad7d568ea8a75a1e3b84b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5968767e0f5ad7d568ea8a75a1e3b84b" kindref="member">AssetManager::reissueAsset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest" kindref="compound">AssetReissueRequest</ref>&amp;<sp/>request)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>startTime<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>reissue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a49fff1be6cffa366c1eefba0bcd5d850" kindref="member">validateAssetReissue</ref>(request,<sp/>result))<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;reissueAsset&quot;</highlight><highlight class="normal">,<sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>asset<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assets_.find(request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" kindref="member">asset_name</ref>)<sp/>==<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Asset<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" kindref="member">asset_name</ref>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;reissueAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" kindref="member">asset_name</ref>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>asset<sp/>is<sp/>reissuable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!assets_[request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" kindref="member">asset_name</ref>].reissuable)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Asset<sp/>is<sp/>not<sp/>reissuable:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" kindref="member">asset_name</ref>);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;reissueAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>is<sp/>not<sp/>reissuable:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" kindref="member">asset_name</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>owner<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balances_[request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" kindref="member">asset_name</ref>][request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ac5b83ca60bdf8429a7718f595650d48c" kindref="member">owner_address</ref>]<sp/>+=<sp/>request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ad34327ee57f16622fae08f39c531d08f" kindref="member">amount</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>total<sp/>supply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assets_[request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" kindref="member">asset_name</ref>].total_supply<sp/>+=<sp/>request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ad34327ee57f16622fae08f39c531d08f" kindref="member">amount</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>duration<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(endTime<sp/>-<sp/>startTime);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>duration.count());</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logOperation(</highlight><highlight class="stringliteral">&quot;reissueAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>duration.count());</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>reissued:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" kindref="member">asset_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>by<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ac5b83ca60bdf8429a7718f595650d48c" kindref="member">owner_address</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(amount:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ad34327ee57f16622fae08f39c531d08f" kindref="member">amount</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyAssetEvent(</highlight><highlight class="stringliteral">&quot;asset_reissued&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">SimpleLogger::error</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>reissue<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(e.what());</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;reissueAsset&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad399ca99d8cc84268b30ac3a1f0b5cde" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad399ca99d8cc84268b30ac3a1f0b5cde" kindref="member">AssetManager::burnAsset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest" kindref="compound">AssetBurnRequest</ref>&amp;<sp/>request)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>startTime<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>burn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6288741789a79f007d3d0562cee601bd" kindref="member">validateAssetBurn</ref>(request,<sp/>result))<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;burnAsset&quot;</highlight><highlight class="normal">,<sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>asset<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assets_.find(request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a07eb9bf6a620100104900c4932f9ba92" kindref="member">asset_name</ref>)<sp/>==<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Asset<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a07eb9bf6a620100104900c4932f9ba92" kindref="member">asset_name</ref>);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;burnAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a07eb9bf6a620100104900c4932f9ba92" kindref="member">asset_name</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>owner<sp/>balance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>assetBalances<sp/>=<sp/>balances_[request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a07eb9bf6a620100104900c4932f9ba92" kindref="member">asset_name</ref>];</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assetBalances[request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a59efdffafe2070289c0e0ff4ee513f8d" kindref="member">owner_address</ref>]<sp/>&lt;<sp/>request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1ab959f1c07c96e1c100645a0225b391f6" kindref="member">amount</ref>)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Insufficient<sp/>balance<sp/>for<sp/>burn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;burnAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Insufficient<sp/>balance<sp/>for<sp/>burn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>burn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assetBalances[request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a59efdffafe2070289c0e0ff4ee513f8d" kindref="member">owner_address</ref>]<sp/>-=<sp/>request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1ab959f1c07c96e1c100645a0225b391f6" kindref="member">amount</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assets_[request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a07eb9bf6a620100104900c4932f9ba92" kindref="member">asset_name</ref>].total_supply<sp/>-=<sp/>request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1ab959f1c07c96e1c100645a0225b391f6" kindref="member">amount</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>duration<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(endTime<sp/>-<sp/>startTime);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>duration.count());</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logOperation(</highlight><highlight class="stringliteral">&quot;burnAsset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>duration.count());</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>burned:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a07eb9bf6a620100104900c4932f9ba92" kindref="member">asset_name</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>by<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a59efdffafe2070289c0e0ff4ee513f8d" kindref="member">owner_address</ref><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(amount:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1ab959f1c07c96e1c100645a0225b391f6" kindref="member">amount</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyAssetEvent(</highlight><highlight class="stringliteral">&quot;asset_burned&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">SimpleLogger::error</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>burn<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(e.what());</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateStats(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyErrorEvent(</highlight><highlight class="stringliteral">&quot;burnAsset&quot;</highlight><highlight class="normal">,<sp/>e.what());</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a25d908ac9e63955b444c1398a04cd579" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a25d908ac9e63955b444c1398a04cd579" kindref="member">AssetManager::freezeAsset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>owner_address)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assets_.find(asset_name)<sp/>==<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Asset<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>asset_name);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>assetStatuses_[asset_name]<sp/>=<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea081912e034fd835fdda076251f2cd586" kindref="member">AssetStatus::FROZEN</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>assets_[asset_name].frozen<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>frozen:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>asset_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>by<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>owner_address);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>notifyAssetEvent(</highlight><highlight class="stringliteral">&quot;asset_frozen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab56602e2506677c26880a61293984219" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab56602e2506677c26880a61293984219" kindref="member">AssetManager::unfreezeAsset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>owner_address)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assets_.find(asset_name)<sp/>==<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Asset<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>asset_name);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>assetStatuses_[asset_name]<sp/>=<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea18ff74f43da410c5529f7d6fca84f115" kindref="member">AssetStatus::ACTIVE</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>assets_[asset_name].frozen<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>unfrozen:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>asset_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>by<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>owner_address);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>notifyAssetEvent(</highlight><highlight class="stringliteral">&quot;asset_unfrozen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad8cfe84260fe2201e5abbfce17c9e66e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad8cfe84260fe2201e5abbfce17c9e66e" kindref="member">AssetManager::destroyAsset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>owner_address)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assets_.find(asset_name)<sp/>==<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Asset<sp/>not<sp/>found:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>asset_name);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>assetStatuses_[asset_name]<sp/>=<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea5d7e41d3ac0abca5974598807df874ea" kindref="member">AssetStatus::DESTROYED</ref>;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>assets_[asset_name].frozen<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>destroyed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>asset_name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>by<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>owner_address);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>notifyAssetEvent(</highlight><highlight class="stringliteral">&quot;asset_destroyed&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Asset<sp/>queries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a4b0c42b88a95f24558a8fbcbddea4c68" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a4b0c42b88a95f24558a8fbcbddea4c68" kindref="member">AssetManager::getAssetMetadata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name,<sp/><ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata" kindref="compound">AssetMetadata</ref>&amp;<sp/>metadata)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>assets_.find(asset_name);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>metadata<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a91706abdc9aaf8e9548f1f892a3812cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a91706abdc9aaf8e9548f1f892a3812cc" kindref="member">AssetManager::getAssetBalance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>address,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name,<sp/>uint64_t&amp;<sp/>balance)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>assetIt<sp/>=<sp/>balances_.find(asset_name);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assetIt<sp/>==<sp/>balances_.end())<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>balanceIt<sp/>=<sp/>assetIt-&gt;second.find(address);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(balanceIt<sp/>==<sp/>assetIt-&gt;second.end())<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>balance<sp/>=<sp/>balanceIt-&gt;second;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3aab2f79b644399fdda3176c50205cc7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3aab2f79b644399fdda3176c50205cc7" kindref="member">AssetManager::getAssetOwners</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name,<sp/>std::vector&lt;std::string&gt;&amp;<sp/>owners)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>balances_.find(asset_name);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>balances_.end())<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>owners.clear();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pair<sp/>:<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pair.second<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owners.push_back(pair.first);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a19f71573618b6fcd257f0812361f82d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a19f71573618b6fcd257f0812361f82d2" kindref="member">AssetManager::getAssetStatus</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name,<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289e" kindref="member">AssetStatus</ref>&amp;<sp/>status)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>assetStatuses_.find(asset_name);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>assetStatuses_.end())<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1dc998c0c9bce46d5ec5db6ce9f96cc5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1dc998c0c9bce46d5ec5db6ce9f96cc5" kindref="member">AssetManager::getAssetType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name,<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1aa4c5068043f9c46eb2120944b33b2a2c" kindref="member">AssetType</ref>&amp;<sp/>type)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>assets_.find(asset_name);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/>config_.type;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Asset<sp/>verification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aea0f0214f59cc8c85ca3fd2d9ac595b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aea0f0214f59cc8c85ca3fd2d9ac595b9" kindref="member">AssetManager::verifyAsset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name,<sp/><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AssetManager<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>assets_.find(asset_name);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>not<sp/>found&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" kindref="member">warnings</ref>.clear();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a59e5c3be001f7d7c3ff44326285a6165" kindref="member">details</ref><sp/>=<sp/>json::object();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a14ace1d11be0b5b6182ef2da5981e611" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a14ace1d11be0b5b6182ef2da5981e611" kindref="member">AssetManager::validateAssetMetadata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata" kindref="compound">AssetMetadata</ref>&amp;<sp/>metadata,<sp/><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>.clear();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" kindref="member">warnings</ref>.clear();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a550ac87a7e53fb345097bab92412c455" kindref="member">name</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>name<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1ac44800463ba72924225a38e1d3d72613" kindref="member">symbol</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>symbol<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a59a69248ea36cf7703bbc5c3e50c9e20" kindref="member">total_supply</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>total<sp/>supply<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a57983cf05f4a28861fa1e0c83def2631" kindref="member">issuer</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>issuer<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(metadata.<ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1aed7446f9f8ba8a03ab4cc545aa311214" kindref="member">decimals</ref><sp/>&gt;<sp/>18)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" kindref="member">warnings</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Asset<sp/>decimals<sp/>should<sp/>not<sp/>exceed<sp/>18&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>set<sp/>valid<sp/>to<sp/>true<sp/>if<sp/>all<sp/>checks<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af85c5ee5e782983545fb460c0c5fea4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af85c5ee5e782983545fb460c0c5fea4d" kindref="member">AssetManager::validateAssetTransfer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest" kindref="compound">AssetTransferRequest</ref>&amp;<sp/>request,<sp/><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>.clear();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" kindref="member">warnings</ref>.clear();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" kindref="member">asset_name</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>name<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a04a38cc7e591871d4caf3bfd59fb8c07" kindref="member">from_address</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;From<sp/>address<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a70a0263d529af325d9db1a18faa426ee" kindref="member">to_address</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;To<sp/>address<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab100278db0cfce07aa41fff671117c48" kindref="member">amount</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Transfer<sp/>amount<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a04a38cc7e591871d4caf3bfd59fb8c07" kindref="member">from_address</ref><sp/>==<sp/>request.<ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a70a0263d529af325d9db1a18faa426ee" kindref="member">to_address</ref>)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;From<sp/>and<sp/>to<sp/>addresses<sp/>cannot<sp/>be<sp/>the<sp/>same&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a49fff1be6cffa366c1eefba0bcd5d850" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a49fff1be6cffa366c1eefba0bcd5d850" kindref="member">AssetManager::validateAssetReissue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest" kindref="compound">AssetReissueRequest</ref>&amp;<sp/>request,<sp/><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>.clear();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" kindref="member">warnings</ref>.clear();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" kindref="member">asset_name</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>name<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ac5b83ca60bdf8429a7718f595650d48c" kindref="member">owner_address</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Owner<sp/>address<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ad34327ee57f16622fae08f39c531d08f" kindref="member">amount</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Reissue<sp/>amount<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6288741789a79f007d3d0562cee601bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6288741789a79f007d3d0562cee601bd" kindref="member">AssetManager::validateAssetBurn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest" kindref="compound">AssetBurnRequest</ref>&amp;<sp/>request,<sp/><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>.clear();</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" kindref="member">warnings</ref>.clear();</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a07eb9bf6a620100104900c4932f9ba92" kindref="member">asset_name</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>name<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a59efdffafe2070289c0e0ff4ee513f8d" kindref="member">owner_address</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Owner<sp/>address<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1ab959f1c07c96e1c100645a0225b391f6" kindref="member">amount</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Burn<sp/>amount<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>State<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1e4402bd0e3b8bdab0da50191b3c8318" refkind="member"><highlight class="normal"><ref refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeea" kindref="member">AssetState</ref><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1e4402bd0e3b8bdab0da50191b3c8318" kindref="member">AssetManager::getState</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>state_;</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af552b2f014c57c0bfb08f2411ca6d976" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af552b2f014c57c0bfb08f2411ca6d976" kindref="member">AssetManager::isHealthy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initialized_<sp/>&amp;&amp;<sp/>state_<sp/>==<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaadee5f03c2c4e73657824e028494b18c0" kindref="member">AssetState::INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configuration<sp/>management</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d1f379e8bb54b19467a7df947d0746b" refkind="member"><highlight class="normal"><ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig" kindref="compound">AssetConfig</ref><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d1f379e8bb54b19467a7df947d0746b" kindref="member">AssetManager::getConfig</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config_;</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ac07e42ad7a4aa3d0b95ec22acc5cd678" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ac07e42ad7a4aa3d0b95ec22acc5cd678" kindref="member">AssetManager::updateConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig" kindref="compound">AssetConfig</ref>&amp;<sp/>new_config)<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>not<sp/>initialized&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>new<sp/>config</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_config.<ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1ae6cc837108026bcc1d3b141df69f0297" kindref="member">maxAssets</ref><sp/>&lt;<sp/>assets_.size())<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setLastError(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>reduce<sp/>max<sp/>assets<sp/>below<sp/>current<sp/>asset<sp/>count&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>config_<sp/>=<sp/>new_config;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>configuration<sp/>updated&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8cf00ad6cdb99e779eb246dcddd47d44" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8cf00ad6cdb99e779eb246dcddd47d44" kindref="member">AssetManager::validateConfig</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig" kindref="compound">AssetConfig</ref>&amp;<sp/>config)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!config.<ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1a920509bb616945a30b96fed54c6dc072" kindref="member">name</ref>.empty()<sp/>&amp;&amp;<sp/>config.<ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1ae6cc837108026bcc1d3b141df69f0297" kindref="member">maxAssets</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>config.<ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1ad3094f0f9568a368a6e86f28a46530ad" kindref="member">timeout</ref><sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Statistics<sp/>and<sp/>monitoring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae033207fcc14daea8227befc55e8ef83" refkind="member"><highlight class="normal"><ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats" kindref="compound">AssetStats</ref><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae033207fcc14daea8227befc55e8ef83" kindref="member">AssetManager::getStats</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats" kindref="compound">AssetStats</ref><sp/>stats<sp/>=<sp/>stats_;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats_1a8286f0f27a58b8a47f5e6b5c5f4b438f" kindref="member">activeAssets</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats_1a88625cab88d0b82656c8ce448f6aa9d2" kindref="member">frozenAssets</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>stats.<ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats_1ab1221cb0710dd7be6f36cef10c0589c7" kindref="member">destroyedAssets</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pair<sp/>:<sp/>assetStatuses_)<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pair.second<sp/>==<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea18ff74f43da410c5529f7d6fca84f115" kindref="member">AssetStatus::ACTIVE</ref>)<sp/>stats.<ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats_1a8286f0f27a58b8a47f5e6b5c5f4b438f" kindref="member">activeAssets</ref>++;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pair.second<sp/>==<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea081912e034fd835fdda076251f2cd586" kindref="member">AssetStatus::FROZEN</ref>)<sp/>stats.<ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats_1a88625cab88d0b82656c8ce448f6aa9d2" kindref="member">frozenAssets</ref>++;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pair.second<sp/>==<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea5d7e41d3ac0abca5974598807df874ea" kindref="member">AssetStatus::DESTROYED</ref>)<sp/>stats.<ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats_1ab1221cb0710dd7be6f36cef10c0589c7" kindref="member">destroyedAssets</ref>++;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stats;</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a686f9db186338f3393339ef0707d5a92" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a686f9db186338f3393339ef0707d5a92" kindref="member">AssetManager::resetStats</ref>()<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_<sp/>=<sp/><ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats" kindref="compound">AssetStats</ref>{};</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager:<sp/>Statistics<sp/>reset&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a50c9724b5cfcbffbe9fbfb8d69e4d403" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a50c9724b5cfcbffbe9fbfb8d69e4d403" kindref="member">AssetManager::enableStats</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enable)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>statsEnabled_<sp/>=<sp/>enable;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager:<sp/>Statistics<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(enable<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;enabled&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;disabled&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Callback<sp/>registration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a374974caee3692db6fcf0a72db3d5733" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a374974caee3692db6fcf0a72db3d5733" kindref="member">AssetManager::registerAssetCallback</ref>(<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6b993cb26df317e9777ffaaf730c4a9a" kindref="member">AssetCallback</ref><sp/>callback)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>assetCallbacks_.push_back(callback);</highlight></codeline>
<codeline lineno="829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a55385f1778ad632ba78cd738385c311a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a55385f1778ad632ba78cd738385c311a" kindref="member">AssetManager::registerOperationCallback</ref>(<ref refid="d5/d84/namespacesatox_1_1asset_1a12005847b6201d1a7e2d723b0e242abf" kindref="member">OperationCallback</ref><sp/>callback)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>operationCallbacks_.push_back(callback);</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aebe86bfa3816b6205f8fd12e4a612967" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aebe86bfa3816b6205f8fd12e4a612967" kindref="member">AssetManager::registerErrorCallback</ref>(<ref refid="d5/d84/namespacesatox_1_1asset_1a270927fb7a302c662b317dcb2eb7467e" kindref="member">ErrorCallback</ref><sp/>callback)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>errorCallbacks_.push_back(callback);</highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a55f28a0547859948c53462b54b2ed024" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a55f28a0547859948c53462b54b2ed024" kindref="member">AssetManager::unregisterAssetCallback</ref>()<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>assetCallbacks_.clear();</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab13e5df57eda77848370dcc1868bd29f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab13e5df57eda77848370dcc1868bd29f" kindref="member">AssetManager::unregisterOperationCallback</ref>()<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>operationCallbacks_.clear();</highlight></codeline>
<codeline lineno="849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2509cf8efb83f21afd38f2265af74fed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2509cf8efb83f21afd38f2265af74fed" kindref="member">AssetManager::unregisterErrorCallback</ref>()<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>errorCallbacks_.clear();</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Health<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5c68268c280bfa48480cadb7a0e1bb03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5c68268c280bfa48480cadb7a0e1bb03" kindref="member">AssetManager::healthCheck</ref>()<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized_)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>lastHealthCheck_<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a273fb354e5c1049afb6399405a843f4f" refkind="member"><highlight class="normal">nlohmann::json<sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a273fb354e5c1049afb6399405a843f4f" kindref="member">AssetManager::getHealthStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>status;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>status[</highlight><highlight class="stringliteral">&quot;initialized&quot;</highlight><highlight class="normal">]<sp/>=<sp/>initialized_;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>status[</highlight><highlight class="stringliteral">&quot;state&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(state_);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>status[</highlight><highlight class="stringliteral">&quot;total_assets&quot;</highlight><highlight class="normal">]<sp/>=<sp/>assets_.size();</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>status[</highlight><highlight class="stringliteral">&quot;last_health_check&quot;</highlight><highlight class="normal">]<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::seconds&gt;(</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastHealthCheck_.time_since_epoch()).count();</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>status[</highlight><highlight class="stringliteral">&quot;consecutive_failures&quot;</highlight><highlight class="normal">]<sp/>=<sp/>consecutiveFailures_;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Additional<sp/>functionality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1adb396d160596f68905afe68938bbf11f" refkind="member"><highlight class="normal">nlohmann::json<sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1adb396d160596f68905afe68938bbf11f" kindref="member">AssetManager::getAssetInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>info;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>assets_.find(asset_name);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>assets_.end())<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>it-&gt;second.name;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info[</highlight><highlight class="stringliteral">&quot;symbol&quot;</highlight><highlight class="normal">]<sp/>=<sp/>it-&gt;second.symbol;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info[</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">]<sp/>=<sp/>it-&gt;second.description;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info[</highlight><highlight class="stringliteral">&quot;issuer&quot;</highlight><highlight class="normal">]<sp/>=<sp/>it-&gt;second.issuer;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info[</highlight><highlight class="stringliteral">&quot;total_supply&quot;</highlight><highlight class="normal">]<sp/>=<sp/>it-&gt;second.total_supply;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info[</highlight><highlight class="stringliteral">&quot;decimals&quot;</highlight><highlight class="normal">]<sp/>=<sp/>it-&gt;second.decimals;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info[</highlight><highlight class="stringliteral">&quot;reissuable&quot;</highlight><highlight class="normal">]<sp/>=<sp/>it-&gt;second.reissuable;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info[</highlight><highlight class="stringliteral">&quot;frozen&quot;</highlight><highlight class="normal">]<sp/>=<sp/>it-&gt;second.frozen;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info[</highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(assetStatuses_[asset_name]);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info[</highlight><highlight class="stringliteral">&quot;additional_data&quot;</highlight><highlight class="normal">]<sp/>=<sp/>it-&gt;second.additional_data;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>info;</highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8810d5507bd29e669bc7e317ffed4d71" refkind="member"><highlight class="normal">std::vector&lt;nlohmann::json&gt;<sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8810d5507bd29e669bc7e317ffed4d71" kindref="member">AssetManager::listAssets</ref>()<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;json&gt;<sp/>assets;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pair<sp/>:<sp/>assets_)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/><ref refid="d5/d84/namespacesatox_1_1asset" kindref="compound">asset</ref>;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d84/namespacesatox_1_1asset" kindref="compound">asset</ref>[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>pair.second.name;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d84/namespacesatox_1_1asset" kindref="compound">asset</ref>[</highlight><highlight class="stringliteral">&quot;symbol&quot;</highlight><highlight class="normal">]<sp/>=<sp/>pair.second.symbol;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d84/namespacesatox_1_1asset" kindref="compound">asset</ref>[</highlight><highlight class="stringliteral">&quot;status&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(assetStatuses_[pair.first]);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assets.push_back(<ref refid="d5/d84/namespacesatox_1_1asset" kindref="compound">asset</ref>);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>assets;</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad2d0629f69a65e66f8dcda56c3f249fd" refkind="member"><highlight class="normal">std::vector&lt;nlohmann::json&gt;<sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad2d0629f69a65e66f8dcda56c3f249fd" kindref="member">AssetManager::getAssetHistory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Implement<sp/>asset<sp/>history<sp/>tracking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;json&gt;();</highlight></codeline>
<codeline lineno="922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a130cca06ddc0fe0e8cd65e24bc3f44fc" refkind="member"><highlight class="normal">std::vector&lt;nlohmann::json&gt;<sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a130cca06ddc0fe0e8cd65e24bc3f44fc" kindref="member">AssetManager::getAssetBalances</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;json&gt;<sp/>balances;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>balances_.find(asset_name);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>balances_.end())<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>pair<sp/>:<sp/>it-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d1b/asset_2src_2asset__manager_8cpp_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref><sp/>balance;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balance[</highlight><highlight class="stringliteral">&quot;address&quot;</highlight><highlight class="normal">]<sp/>=<sp/>pair.first;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balance[</highlight><highlight class="stringliteral">&quot;balance&quot;</highlight><highlight class="normal">]<sp/>=<sp/>pair.second;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>balances.push_back(balance);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>balances;</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af9c1ed53d0c1e462af2f61b3a141033b" refkind="member"><highlight class="normal">std::vector&lt;nlohmann::json&gt;<sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af9c1ed53d0c1e462af2f61b3a141033b" kindref="member">AssetManager::getAssetTransactions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asset_name)<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Implement<sp/>transaction<sp/>history<sp/>tracking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;json&gt;();</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>helper<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AssetManager::validateAssetCreationRequest(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest" kindref="compound">AssetCreationRequest</ref>&amp;<sp/>request,<sp/><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref>&amp;<sp/>result)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref>.clear();</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" kindref="member">warnings</ref>.clear();</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>required<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a8ca3902f4725bddd3c465787f320b82d" kindref="member">name</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>name<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1abf5f1ece4c6d5abe52aaefd1b59f60c8" kindref="member">symbol</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>symbol<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a10f446954a8ae2df7530c81b50d8ae96" kindref="member">amount</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Asset<sp/>amount<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1ae2bfccd2f2cbd885a5bd380e367d831b" kindref="member">owner_address</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" kindref="member">valid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" kindref="member">error_message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Owner<sp/>address<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>units<sp/>(decimals)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(request.<ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1acec1410d0886a0ce4b63725250379ed8" kindref="member">units</ref><sp/>&gt;<sp/>18)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" kindref="member">warnings</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Asset<sp/>units<sp/>should<sp/>not<sp/>exceed<sp/>18&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssetManager::setLastError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>error)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">SimpleLogger::error</ref>(</highlight><highlight class="stringliteral">&quot;AssetManager<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>error);</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssetManager::notifyAssetEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>event,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>callback<sp/>:<sp/>assetCallbacks_)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback(event,<sp/>success);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">SimpleLogger::error</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>callback<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssetManager::notifyOperationEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/dcb/structsatox_1_1asset_1_1AssetResult" kindref="compound">AssetResult</ref>&amp;<sp/>result)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>callback<sp/>:<sp/>operationCallbacks_)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback(result.operation,<sp/>result.success);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">SimpleLogger::error</ref>(</highlight><highlight class="stringliteral">&quot;Operation<sp/>callback<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssetManager::notifyErrorEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>operation,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>error)<sp/>{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>callback<sp/>:<sp/>errorCallbacks_)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callback(operation,<sp/>error);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" kindref="member">SimpleLogger::error</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>callback<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssetManager::updateStats(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>operationTime)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!statsEnabled_)<sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_.totalOperations++;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.successfulOperations++;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.failedOperations++;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>stats_.lastOperation<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>average<sp/>operation<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stats_.totalOperations<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.averageOperationTime<sp/>=<sp/>(stats_.averageOperationTime<sp/>*<sp/>(stats_.totalOperations<sp/>-<sp/>1)<sp/>+<sp/>operationTime)<sp/>/<sp/>stats_.totalOperations;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stats_.averageOperationTime<sp/>=<sp/>operationTime;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>AssetManager::validateState()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>initialized_<sp/>&amp;&amp;<sp/>state_<sp/>==<sp/><ref refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaadee5f03c2c4e73657824e028494b18c0" kindref="member">AssetState::INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AssetManager::logOperation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>operation,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>duration)<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(config_.enableLogging)<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" kindref="member">SimpleLogger::info</ref>(</highlight><highlight class="stringliteral">&quot;Asset<sp/>operation:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>operation<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>(success<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;SUCCESS&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FAILED&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(duration)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;ms)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052" refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ac6953177654bac3715ec37043d5014d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ac6953177654bac3715ec37043d5014d6" kindref="member">AssetManager::clearLastError</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/>lastError_.clear();</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>satox::asset<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/asset/src/asset_manager.cpp"/>
  </compounddef>
</doxygen>
