<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d6/de4/asset__manager__pybind_8cpp" kind="file" language="C++">
    <compoundname>asset_manager_pybind.cpp</compoundname>
    <includes local="no">pybind11/pybind11.h</includes>
    <includes local="no">pybind11/stl.h</includes>
    <includes local="no">pybind11/chrono.h</includes>
    <includes local="no">nlohmann/json.hpp</includes>
    <includes local="yes">satox/asset/asset_manager.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>src/asset/src/asset_manager_pybind.cpp</label>
        <link refid="d6/de4/asset__manager__pybind_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="4">
        <label>pybind11/chrono.h</label>
      </node>
      <node id="2">
        <label>pybind11/pybind11.h</label>
      </node>
      <node id="3">
        <label>pybind11/stl.h</label>
      </node>
      <node id="6">
        <label>satox/asset/asset_manager.hpp</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="d6/de4/asset__manager__pybind_8cpp_1ae9302f4d0b969cfea7eae1ad56500e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AssetManager::AssetMetadata</type>
        <definition>AssetManager::AssetMetadata dict_to_metadata</definition>
        <argsstring>(const py::dict &amp;d)</argsstring>
        <name>dict_to_metadata</name>
        <param>
          <type>const py::dict &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/src/asset_manager_pybind.cpp" line="36" column="29" bodyfile="src/asset/src/asset_manager_pybind.cpp" bodystart="36" bodyend="48"/>
        <referencedby refid="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" compoundref="d6/de4/asset__manager__pybind_8cpp" startline="63" endline="94">PYBIND11_MODULE</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/de4/asset__manager__pybind_8cpp_1a10513f80bf029ef8a179cdfdcf526206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>py::dict</type>
        <definition>py::dict metadata_to_dict</definition>
        <argsstring>(const AssetManager::AssetMetadata &amp;m)</argsstring>
        <name>metadata_to_dict</name>
        <param>
          <type>const AssetManager::AssetMetadata &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/src/asset_manager_pybind.cpp" line="50" column="10" bodyfile="src/asset/src/asset_manager_pybind.cpp" bodystart="50" bodyend="61"/>
        <referencedby refid="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" compoundref="d6/de4/asset__manager__pybind_8cpp" startline="63" endline="94">PYBIND11_MODULE</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PYBIND11_MODULE</definition>
        <argsstring>(satox_asset, m)</argsstring>
        <name>PYBIND11_MODULE</name>
        <param>
          <type>satox_asset</type>
        </param>
        <param>
          <type>m</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/src/asset_manager_pybind.cpp" line="63" column="1" bodyfile="src/asset/src/asset_manager_pybind.cpp" bodystart="63" bodyend="94"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a54c37c151dfaeeb9eec7f50a24ea11" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="181" endline="269">satox::asset::AssetManager::createAsset</references>
        <references refid="d6/de4/asset__manager__pybind_8cpp_1ae9302f4d0b969cfea7eae1ad56500e91" compoundref="d6/de4/asset__manager__pybind_8cpp" startline="36" endline="48">dict_to_metadata</references>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a4b0c42b88a95f24558a8fbcbddea4c68" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="525" endline="539">satox::asset::AssetManager::getAssetMetadata</references>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a16c138da27f1d66ba124a1c44a5b8808" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="63" endline="66">satox::asset::AssetManager::getInstance</references>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="175" endline="178">satox::asset::AssetManager::getLastError</references>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d9f0cc1e3012bc9aa17a64898f3cb05" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="80" endline="135">satox::asset::AssetManager::initialize</references>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a67c17d67518e2eb72f4bebaa049e48" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="170" endline="173">satox::asset::AssetManager::isInitialized</references>
        <references refid="d6/de4/asset__manager__pybind_8cpp_1a10513f80bf029ef8a179cdfdcf526206" compoundref="d6/de4/asset__manager__pybind_8cpp" startline="50" endline="61">metadata_to_dict</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/stl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/chrono.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nlohmann/json.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;satox/asset/asset_manager.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>=<sp/>pybind11;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d5/d84/namespacesatox_1_1asset" kindref="compound">satox::asset</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper:<sp/>Convert<sp/>AssetMetadata<sp/>&lt;-&gt;<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="d6/de4/asset__manager__pybind_8cpp_1ae9302f4d0b969cfea7eae1ad56500e91" refkind="member"><highlight class="normal">AssetManager::AssetMetadata<sp/><ref refid="d6/de4/asset__manager__pybind_8cpp_1ae9302f4d0b969cfea7eae1ad56500e91" kindref="member">dict_to_metadata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>py::dict&amp;<sp/>d)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>AssetManager::AssetMetadata<sp/>m;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m.name<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">].cast&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m.symbol<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&quot;symbol&quot;</highlight><highlight class="normal">].cast&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m.description<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">].cast&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>m.ipfs_hash<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&quot;ipfs_hash&quot;</highlight><highlight class="normal">].cast&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>m.decimals<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&quot;decimals&quot;</highlight><highlight class="normal">].cast&lt;uint8_t&gt;();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>m.total_supply<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&quot;total_supply&quot;</highlight><highlight class="normal">].cast&lt;uint64_t&gt;();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>m.reissuable<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&quot;reissuable&quot;</highlight><highlight class="normal">].cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d.contains(</highlight><highlight class="stringliteral">&quot;custom_data&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.custom_data<sp/>=<sp/>d[</highlight><highlight class="stringliteral">&quot;custom_data&quot;</highlight><highlight class="normal">].cast&lt;std::map&lt;std::string,<sp/>std::string&gt;&gt;();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="d6/de4/asset__manager__pybind_8cpp_1a10513f80bf029ef8a179cdfdcf526206" refkind="member"><highlight class="normal">py::dict<sp/><ref refid="d6/de4/asset__manager__pybind_8cpp_1a10513f80bf029ef8a179cdfdcf526206" kindref="member">metadata_to_dict</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AssetManager::AssetMetadata&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>py::dict<sp/>d;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>d[</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">]<sp/>=<sp/>m.name;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>d[</highlight><highlight class="stringliteral">&quot;symbol&quot;</highlight><highlight class="normal">]<sp/>=<sp/>m.symbol;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>d[</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">]<sp/>=<sp/>m.description;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>d[</highlight><highlight class="stringliteral">&quot;ipfs_hash&quot;</highlight><highlight class="normal">]<sp/>=<sp/>m.ipfs_hash;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>d[</highlight><highlight class="stringliteral">&quot;decimals&quot;</highlight><highlight class="normal">]<sp/>=<sp/>m.decimals;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>d[</highlight><highlight class="stringliteral">&quot;total_supply&quot;</highlight><highlight class="normal">]<sp/>=<sp/>m.total_supply;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>d[</highlight><highlight class="stringliteral">&quot;reissuable&quot;</highlight><highlight class="normal">]<sp/>=<sp/>m.reissuable;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>d[</highlight><highlight class="stringliteral">&quot;custom_data&quot;</highlight><highlight class="normal">]<sp/>=<sp/>m.custom_data;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" refkind="member"><highlight class="normal"><ref refid="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" kindref="member">PYBIND11_MODULE</ref>(satox_asset,<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>m.doc()<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Python<sp/>bindings<sp/>for<sp/>Satox<sp/>AssetManager&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>py::enum_&lt;AssetManager::AssetType&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;AssetType&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;MAIN_ASSET&quot;</highlight><highlight class="normal">,<sp/>AssetManager::AssetType::MAIN_ASSET)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;SUB_ASSET&quot;</highlight><highlight class="normal">,<sp/>AssetManager::AssetType::SUB_ASSET)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;UNIQUE_ASSET&quot;</highlight><highlight class="normal">,<sp/>AssetManager::AssetType::UNIQUE_ASSET)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value(</highlight><highlight class="stringliteral">&quot;RESTRICTED_ASSET&quot;</highlight><highlight class="normal">,<sp/>AssetManager::AssetType::RESTRICTED_ASSET);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>py::class_&lt;AssetManager&gt;(m,<sp/></highlight><highlight class="stringliteral">&quot;AssetManager&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def_static(</highlight><highlight class="stringliteral">&quot;getInstance&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a16c138da27f1d66ba124a1c44a5b8808" kindref="member">AssetManager::getInstance</ref>,<sp/>py::return_value_policy::reference)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;initialize&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d9f0cc1e3012bc9aa17a64898f3cb05" kindref="member">AssetManager::initialize</ref>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;isInitialized&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a67c17d67518e2eb72f4bebaa049e48" kindref="member">AssetManager::isInitialized</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;getLastError&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b" kindref="member">AssetManager::getLastError</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;createAsset&quot;</highlight><highlight class="normal">,<sp/>[](<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref>&amp;<sp/>self,<sp/>py::dict<sp/>req)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssetManager::AssetCreationRequest<sp/>r;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.owner_address<sp/>=<sp/>req[</highlight><highlight class="stringliteral">&quot;owner_address&quot;</highlight><highlight class="normal">].cast&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.type<sp/>=<sp/>req[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">].cast&lt;AssetManager::AssetType&gt;();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.metadata<sp/>=<sp/><ref refid="d6/de4/asset__manager__pybind_8cpp_1ae9302f4d0b969cfea7eae1ad56500e91" kindref="member">dict_to_metadata</ref>(req[</highlight><highlight class="stringliteral">&quot;metadata&quot;</highlight><highlight class="normal">].cast&lt;py::dict&gt;());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.initial_supply<sp/>=<sp/>req[</highlight><highlight class="stringliteral">&quot;initial_supply&quot;</highlight><highlight class="normal">].cast&lt;uint64_t&gt;();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.reissuable<sp/>=<sp/>req[</highlight><highlight class="stringliteral">&quot;reissuable&quot;</highlight><highlight class="normal">].cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.admin_addresses<sp/>=<sp/>req[</highlight><highlight class="stringliteral">&quot;admin_addresses&quot;</highlight><highlight class="normal">].cast&lt;std::vector&lt;std::string&gt;&gt;();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.restricted_addresses<sp/>=<sp/>req[</highlight><highlight class="stringliteral">&quot;restricted_addresses&quot;</highlight><highlight class="normal">].cast&lt;std::vector&lt;std::string&gt;&gt;();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a54c37c151dfaeeb9eec7f50a24ea11" kindref="member">createAsset</ref>(r);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;getAssetMetadata&quot;</highlight><highlight class="normal">,<sp/>[](<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref>&amp;<sp/>self,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AssetManager::AssetMetadata<sp/>m;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!self.<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a4b0c42b88a95f24558a8fbcbddea4c68" kindref="member">getAssetMetadata</ref>(name,<sp/>m))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(self.<ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b" kindref="member">getLastError</ref>());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/de4/asset__manager__pybind_8cpp_1a10513f80bf029ef8a179cdfdcf526206" kindref="member">metadata_to_dict</ref>(m);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/></highlight></codeline>
    </programlisting>
    <location file="src/asset/src/asset_manager_pybind.cpp"/>
  </compounddef>
</doxygen>
