<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d4/d3f/classsatox_1_1core_1_1SupabaseManager" kind="class" language="C++" prot="public">
    <compoundname>satox::core::SupabaseManager</compoundname>
    <includes refid="da/d7d/supabase__manager_8hpp" local="no">supabase_manager.hpp</includes>
    <innerclass refid="d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl" prot="public">satox::core::SupabaseManager::Impl</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1abb38bcdc5887750dcb810ac71b05c9ee" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="d0/db8/structsatox_1_1core_1_1SupabaseManager_1_1Impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; satox::core::SupabaseManager::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <qualifiedname>satox::core::SupabaseManager::impl_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="124" column="21" bodyfile="src/core/include/satox/core/cloud/supabase_manager.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1a0f7028565e6ce7b2e070c6ef680ec816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::core::SupabaseManager::SupabaseManager</definition>
        <argsstring>()</argsstring>
        <name>SupabaseManager</name>
        <qualifiedname>satox::core::SupabaseManager::SupabaseManager</qualifiedname>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="29" column="5" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1afa5529914dd1fa5973332561b840af7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::core::SupabaseManager::~SupabaseManager</definition>
        <argsstring>()</argsstring>
        <name>~SupabaseManager</name>
        <qualifiedname>satox::core::SupabaseManager::~SupabaseManager</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="34" column="5"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1a0017daee165a7ce2c8d6fcf06d43072f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::SupabaseManager::initialize</definition>
        <argsstring>(const SupabaseConfig &amp;config)</argsstring>
        <name>initialize</name>
        <qualifiedname>satox::core::SupabaseManager::initialize</qualifiedname>
        <param>
          <type>const <ref refid="d9/d9c/structsatox_1_1core_1_1SupabaseConfig" kindref="compound">SupabaseConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Initialize the Supabase manager. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>Configuration for Supabase connection </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if initialization successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="41" column="10" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="124" bodyend="145"/>
        <references refid="d9/d9c/structsatox_1_1core_1_1SupabaseConfig_1a52a027f30d20a0c21e22f2b24d8de43b" compoundref="d5/d9c/supabase__config_8hpp" startline="30">satox::core::SupabaseConfig::enable_logging</references>
        <references refid="d9/d9c/structsatox_1_1core_1_1SupabaseConfig_1af87c8b7e89880d0c108bbd3be791e2b2" compoundref="d5/d9c/supabase__config_8hpp" startline="80" endline="82">satox::core::SupabaseConfig::isValid</references>
        <references refid="d9/d9c/structsatox_1_1core_1_1SupabaseConfig_1ab261f16b4c72d999cab54140a3aeecc1" compoundref="d5/d9c/supabase__config_8hpp" startline="20">satox::core::SupabaseConfig::url</references>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1a81307bb776901dd2f017b91b50adeeae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::core::SupabaseManager::connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <qualifiedname>satox::core::SupabaseManager::connect</qualifiedname>
        <briefdescription>
<para>Connect to Supabase. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Connection ID if successful, empty string otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="47" column="17" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="147" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1ac4566361261ad2ba745bc9387250b3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::SupabaseManager::disconnect</definition>
        <argsstring>(const std::string &amp;connection_id)</argsstring>
        <name>disconnect</name>
        <qualifiedname>satox::core::SupabaseManager::disconnect</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <briefdescription>
<para>Disconnect from Supabase. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID to disconnect </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if disconnection successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="54" column="10" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="184" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1afadfff0ab2fd112a6ab78c98fd17d651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::SupabaseManager::executeQuery</definition>
        <argsstring>(const std::string &amp;connection_id, const std::string &amp;query, const nlohmann::json &amp;params, nlohmann::json &amp;result)</argsstring>
        <name>executeQuery</name>
        <qualifiedname>satox::core::SupabaseManager::executeQuery</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Execute a SQL query. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>query</parametername>
</parameternamelist>
<parameterdescription>
<para>SQL query to execute </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Query parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Query result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if query successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="64" column="10" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="206" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1a665300a18cf8ca75563c4b746f84343a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::SupabaseManager::executeTransaction</definition>
        <argsstring>(const std::string &amp;connection_id, const std::vector&lt; std::string &gt; &amp;queries, nlohmann::json &amp;result)</argsstring>
        <name>executeTransaction</name>
        <qualifiedname>satox::core::SupabaseManager::executeTransaction</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>queries</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Execute a transaction. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queries</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of SQL queries </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="de/d89/structsatox_1_1core_1_1Transaction" kindref="compound">Transaction</ref> result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if transaction successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="76" column="10" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="247" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1ae7b76047c92f2d600780409a1f0394b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::core::SupabaseManager::subscribe</definition>
        <argsstring>(const std::string &amp;connection_id, const std::string &amp;table, std::function&lt; void(const nlohmann::json &amp;)&gt; callback)</argsstring>
        <name>subscribe</name>
        <qualifiedname>satox::core::SupabaseManager::subscribe</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>table</declname>
        </param>
        <param>
          <type>std::function&lt; void(const nlohmann::json &amp;)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Subscribe to real-time changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Table name to subscribe to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for real-time updates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Subscription ID if successful, empty string otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="87" column="17" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="286" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1a2ba6c044e5f392607b96c947a110b093" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::SupabaseManager::unsubscribe</definition>
        <argsstring>(const std::string &amp;connection_id, const std::string &amp;subscription_id)</argsstring>
        <name>unsubscribe</name>
        <qualifiedname>satox::core::SupabaseManager::unsubscribe</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>subscription_id</declname>
        </param>
        <briefdescription>
<para>Unsubscribe from real-time changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subscription_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Subscription ID to unsubscribe from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if unsubscription successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="97" column="10" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="319" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1acdc7e205cb4e56706144ae981856f3a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::SupabaseManager::isConnected</definition>
        <argsstring>(const std::string &amp;connection_id) const</argsstring>
        <name>isConnected</name>
        <qualifiedname>satox::core::SupabaseManager::isConnected</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <briefdescription>
<para>Get connection status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if connected, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="104" column="10" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="343" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1ac923ae05f40008f9bec53fab442ee36d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::core::SupabaseManager::getLastError</definition>
        <argsstring>() const</argsstring>
        <name>getLastError</name>
        <qualifiedname>satox::core::SupabaseManager::getLastError</qualifiedname>
        <briefdescription>
<para>Get last error message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Last error message </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="110" column="17" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1aa8ef72d102bd726a3599890912c3ec05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::core::SupabaseManager::clearError</definition>
        <argsstring>()</argsstring>
        <name>clearError</name>
        <qualifiedname>satox::core::SupabaseManager::clearError</qualifiedname>
        <briefdescription>
<para>Clear last error. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="115" column="10" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1ac5186e10873ad83f4e0e9e54f4f13b56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::core::SupabaseManager::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <qualifiedname>satox::core::SupabaseManager::shutdown</qualifiedname>
        <briefdescription>
<para>Shutdown the manager. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="120" column="10" bodyfile="src/core/src/cloud/supabase_manager.cpp" bodystart="360" bodyend="375"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Supabase database manager for handling Supabase operations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/core/include/satox/core/cloud/supabase_manager.hpp" line="24" column="1" bodyfile="src/core/include/satox/core/cloud/supabase_manager.hpp" bodystart="24" bodyend="125"/>
    <listofallmembers>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1aa8ef72d102bd726a3599890912c3ec05" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>clearError</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1a81307bb776901dd2f017b91b50adeeae" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>connect</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1ac4566361261ad2ba745bc9387250b3d4" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>disconnect</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1afadfff0ab2fd112a6ab78c98fd17d651" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>executeQuery</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1a665300a18cf8ca75563c4b746f84343a" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>executeTransaction</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1ac923ae05f40008f9bec53fab442ee36d" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>getLastError</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1abb38bcdc5887750dcb810ac71b05c9ee" prot="private" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>impl_</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1a0017daee165a7ce2c8d6fcf06d43072f" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>initialize</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1acdc7e205cb4e56706144ae981856f3a2" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>isConnected</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1ac5186e10873ad83f4e0e9e54f4f13b56" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>shutdown</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1ae7b76047c92f2d600780409a1f0394b2" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>subscribe</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1a0f7028565e6ce7b2e070c6ef680ec816" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>SupabaseManager</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1a2ba6c044e5f392607b96c947a110b093" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>unsubscribe</name></member>
      <member refid="d4/d3f/classsatox_1_1core_1_1SupabaseManager_1afa5529914dd1fa5973332561b840af7e" prot="public" virt="non-virtual"><scope>satox::core::SupabaseManager</scope><name>~SupabaseManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
