<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="dc/de4/classsatox_1_1core_1_1ProofOfWork" kind="class" language="C++" prot="public">
    <compoundname>satox::core::ProofOfWork</compoundname>
    <includes refid="d7/de2/proof__of__work_8h" local="no">proof_of_work.h</includes>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a4998a55559ff1bb28da52ceeb8281796" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t satox::core::ProofOfWork::INITIAL_DIFFICULTY</definition>
        <argsstring></argsstring>
        <name>INITIAL_DIFFICULTY</name>
        <qualifiedname>satox::core::ProofOfWork::INITIAL_DIFFICULTY</qualifiedname>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="69" column="31" bodyfile="src/core/include/satox/core/proof_of_work.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1af85bb4469b83adb9c6d94e97da77ce88" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t satox::core::ProofOfWork::DIFFICULTY_ADJUSTMENT_INTERVAL</definition>
        <argsstring></argsstring>
        <name>DIFFICULTY_ADJUSTMENT_INTERVAL</name>
        <qualifiedname>satox::core::ProofOfWork::DIFFICULTY_ADJUSTMENT_INTERVAL</qualifiedname>
        <initializer>= 2016</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="70" column="31" bodyfile="src/core/include/satox/core/proof_of_work.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a6043b6843c6f7d7cdea682c18b3ea70f" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t satox::core::ProofOfWork::TARGET_BLOCK_TIME</definition>
        <argsstring></argsstring>
        <name>TARGET_BLOCK_TIME</name>
        <qualifiedname>satox::core::ProofOfWork::TARGET_BLOCK_TIME</qualifiedname>
        <initializer>= 600</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="71" column="31" bodyfile="src/core/include/satox/core/proof_of_work.h" bodystart="71" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a07597b203f8402a0f75789f6abd7d0d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::core::ProofOfWork::ProofOfWork</definition>
        <argsstring>()</argsstring>
        <name>ProofOfWork</name>
        <qualifiedname>satox::core::ProofOfWork::ProofOfWork</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="38" column="5" bodyfile="src/core/src/proof_of_work.cpp" bodystart="44" bodyend="44"/>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1af4a21ba1471b56285a4e4d6b61a1b068">operator=</referencedby>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a9932007dbe6058e0c241c300cdfb45a7">operator=</referencedby>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a02e0f6a17b93c0fb65bd09413d64c1d7">ProofOfWork</referencedby>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a292e115ee2e6c997cd504a5607febc23">ProofOfWork</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a6066ff3497191e513883a0e34f993b4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::core::ProofOfWork::~ProofOfWork</definition>
        <argsstring>()=default</argsstring>
        <name>~ProofOfWork</name>
        <qualifiedname>satox::core::ProofOfWork::~ProofOfWork</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="39" column="5"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a02e0f6a17b93c0fb65bd09413d64c1d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::core::ProofOfWork::ProofOfWork</definition>
        <argsstring>(const ProofOfWork &amp;)=delete</argsstring>
        <name>ProofOfWork</name>
        <qualifiedname>satox::core::ProofOfWork::ProofOfWork</qualifiedname>
        <param>
          <type>const <ref refid="dc/de4/classsatox_1_1core_1_1ProofOfWork" kindref="compound">ProofOfWork</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="42" column="5"/>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a07597b203f8402a0f75789f6abd7d0d1" compoundref="df/d35/proof__of__work_8cpp" startline="44" endline="44">ProofOfWork</references>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1af4a21ba1471b56285a4e4d6b61a1b068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/de4/classsatox_1_1core_1_1ProofOfWork" kindref="compound">ProofOfWork</ref> &amp;</type>
        <definition>ProofOfWork &amp; satox::core::ProofOfWork::operator=</definition>
        <argsstring>(const ProofOfWork &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>satox::core::ProofOfWork::operator=</qualifiedname>
        <param>
          <type>const <ref refid="dc/de4/classsatox_1_1core_1_1ProofOfWork" kindref="compound">ProofOfWork</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="43" column="17"/>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a07597b203f8402a0f75789f6abd7d0d1" compoundref="df/d35/proof__of__work_8cpp" startline="44" endline="44">ProofOfWork</references>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a292e115ee2e6c997cd504a5607febc23" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>satox::core::ProofOfWork::ProofOfWork</definition>
        <argsstring>(ProofOfWork &amp;&amp;) noexcept=default</argsstring>
        <name>ProofOfWork</name>
        <qualifiedname>satox::core::ProofOfWork::ProofOfWork</qualifiedname>
        <param>
          <type><ref refid="dc/de4/classsatox_1_1core_1_1ProofOfWork" kindref="compound">ProofOfWork</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="46" column="5"/>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a07597b203f8402a0f75789f6abd7d0d1" compoundref="df/d35/proof__of__work_8cpp" startline="44" endline="44">ProofOfWork</references>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a9932007dbe6058e0c241c300cdfb45a7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="dc/de4/classsatox_1_1core_1_1ProofOfWork" kindref="compound">ProofOfWork</ref> &amp;</type>
        <definition>ProofOfWork &amp; satox::core::ProofOfWork::operator=</definition>
        <argsstring>(ProofOfWork &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <qualifiedname>satox::core::ProofOfWork::operator=</qualifiedname>
        <param>
          <type><ref refid="dc/de4/classsatox_1_1core_1_1ProofOfWork" kindref="compound">ProofOfWork</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="47" column="17"/>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1aabd17925539a22ff64db1c99f85df15b" compoundref="df/d35/proof__of__work_8cpp" startline="95" endline="107">calculateHash</references>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a29a8af8b51e48d119a899d2f2963f57e" compoundref="df/d35/proof__of__work_8cpp" startline="175" endline="183">getDifficulty</references>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a21fecd44177f661e71a87a5c08450b6f" compoundref="df/d35/proof__of__work_8cpp" startline="144" endline="173">meetsDifficulty</references>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1acc9accd74c52c70246eb36d1b7a317af" compoundref="df/d35/proof__of__work_8cpp" startline="46" endline="75">mineBlock</references>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a07597b203f8402a0f75789f6abd7d0d1" compoundref="df/d35/proof__of__work_8cpp" startline="44" endline="44">ProofOfWork</references>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a001bc3017e74097f9f381e096a565e10" compoundref="df/d35/proof__of__work_8cpp" startline="77" endline="93">verifyBlock</references>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1acc9accd74c52c70246eb36d1b7a317af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::core::ProofOfWork::mineBlock</definition>
        <argsstring>(const std::string &amp;previousHash, const std::string &amp;merkleRoot, uint64_t timestamp, uint64_t difficulty)</argsstring>
        <name>mineBlock</name>
        <qualifiedname>satox::core::ProofOfWork::mineBlock</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>previousHash</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>merkleRoot</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>difficulty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="50" column="17" bodyfile="src/core/src/proof_of_work.cpp" bodystart="46" bodyend="75"/>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1aabd17925539a22ff64db1c99f85df15b" compoundref="df/d35/proof__of__work_8cpp" startline="95" endline="107">calculateHash</references>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a9932007dbe6058e0c241c300cdfb45a7">operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a001bc3017e74097f9f381e096a565e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::ProofOfWork::verifyBlock</definition>
        <argsstring>(const std::string &amp;hash, const std::string &amp;previousHash, const std::string &amp;merkleRoot, uint64_t timestamp, uint64_t difficulty, const std::string &amp;nonce)</argsstring>
        <name>verifyBlock</name>
        <qualifiedname>satox::core::ProofOfWork::verifyBlock</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>previousHash</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>merkleRoot</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>difficulty</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>nonce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="56" column="10" bodyfile="src/core/src/proof_of_work.cpp" bodystart="77" bodyend="93"/>
        <references refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1aabd17925539a22ff64db1c99f85df15b" compoundref="df/d35/proof__of__work_8cpp" startline="95" endline="107">calculateHash</references>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a9932007dbe6058e0c241c300cdfb45a7">operator=</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1aabd17925539a22ff64db1c99f85df15b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::core::ProofOfWork::calculateHash</definition>
        <argsstring>(const std::string &amp;data)</argsstring>
        <name>calculateHash</name>
        <qualifiedname>satox::core::ProofOfWork::calculateHash</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="64" column="24" bodyfile="src/core/src/proof_of_work.cpp" bodystart="95" bodyend="107"/>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1acc9accd74c52c70246eb36d1b7a317af" compoundref="df/d35/proof__of__work_8cpp" startline="46" endline="75">mineBlock</referencedby>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a9932007dbe6058e0c241c300cdfb45a7">operator=</referencedby>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a001bc3017e74097f9f381e096a565e10" compoundref="df/d35/proof__of__work_8cpp" startline="77" endline="93">verifyBlock</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a21fecd44177f661e71a87a5c08450b6f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::ProofOfWork::meetsDifficulty</definition>
        <argsstring>(const std::string &amp;hash, uint64_t difficulty)</argsstring>
        <name>meetsDifficulty</name>
        <qualifiedname>satox::core::ProofOfWork::meetsDifficulty</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>difficulty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="65" column="17" bodyfile="src/core/src/proof_of_work.cpp" bodystart="144" bodyend="173"/>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a9932007dbe6058e0c241c300cdfb45a7">operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a29a8af8b51e48d119a899d2f2963f57e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t satox::core::ProofOfWork::getDifficulty</definition>
        <argsstring>(uint64_t blockHeight)</argsstring>
        <name>getDifficulty</name>
        <qualifiedname>satox::core::ProofOfWork::getDifficulty</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>blockHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="66" column="21" bodyfile="src/core/src/proof_of_work.cpp" bodystart="175" bodyend="183"/>
        <referencedby refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a9932007dbe6058e0c241c300cdfb45a7">operator=</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a0e3137adc6e9cd0dae4695270799827f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::core::ProofOfWork::generateNonce</definition>
        <argsstring>()</argsstring>
        <name>generateNonce</name>
        <qualifiedname>satox::core::ProofOfWork::generateNonce</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="73" column="17" bodyfile="src/core/src/proof_of_work.cpp" bodystart="185" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a1d1e26a70b0aa76d5ef3dbfd08413974" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::ProofOfWork::isValidNonce</definition>
        <argsstring>(const std::string &amp;nonce)</argsstring>
        <name>isValidNonce</name>
        <qualifiedname>satox::core::ProofOfWork::isValidNonce</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>nonce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/proof_of_work.h" line="74" column="10" bodyfile="src/core/src/proof_of_work.cpp" bodystart="203" bodyend="225"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/core/include/satox/core/proof_of_work.h" line="36" column="1" bodyfile="src/core/include/satox/core/proof_of_work.h" bodystart="36" bodyend="75"/>
    <listofallmembers>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1aabd17925539a22ff64db1c99f85df15b" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>calculateHash</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1af85bb4469b83adb9c6d94e97da77ce88" prot="private" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>DIFFICULTY_ADJUSTMENT_INTERVAL</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a0e3137adc6e9cd0dae4695270799827f" prot="private" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>generateNonce</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a29a8af8b51e48d119a899d2f2963f57e" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>getDifficulty</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a4998a55559ff1bb28da52ceeb8281796" prot="private" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>INITIAL_DIFFICULTY</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a1d1e26a70b0aa76d5ef3dbfd08413974" prot="private" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>isValidNonce</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a21fecd44177f661e71a87a5c08450b6f" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>meetsDifficulty</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1acc9accd74c52c70246eb36d1b7a317af" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>mineBlock</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1af4a21ba1471b56285a4e4d6b61a1b068" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>operator=</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a9932007dbe6058e0c241c300cdfb45a7" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>operator=</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a07597b203f8402a0f75789f6abd7d0d1" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>ProofOfWork</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a02e0f6a17b93c0fb65bd09413d64c1d7" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>ProofOfWork</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a292e115ee2e6c997cd504a5607febc23" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>ProofOfWork</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a6043b6843c6f7d7cdea682c18b3ea70f" prot="private" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>TARGET_BLOCK_TIME</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a001bc3017e74097f9f381e096a565e10" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>verifyBlock</name></member>
      <member refid="dc/de4/classsatox_1_1core_1_1ProofOfWork_1a6066ff3497191e513883a0e34f993b4d" prot="public" virt="non-virtual"><scope>satox::core::ProofOfWork</scope><name>~ProofOfWork</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
