<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="dc/d9e/classsatox_1_1security_1_1SecurityManager" kind="class" language="C++" prot="public">
    <compoundname>satox::security::SecurityManager</compoundname>
    <includes refid="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" local="no">security_manager.hpp</includes>
    <innerclass refid="dd/dd3/classsatox_1_1security_1_1SecurityManager_1_1Impl" prot="public">satox::security::SecurityManager::Impl</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a802fe42c841d2010a2bcbb4c1b14c15a" prot="private" static="no" mutable="yes">
        <type>std::mutex</type>
        <definition>std::mutex satox::security::SecurityManager::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <qualifiedname>satox::security::SecurityManager::mutex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="194" column="24" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ab75f16562b2f4e593f88fc868b5b0586" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::initialized_</definition>
        <argsstring></argsstring>
        <name>initialized_</name>
        <qualifiedname>satox::security::SecurityManager::initialized_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="195" column="10" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a80cbc02dfb3afc102018601476908e5b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::is_running_</definition>
        <argsstring></argsstring>
        <name>is_running_</name>
        <qualifiedname>satox::security::SecurityManager::is_running_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="196" column="10" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2e18311d640fb0144141fa1a105645ec" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d71/namespacesatox_1_1security_1ac2ef4071b626874e0ca8a38fae95805b" kindref="member">SecurityState</ref></type>
        <definition>SecurityState satox::security::SecurityManager::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <qualifiedname>satox::security::SecurityManager::state_</qualifiedname>
        <initializer>= <ref refid="d3/d71/namespacesatox_1_1security_1ac2ef4071b626874e0ca8a38fae95805badd652546039b18970b8dcf2cff824268" kindref="member">SecurityState::UNINITIALIZED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="197" column="19" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a8397a96720a957605c810d2ad9f94c86" prot="private" static="no" mutable="no">
        <type><ref refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig" kindref="compound">SecurityConfig</ref></type>
        <definition>SecurityConfig satox::security::SecurityManager::config_</definition>
        <argsstring></argsstring>
        <name>config_</name>
        <qualifiedname>satox::security::SecurityManager::config_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="198" column="20" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a428050e38c3ee67e934e52a1f6e1c704" prot="private" static="no" mutable="no">
        <type><ref refid="db/d75/structsatox_1_1security_1_1SecurityStats" kindref="compound">SecurityStats</ref></type>
        <definition>SecurityStats satox::security::SecurityManager::stats_</definition>
        <argsstring></argsstring>
        <name>stats_</name>
        <qualifiedname>satox::security::SecurityManager::stats_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="199" column="19" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a924d3b3ec2ddee1e4e6601003aa1e8ff" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string satox::security::SecurityManager::lastError_</definition>
        <argsstring></argsstring>
        <name>lastError_</name>
        <qualifiedname>satox::security::SecurityManager::lastError_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="200" column="17" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2b2b6b8df1e59b3f9dfec828719711a5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::statsEnabled_</definition>
        <argsstring></argsstring>
        <name>statsEnabled_</name>
        <qualifiedname>satox::security::SecurityManager::statsEnabled_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="201" column="10" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ad3abc6233f7b02d7bcfb652ba070f481" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d71/namespacesatox_1_1security_1a1dce245b3cc4d80fdc448671610d3425" kindref="member">SecurityCallback</ref> &gt;</type>
        <definition>std::vector&lt;SecurityCallback&gt; satox::security::SecurityManager::securityCallbacks_</definition>
        <argsstring></argsstring>
        <name>securityCallbacks_</name>
        <qualifiedname>satox::security::SecurityManager::securityCallbacks_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="204" column="17" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac2ee8d99d0e23bc82e335fd0b6bcf7e5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d71/namespacesatox_1_1security_1ae6ac037996762c142410f859544a19bd" kindref="member">SecurityViolationCallback</ref> &gt;</type>
        <definition>std::vector&lt;SecurityViolationCallback&gt; satox::security::SecurityManager::violationCallbacks_</definition>
        <argsstring></argsstring>
        <name>violationCallbacks_</name>
        <qualifiedname>satox::security::SecurityManager::violationCallbacks_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="205" column="17" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aaeaadfcce82367fd67fc1ff725c6bfab" prot="private" static="no" mutable="no">
        <type>std::chrono::system_clock::time_point</type>
        <definition>std::chrono::system_clock::time_point satox::security::SecurityManager::start_time_</definition>
        <argsstring></argsstring>
        <name>start_time_</name>
        <qualifiedname>satox::security::SecurityManager::start_time_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="208" column="43" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a0878c9e667bf19f127775cedd8770752" prot="private" static="no" mutable="no">
        <type>std::chrono::system_clock::time_point</type>
        <definition>std::chrono::system_clock::time_point satox::security::SecurityManager::lastHealthCheck_</definition>
        <argsstring></argsstring>
        <name>lastHealthCheck_</name>
        <qualifiedname>satox::security::SecurityManager::lastHealthCheck_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="209" column="43" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1acff65959732e94cebd294d85cf10e980" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int satox::security::SecurityManager::consecutiveFailures_</definition>
        <argsstring></argsstring>
        <name>consecutiveFailures_</name>
        <qualifiedname>satox::security::SecurityManager::consecutiveFailures_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="210" column="9" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a035cb38f8808679277d721f9b0ca9ddf" prot="private" static="no" mutable="no">
        <type>nlohmann::json</type>
        <definition>nlohmann::json satox::security::SecurityManager::internalState_</definition>
        <argsstring></argsstring>
        <name>internalState_</name>
        <qualifiedname>satox::security::SecurityManager::internalState_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="211" column="20" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aa247a67ae683e97997f9387d20d1cd97" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="d2/dca/classsatox_1_1security_1_1InputValidator" kindref="compound">InputValidator</ref> &gt;</type>
        <definition>std::unique_ptr&lt;InputValidator&gt; satox::security::SecurityManager::inputValidator_</definition>
        <argsstring></argsstring>
        <name>inputValidator_</name>
        <qualifiedname>satox::security::SecurityManager::inputValidator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="215" column="21" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a9b1b857ae8c546cd69c2404c32ad69e4" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="de/d2c/classsatox_1_1security_1_1RateLimiter" kindref="compound">RateLimiter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;RateLimiter&gt; satox::security::SecurityManager::rateLimiter_</definition>
        <argsstring></argsstring>
        <name>rateLimiter_</name>
        <qualifiedname>satox::security::SecurityManager::rateLimiter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="216" column="21" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a05c00b1e07e31e2e5e4c9571ddcd3dc1" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::pair&lt; int, int &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::pair&lt;int, int&gt; &gt; satox::security::SecurityManager::rateLimits_</definition>
        <argsstring></argsstring>
        <name>rateLimits_</name>
        <qualifiedname>satox::security::SecurityManager::rateLimits_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="219" column="14" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a51abfe587de8619820c9f88ff2fa2b7d" prot="private" static="no" mutable="no">
        <type>nlohmann::json</type>
        <definition>nlohmann::json satox::security::SecurityManager::performanceConfig_</definition>
        <argsstring></argsstring>
        <name>performanceConfig_</name>
        <qualifiedname>satox::security::SecurityManager::performanceConfig_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="222" column="20" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aa15090f08e4d58997a55723551b7a3f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager" kindref="compound">SecurityManager</ref> &amp;</type>
        <definition>SecurityManager &amp; satox::security::SecurityManager::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <qualifiedname>satox::security::SecurityManager::getInstance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="104" column="28" bodyfile="src/security/src/security_manager.cpp" bodystart="44" bodyend="47"/>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a90b8c92e3c3fee633661fa2e92cd7b37" compoundref="d2/d58/security_2security__manager_8cpp" startline="457" endline="457">SecurityManager</references>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1a004dad2272532774ebf3821f8c3b9020" compoundref="dd/deb/satox__sdk__c_8cpp" startline="101" endline="108">satox_security_manager_create</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a90b8c92e3c3fee633661fa2e92cd7b37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::security::SecurityManager::SecurityManager</definition>
        <argsstring>()</argsstring>
        <name>SecurityManager</name>
        <qualifiedname>satox::security::SecurityManager::SecurityManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="107" column="5" bodyfile="src/security/security_manager.cpp" bodystart="457" bodyend="457"/>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aa15090f08e4d58997a55723551b7a3f4" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="44" endline="47">getInstance</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a82a37a99f5179a1d2b33678f9d7c3a67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::security::SecurityManager::~SecurityManager</definition>
        <argsstring>()</argsstring>
        <name>~SecurityManager</name>
        <qualifiedname>satox::security::SecurityManager::~SecurityManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="108" column="5" bodyfile="src/security/src/security_manager.cpp" bodystart="61" bodyend="63"/>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aee0804ae0fa9e4c4dec642324f2f9255" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="105" endline="122">shutdown</references>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ae7341bc641d88f5555375fbc5e938a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::initialize</definition>
        <argsstring>(const SecurityConfig &amp;config)</argsstring>
        <name>initialize</name>
        <qualifiedname>satox::security::SecurityManager::initialize</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig" kindref="compound">SecurityConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="111" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="66" bodyend="103"/>
        <references refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig_1a1c1c44d0383e879df7a4422fc07f5efd" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="70">satox::security::SecurityConfig::enableLogging</references>
        <references refid="d3/d71/namespacesatox_1_1security_1ac2ef4071b626874e0ca8a38fae95805badee5f03c2c4e73657824e028494b18c0" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="57">satox::security::INITIALIZED</references>
        <references refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig_1ad869b2d033d9c898f6101df4feb33422" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="71">satox::security::SecurityConfig::logPath</references>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aee0804ae0fa9e4c4dec642324f2f9255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <qualifiedname>satox::security::SecurityManager::shutdown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="112" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="105" bodyend="122"/>
        <references refid="d3/d71/namespacesatox_1_1security_1ac2ef4071b626874e0ca8a38fae95805bab9984206799a7f9fe4bd1b6c18db8112" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="61">satox::security::SHUTDOWN</references>
        <references refid="d3/d71/namespacesatox_1_1security_1ac2ef4071b626874e0ca8a38fae95805badd652546039b18970b8dcf2cff824268" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="55">satox::security::UNINITIALIZED</references>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a82a37a99f5179a1d2b33678f9d7c3a67" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="61" endline="63">~SecurityManager</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a5a10fdba165e1657eb561b2d2bcc7d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <qualifiedname>satox::security::SecurityManager::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="115" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="125" bodyend="146"/>
        <references refid="d3/d71/namespacesatox_1_1security_1ac2ef4071b626874e0ca8a38fae95805ba43491564ebcfd38568918efbd6e840fd" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="58">satox::security::RUNNING</references>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ab9550af1a060d4a1efd0a14d9956b894" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>satox::security::SecurityManager::stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="116" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="148" bodyend="164"/>
        <references refid="d3/d71/namespacesatox_1_1security_1ac2ef4071b626874e0ca8a38fae95805ba09d4d696b4e935115b9313e3c412509a" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="59">satox::security::STOPPED</references>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac90a0151720d2e6f35ae52121ba4aad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::performOperation</definition>
        <argsstring>(const std::string &amp;operation, const nlohmann::json &amp;params)</argsstring>
        <name>performOperation</name>
        <qualifiedname>satox::security::SecurityManager::performOperation</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="117" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="166" bodyend="199"/>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a9b92726165368812f76386b0e8a1f172" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="201" endline="226">executeOperation</references>
        <references refid="d1/d71/structsatox_1_1security_1_1SecurityResult_1a2976f179947e3972f99a25f3c67f02f9" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="90">satox::security::SecurityResult::success</references>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1af1e4bd4e86d01d4feb010d12419da132" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="228" endline="241">validateOperation</references>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a9b92726165368812f76386b0e8a1f172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d1/d71/structsatox_1_1security_1_1SecurityResult" kindref="compound">SecurityResult</ref></type>
        <definition>SecurityResult satox::security::SecurityManager::executeOperation</definition>
        <argsstring>(const std::string &amp;operation, const nlohmann::json &amp;params)</argsstring>
        <name>executeOperation</name>
        <qualifiedname>satox::security::SecurityManager::executeOperation</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="118" column="20" bodyfile="src/security/src/security_manager.cpp" bodystart="201" bodyend="226"/>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1afb5ae171101eb541410c5627c2a00903" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="451" endline="463">checkRateLimit</references>
        <references refid="d1/d71/structsatox_1_1security_1_1SecurityResult_1a2bcea8e237de09164d790fcca8c32b8d" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="93">satox::security::SecurityResult::duration</references>
        <references refid="d1/d71/structsatox_1_1security_1_1SecurityResult_1ab5f2129b5d150386ccc44e6ab4726c90" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="91">satox::security::SecurityResult::error</references>
        <references refid="d1/d71/structsatox_1_1security_1_1SecurityResult_1a2976f179947e3972f99a25f3c67f02f9" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="90">satox::security::SecurityResult::success</references>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac385b8d99612adea7ad9919f077f8a2f" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="409" endline="416">validateInput</references>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac90a0151720d2e6f35ae52121ba4aad2" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="166" endline="199">performOperation</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1af1e4bd4e86d01d4feb010d12419da132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::validateOperation</definition>
        <argsstring>(const std::string &amp;operation, const nlohmann::json &amp;params)</argsstring>
        <name>validateOperation</name>
        <qualifiedname>satox::security::SecurityManager::validateOperation</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="119" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="228" bodyend="241"/>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac90a0151720d2e6f35ae52121ba4aad2" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="166" endline="199">performOperation</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1adcde43192466003461763c5664df72fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d71/namespacesatox_1_1security_1ac2ef4071b626874e0ca8a38fae95805b" kindref="member">SecurityState</ref></type>
        <definition>SecurityState satox::security::SecurityManager::getState</definition>
        <argsstring>() const</argsstring>
        <name>getState</name>
        <qualifiedname>satox::security::SecurityManager::getState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="122" column="19" bodyfile="src/security/src/security_manager.cpp" bodystart="244" bodyend="247"/>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a95fb4d27f1282d5eb088fbd89e98a7f8" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="370" endline="380">getHealthStatus</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aca410ec0fd030f19533a5e88f0e08728" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::isInitialized</definition>
        <argsstring>() const</argsstring>
        <name>isInitialized</name>
        <qualifiedname>satox::security::SecurityManager::isInitialized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="123" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="249" bodyend="252"/>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a95fb4d27f1282d5eb088fbd89e98a7f8" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="370" endline="380">getHealthStatus</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a5a1b12e4922884b2aebba0b05bbfd4f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::isRunning</definition>
        <argsstring>() const</argsstring>
        <name>isRunning</name>
        <qualifiedname>satox::security::SecurityManager::isRunning</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="124" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="254" bodyend="257"/>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a95fb4d27f1282d5eb088fbd89e98a7f8" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="370" endline="380">getHealthStatus</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2fd33ec6765ee706edd23979e4b88cbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::isHealthy</definition>
        <argsstring>() const</argsstring>
        <name>isHealthy</name>
        <qualifiedname>satox::security::SecurityManager::isHealthy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="125" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="259" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a5001c162f10620ff74d950de600ab3bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig" kindref="compound">SecurityConfig</ref></type>
        <definition>SecurityConfig satox::security::SecurityManager::getConfig</definition>
        <argsstring>() const</argsstring>
        <name>getConfig</name>
        <qualifiedname>satox::security::SecurityManager::getConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="128" column="20" bodyfile="src/security/src/security_manager.cpp" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac6ad2f91859c2847c8825c73b9cc8df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::updateConfig</definition>
        <argsstring>(const SecurityConfig &amp;config)</argsstring>
        <name>updateConfig</name>
        <qualifiedname>satox::security::SecurityManager::updateConfig</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig" kindref="compound">SecurityConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="129" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="279" bodyend="288"/>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a3db98afe2c7c70fe8f1f8f62aee694e4" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="290" endline="297">validateConfig</references>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a3db98afe2c7c70fe8f1f8f62aee694e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::validateConfig</definition>
        <argsstring>(const SecurityConfig &amp;config)</argsstring>
        <name>validateConfig</name>
        <qualifiedname>satox::security::SecurityManager::validateConfig</qualifiedname>
        <param>
          <type>const <ref refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig" kindref="compound">SecurityConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="130" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="290" bodyend="297"/>
        <references refid="d2/d1e/structsatox_1_1security_1_1SecurityConfig_1a2bc352126ebd3857e20b5bef11401e08" compoundref="d0/d9f/security_2include_2satox_2security_2security__manager_8hpp" startline="66">satox::security::SecurityConfig::name</references>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac6ad2f91859c2847c8825c73b9cc8df5" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="279" endline="288">updateConfig</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a10c9d6811e7627258f9069e4c6d2e9d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="db/d75/structsatox_1_1security_1_1SecurityStats" kindref="compound">SecurityStats</ref></type>
        <definition>SecurityStats satox::security::SecurityManager::getStats</definition>
        <argsstring>() const</argsstring>
        <name>getStats</name>
        <qualifiedname>satox::security::SecurityManager::getStats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="133" column="19" bodyfile="src/security/src/security_manager.cpp" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aac1e78a28ec90bcfa6d0f92bac0bc1b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::resetStats</definition>
        <argsstring>()</argsstring>
        <name>resetStats</name>
        <qualifiedname>satox::security::SecurityManager::resetStats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="134" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1abe7703bfd4ffee20dc171f683b52653e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::enableStats</definition>
        <argsstring>(bool enable)</argsstring>
        <name>enableStats</name>
        <qualifiedname>satox::security::SecurityManager::enableStats</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="135" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="310" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a43dd835481d7a3a5f3978fa1d3e67c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::registerSecurityCallback</definition>
        <argsstring>(SecurityCallback callback)</argsstring>
        <name>registerSecurityCallback</name>
        <qualifiedname>satox::security::SecurityManager::registerSecurityCallback</qualifiedname>
        <param>
          <type><ref refid="d3/d71/namespacesatox_1_1security_1a1dce245b3cc4d80fdc448671610d3425" kindref="member">SecurityCallback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="138" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ad6b1f9cb19bfae1d044b4efe62e312be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::registerViolationCallback</definition>
        <argsstring>(SecurityViolationCallback callback)</argsstring>
        <name>registerViolationCallback</name>
        <qualifiedname>satox::security::SecurityManager::registerViolationCallback</qualifiedname>
        <param>
          <type><ref refid="d3/d71/namespacesatox_1_1security_1ae6ac037996762c142410f859544a19bd" kindref="member">SecurityViolationCallback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="139" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1af50a81cb2d8249d9a5f77acaf493934b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::unregisterSecurityCallback</definition>
        <argsstring>()</argsstring>
        <name>unregisterSecurityCallback</name>
        <qualifiedname>satox::security::SecurityManager::unregisterSecurityCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="140" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ada9b31659d241fe1548348d8229081b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::unregisterViolationCallback</definition>
        <argsstring>()</argsstring>
        <name>unregisterViolationCallback</name>
        <qualifiedname>satox::security::SecurityManager::unregisterViolationCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="141" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a49d646160e2527a59add05e19d144a39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::security::SecurityManager::getLastError</definition>
        <argsstring>() const</argsstring>
        <name>getLastError</name>
        <qualifiedname>satox::security::SecurityManager::getLastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="144" column="17" bodyfile="src/security/security_manager.cpp" bodystart="481" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ace86ab09483df24baebb3abbf05d244e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::clearLastError</definition>
        <argsstring>()</argsstring>
        <name>clearLastError</name>
        <qualifiedname>satox::security::SecurityManager::clearLastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="145" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a63b68f8c2fe21d94f8069689a1b6039d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::healthCheck</definition>
        <argsstring>()</argsstring>
        <name>healthCheck</name>
        <qualifiedname>satox::security::SecurityManager::healthCheck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="148" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="349" bodyend="368"/>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a95fb4d27f1282d5eb088fbd89e98a7f8" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="370" endline="380">getHealthStatus</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a95fb4d27f1282d5eb088fbd89e98a7f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>nlohmann::json satox::security::SecurityManager::getHealthStatus</definition>
        <argsstring>()</argsstring>
        <name>getHealthStatus</name>
        <qualifiedname>satox::security::SecurityManager::getHealthStatus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="149" column="20" bodyfile="src/security/src/security_manager.cpp" bodystart="370" bodyend="380"/>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1adcde43192466003461763c5664df72fc" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="244" endline="247">getState</references>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a63b68f8c2fe21d94f8069689a1b6039d" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="349" endline="368">healthCheck</references>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aca410ec0fd030f19533a5e88f0e08728" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="249" endline="252">isInitialized</references>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a5a1b12e4922884b2aebba0b05bbfd4f0" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="254" endline="257">isRunning</references>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a310bdfb3ccb92d78c963eff5a4e50dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::generatePQCKeyPair</definition>
        <argsstring>(const std::string &amp;algorithm)</argsstring>
        <name>generatePQCKeyPair</name>
        <qualifiedname>satox::security::SecurityManager::generatePQCKeyPair</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="152" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="383" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a3219a5d246bf5d141787dd0479b3371c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::signWithPQC</definition>
        <argsstring>(const std::string &amp;algorithm, const std::string &amp;data)</argsstring>
        <name>signWithPQC</name>
        <qualifiedname>satox::security::SecurityManager::signWithPQC</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="153" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a6a1eab9aa35832b8d0f77a3aec291b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::verifyWithPQC</definition>
        <argsstring>(const std::string &amp;algorithm, const std::string &amp;data, const std::string &amp;signature)</argsstring>
        <name>verifyWithPQC</name>
        <qualifiedname>satox::security::SecurityManager::verifyWithPQC</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>signature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="154" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="393" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a133063a3bf5aee726a62453b801dd1ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::encryptWithPQC</definition>
        <argsstring>(const std::string &amp;algorithm, const std::string &amp;data)</argsstring>
        <name>encryptWithPQC</name>
        <qualifiedname>satox::security::SecurityManager::encryptWithPQC</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="155" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ad910d464f50094d0a5b12d8874133f42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::decryptWithPQC</definition>
        <argsstring>(const std::string &amp;algorithm, const std::string &amp;encryptedData)</argsstring>
        <name>decryptWithPQC</name>
        <qualifiedname>satox::security::SecurityManager::decryptWithPQC</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>encryptedData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="156" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="403" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac385b8d99612adea7ad9919f077f8a2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::validateInput</definition>
        <argsstring>(const std::string &amp;input, const std::string &amp;type)</argsstring>
        <name>validateInput</name>
        <qualifiedname>satox::security::SecurityManager::validateInput</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="159" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="409" bodyend="416"/>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a9b92726165368812f76386b0e8a1f172" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="201" endline="226">executeOperation</referencedby>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a4be71fc3f1ae9e3ab530812fee1bce22" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="438" endline="440">validateEmail</referencedby>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a84c1a1aa1436b6def7c27fbc498f411f" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="446" endline="448">validateIPAddress</referencedby>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2efebfb7d306a92e7855b8e2bcf2c896" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="442" endline="444">validateURL</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ae6dec645ce0ae0b69111655c07f26f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::sanitizeInput</definition>
        <argsstring>(const std::string &amp;input, std::string &amp;sanitized)</argsstring>
        <name>sanitizeInput</name>
        <qualifiedname>satox::security::SecurityManager::sanitizeInput</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>sanitized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="160" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="418" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a4be71fc3f1ae9e3ab530812fee1bce22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::validateEmail</definition>
        <argsstring>(const std::string &amp;email)</argsstring>
        <name>validateEmail</name>
        <qualifiedname>satox::security::SecurityManager::validateEmail</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>email</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="161" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="438" bodyend="440"/>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac385b8d99612adea7ad9919f077f8a2f" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="409" endline="416">validateInput</references>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2efebfb7d306a92e7855b8e2bcf2c896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::validateURL</definition>
        <argsstring>(const std::string &amp;url)</argsstring>
        <name>validateURL</name>
        <qualifiedname>satox::security::SecurityManager::validateURL</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="162" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="442" bodyend="444"/>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac385b8d99612adea7ad9919f077f8a2f" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="409" endline="416">validateInput</references>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a84c1a1aa1436b6def7c27fbc498f411f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::validateIPAddress</definition>
        <argsstring>(const std::string &amp;ip)</argsstring>
        <name>validateIPAddress</name>
        <qualifiedname>satox::security::SecurityManager::validateIPAddress</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="163" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="446" bodyend="448"/>
        <references refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac385b8d99612adea7ad9919f077f8a2f" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="409" endline="416">validateInput</references>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a053ea59de1a14d97f0cf1b72ad1a945c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::validateJson</definition>
        <argsstring>(const std::string &amp;json)</argsstring>
        <name>validateJson</name>
        <qualifiedname>satox::security::SecurityManager::validateJson</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="164" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="612" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aca407efef8522d55dc4773b8063e2244" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::validateToken</definition>
        <argsstring>(const std::string &amp;token)</argsstring>
        <name>validateToken</name>
        <qualifiedname>satox::security::SecurityManager::validateToken</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="165" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="630" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1afb5ae171101eb541410c5627c2a00903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::checkRateLimit</definition>
        <argsstring>(const std::string &amp;identifier, const std::string &amp;operation)</argsstring>
        <name>checkRateLimit</name>
        <qualifiedname>satox::security::SecurityManager::checkRateLimit</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="168" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="451" bodyend="463"/>
        <referencedby refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a9b92726165368812f76386b0e8a1f172" compoundref="d0/d4f/security_2src_2security__manager_8cpp" startline="201" endline="226">executeOperation</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ad9de8b2122de9dc99010a6b356bd89e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::setRateLimit</definition>
        <argsstring>(const std::string &amp;identifier, int maxRequests, int timeWindow)</argsstring>
        <name>setRateLimit</name>
        <qualifiedname>satox::security::SecurityManager::setRateLimit</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxRequests</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeWindow</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="169" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="465" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a672f9c3917ccecf3ff1f4c9b6f92ac28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::resetRateLimit</definition>
        <argsstring>(const std::string &amp;identifier)</argsstring>
        <name>resetRateLimit</name>
        <qualifiedname>satox::security::SecurityManager::resetRateLimit</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="170" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="478" bodyend="489"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a3acde86e691f94c5aea3260d09030ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::setPerformanceConfig</definition>
        <argsstring>(const nlohmann::json &amp;config)</argsstring>
        <name>setPerformanceConfig</name>
        <qualifiedname>satox::security::SecurityManager::setPerformanceConfig</qualifiedname>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="173" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="642" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a904e18fa597537465d2d62b9af7e396a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t satox::security::SecurityManager::getCacheSize</definition>
        <argsstring>() const</argsstring>
        <name>getCacheSize</name>
        <qualifiedname>satox::security::SecurityManager::getCacheSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="174" column="12" bodyfile="src/security/src/security_manager.cpp" bodystart="655" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1afc1c35f1ea9108ed603f09aa190d33cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t satox::security::SecurityManager::getConnectionPoolSize</definition>
        <argsstring>() const</argsstring>
        <name>getConnectionPoolSize</name>
        <qualifiedname>satox::security::SecurityManager::getConnectionPoolSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="175" column="12" bodyfile="src/security/src/security_manager.cpp" bodystart="666" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2d407b8823bc3d5715e886e3574fbfc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t satox::security::SecurityManager::getBatchSize</definition>
        <argsstring>() const</argsstring>
        <name>getBatchSize</name>
        <qualifiedname>satox::security::SecurityManager::getBatchSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="176" column="12" bodyfile="src/security/src/security_manager.cpp" bodystart="680" bodyend="692"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a68a1a7911a6a65fce5dec0b4acc0a1ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::security::SecurityManager::SecurityManager</definition>
        <argsstring>(const SecurityManager &amp;)=delete</argsstring>
        <name>SecurityManager</name>
        <qualifiedname>satox::security::SecurityManager::SecurityManager</qualifiedname>
        <param>
          <type>const <ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager" kindref="compound">SecurityManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="180" column="5"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ae8ed6c0ac75ff2e1b29ec80161ad5d4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager" kindref="compound">SecurityManager</ref> &amp;</type>
        <definition>SecurityManager &amp; satox::security::SecurityManager::operator=</definition>
        <argsstring>(const SecurityManager &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>satox::security::SecurityManager::operator=</qualifiedname>
        <param>
          <type>const <ref refid="dc/d9e/classsatox_1_1security_1_1SecurityManager" kindref="compound">SecurityManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="181" column="21"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aab44c97719627c8011ea54e96c4dca6b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::setLastError</definition>
        <argsstring>(const std::string &amp;error)</argsstring>
        <name>setLastError</name>
        <qualifiedname>satox::security::SecurityManager::setLastError</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="184" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="492" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a6bc2f92a631d6b7428a1c9c9790a8183" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::notifySecurityEvent</definition>
        <argsstring>(const std::string &amp;event, bool success)</argsstring>
        <name>notifySecurityEvent</name>
        <qualifiedname>satox::security::SecurityManager::notifySecurityEvent</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>success</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="185" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="497" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a7138b97aa046f2f2b06b22a6692f3a8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::notifyViolationEvent</definition>
        <argsstring>(const std::string &amp;operation, const std::string &amp;violation)</argsstring>
        <name>notifyViolationEvent</name>
        <qualifiedname>satox::security::SecurityManager::notifyViolationEvent</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>violation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="186" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="507" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a21ebdf8276bda803936abf1082500974" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::updateStats</definition>
        <argsstring>(bool success, double operationTime)</argsstring>
        <name>updateStats</name>
        <qualifiedname>satox::security::SecurityManager::updateStats</qualifiedname>
        <param>
          <type>bool</type>
          <declname>success</declname>
        </param>
        <param>
          <type>double</type>
          <declname>operationTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="187" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="517" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a963a194519655a20e3d16acef95f7de8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::validateState</definition>
        <argsstring>() const</argsstring>
        <name>validateState</name>
        <qualifiedname>satox::security::SecurityManager::validateState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="188" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="539" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ada70fbb8c2d0d598c7cced9f17ecfa9f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::logOperation</definition>
        <argsstring>(const std::string &amp;operation, bool success, double duration)</argsstring>
        <name>logOperation</name>
        <qualifiedname>satox::security::SecurityManager::logOperation</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>success</declname>
        </param>
        <param>
          <type>double</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="189" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="554" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a0e398350486e28f5ef93fd697dae735c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::security::SecurityManager::initializeComponents</definition>
        <argsstring>()</argsstring>
        <name>initializeComponents</name>
        <qualifiedname>satox::security::SecurityManager::initializeComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="190" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="568" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ab2bbad5ae77a828059491a0459c284dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::security::SecurityManager::shutdownComponents</definition>
        <argsstring>()</argsstring>
        <name>shutdownComponents</name>
        <qualifiedname>satox::security::SecurityManager::shutdownComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/security/include/satox/security/security_manager.hpp" line="191" column="10" bodyfile="src/security/src/security_manager.cpp" bodystart="595" bodyend="609"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/security/include/satox/security/security_manager.hpp" line="101" column="1" bodyfile="src/security/include/satox/security/security_manager.hpp" bodystart="101" bodyend="223"/>
    <listofallmembers>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1afb5ae171101eb541410c5627c2a00903" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>checkRateLimit</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ace86ab09483df24baebb3abbf05d244e" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>clearLastError</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a8397a96720a957605c810d2ad9f94c86" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>config_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1acff65959732e94cebd294d85cf10e980" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>consecutiveFailures_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ad910d464f50094d0a5b12d8874133f42" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>decryptWithPQC</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1abe7703bfd4ffee20dc171f683b52653e" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>enableStats</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a133063a3bf5aee726a62453b801dd1ad" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>encryptWithPQC</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a9b92726165368812f76386b0e8a1f172" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>executeOperation</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a310bdfb3ccb92d78c963eff5a4e50dac" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>generatePQCKeyPair</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2d407b8823bc3d5715e886e3574fbfc7" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>getBatchSize</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a904e18fa597537465d2d62b9af7e396a" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>getCacheSize</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a5001c162f10620ff74d950de600ab3bf" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>getConfig</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1afc1c35f1ea9108ed603f09aa190d33cd" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>getConnectionPoolSize</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a95fb4d27f1282d5eb088fbd89e98a7f8" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>getHealthStatus</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aa15090f08e4d58997a55723551b7a3f4" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>getInstance</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a49d646160e2527a59add05e19d144a39" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>getLastError</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1adcde43192466003461763c5664df72fc" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>getState</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a10c9d6811e7627258f9069e4c6d2e9d9" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>getStats</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a63b68f8c2fe21d94f8069689a1b6039d" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>healthCheck</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ae7341bc641d88f5555375fbc5e938a74" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>initialize</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a0e398350486e28f5ef93fd697dae735c" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>initializeComponents</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ab75f16562b2f4e593f88fc868b5b0586" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>initialized_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aa247a67ae683e97997f9387d20d1cd97" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>inputValidator_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a035cb38f8808679277d721f9b0ca9ddf" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>internalState_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a80cbc02dfb3afc102018601476908e5b" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>is_running_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2fd33ec6765ee706edd23979e4b88cbd" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>isHealthy</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aca410ec0fd030f19533a5e88f0e08728" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>isInitialized</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a5a1b12e4922884b2aebba0b05bbfd4f0" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>isRunning</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a924d3b3ec2ddee1e4e6601003aa1e8ff" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>lastError_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a0878c9e667bf19f127775cedd8770752" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>lastHealthCheck_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ada70fbb8c2d0d598c7cced9f17ecfa9f" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>logOperation</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a802fe42c841d2010a2bcbb4c1b14c15a" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>mutex_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a6bc2f92a631d6b7428a1c9c9790a8183" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>notifySecurityEvent</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a7138b97aa046f2f2b06b22a6692f3a8c" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>notifyViolationEvent</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ae8ed6c0ac75ff2e1b29ec80161ad5d4b" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>operator=</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a51abfe587de8619820c9f88ff2fa2b7d" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>performanceConfig_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac90a0151720d2e6f35ae52121ba4aad2" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>performOperation</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a9b1b857ae8c546cd69c2404c32ad69e4" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>rateLimiter_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a05c00b1e07e31e2e5e4c9571ddcd3dc1" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>rateLimits_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a43dd835481d7a3a5f3978fa1d3e67c19" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>registerSecurityCallback</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ad6b1f9cb19bfae1d044b4efe62e312be" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>registerViolationCallback</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a672f9c3917ccecf3ff1f4c9b6f92ac28" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>resetRateLimit</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aac1e78a28ec90bcfa6d0f92bac0bc1b8" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>resetStats</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ae6dec645ce0ae0b69111655c07f26f5a" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>sanitizeInput</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ad3abc6233f7b02d7bcfb652ba070f481" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>securityCallbacks_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a90b8c92e3c3fee633661fa2e92cd7b37" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>SecurityManager</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a68a1a7911a6a65fce5dec0b4acc0a1ff" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>SecurityManager</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aab44c97719627c8011ea54e96c4dca6b" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>setLastError</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a3acde86e691f94c5aea3260d09030ac0" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>setPerformanceConfig</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ad9de8b2122de9dc99010a6b356bd89e2" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>setRateLimit</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aee0804ae0fa9e4c4dec642324f2f9255" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>shutdown</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ab2bbad5ae77a828059491a0459c284dd" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>shutdownComponents</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a3219a5d246bf5d141787dd0479b3371c" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>signWithPQC</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a5a10fdba165e1657eb561b2d2bcc7d8c" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>start</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aaeaadfcce82367fd67fc1ff725c6bfab" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>start_time_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2e18311d640fb0144141fa1a105645ec" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>state_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a428050e38c3ee67e934e52a1f6e1c704" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>stats_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2b2b6b8df1e59b3f9dfec828719711a5" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>statsEnabled_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ab9550af1a060d4a1efd0a14d9956b894" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>stop</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1af50a81cb2d8249d9a5f77acaf493934b" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>unregisterSecurityCallback</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ada9b31659d241fe1548348d8229081b5" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>unregisterViolationCallback</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac6ad2f91859c2847c8825c73b9cc8df5" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>updateConfig</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a21ebdf8276bda803936abf1082500974" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>updateStats</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a3db98afe2c7c70fe8f1f8f62aee694e4" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>validateConfig</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a4be71fc3f1ae9e3ab530812fee1bce22" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>validateEmail</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac385b8d99612adea7ad9919f077f8a2f" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>validateInput</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a84c1a1aa1436b6def7c27fbc498f411f" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>validateIPAddress</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a053ea59de1a14d97f0cf1b72ad1a945c" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>validateJson</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1af1e4bd4e86d01d4feb010d12419da132" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>validateOperation</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a963a194519655a20e3d16acef95f7de8" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>validateState</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1aca407efef8522d55dc4773b8063e2244" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>validateToken</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a2efebfb7d306a92e7855b8e2bcf2c896" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>validateURL</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a6a1eab9aa35832b8d0f77a3aec291b3b" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>verifyWithPQC</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1ac2ee8d99d0e23bc82e335fd0b6bcf7e5" prot="private" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>violationCallbacks_</name></member>
      <member refid="dc/d9e/classsatox_1_1security_1_1SecurityManager_1a82a37a99f5179a1d2b33678f9d7c3a67" prot="public" virt="non-virtual"><scope>satox::security::SecurityManager</scope><name>~SecurityManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
