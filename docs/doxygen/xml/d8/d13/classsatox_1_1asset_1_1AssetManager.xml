<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d8/d13/classsatox_1_1asset_1_1AssetManager" kind="class" language="C++" prot="public">
    <compoundname>satox::asset::AssetManager</compoundname>
    <includes refid="d6/d64/asset_2include_2satox_2asset_2asset__manager_8hpp" local="no">asset_manager.hpp</includes>
    <innerclass refid="d1/d4e/structsatox_1_1asset_1_1AssetManager_1_1ErrorRecoveryConfig" prot="public">satox::asset::AssetManager::ErrorRecoveryConfig</innerclass>
    <innerclass refid="d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig" prot="public">satox::asset::AssetManager::PerformanceConfig</innerclass>
    <innerclass refid="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation" prot="public">satox::asset::AssetManager::RecoveryOperation</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6b993cb26df317e9777ffaaf730c4a9a" prot="public" static="no">
        <type>std::function&lt; void(const std::string &amp;, const nlohmann::json &amp;)&gt;</type>
        <definition>using satox::asset::AssetManager::AssetCallback =  std::function&lt;void(const std::string&amp;, const nlohmann::json&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>AssetCallback</name>
        <qualifiedname>satox::asset::AssetManager::AssetCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="164" column="5" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a7ff3ded15cd19e5231123793ff16717c" prot="private" static="no" mutable="yes">
        <type>std::mutex</type>
        <definition>std::mutex satox::asset::AssetManager::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <qualifiedname>satox::asset::AssetManager::mutex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="131" column="24" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5429edaec5d9bb25fe2768ee91865a9e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::initialized_</definition>
        <argsstring></argsstring>
        <name>initialized_</name>
        <qualifiedname>satox::asset::AssetManager::initialized_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="132" column="10" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aeb0027dd6417a36738cace939fef5bfe" prot="private" static="no" mutable="no">
        <type><ref refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeea" kindref="member">AssetState</ref></type>
        <definition>AssetState satox::asset::AssetManager::state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <qualifiedname>satox::asset::AssetManager::state_</qualifiedname>
        <initializer>= <ref refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaadd652546039b18970b8dcf2cff824268" kindref="member">AssetState::UNINITIALIZED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="133" column="16" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a72256327d74b56682b1fb6368bdfa911" prot="private" static="no" mutable="no">
        <type><ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig" kindref="compound">AssetConfig</ref></type>
        <definition>AssetConfig satox::asset::AssetManager::config_</definition>
        <argsstring></argsstring>
        <name>config_</name>
        <qualifiedname>satox::asset::AssetManager::config_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="134" column="17" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a448562acc30eadbeb4803a35cbc092d6" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats" kindref="compound">AssetStats</ref></type>
        <definition>AssetStats satox::asset::AssetManager::stats_</definition>
        <argsstring></argsstring>
        <name>stats_</name>
        <qualifiedname>satox::asset::AssetManager::stats_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="135" column="16" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a477fa8223e920639de3db226b788582f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::statsEnabled_</definition>
        <argsstring></argsstring>
        <name>statsEnabled_</name>
        <qualifiedname>satox::asset::AssetManager::statsEnabled_</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="136" column="10" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2e3a964e526658569494f649e047e562" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string satox::asset::AssetManager::lastError_</definition>
        <argsstring></argsstring>
        <name>lastError_</name>
        <qualifiedname>satox::asset::AssetManager::lastError_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="137" column="17" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aacdd81925e52fc3b15656778350bddde" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int satox::asset::AssetManager::consecutiveFailures_</definition>
        <argsstring></argsstring>
        <name>consecutiveFailures_</name>
        <qualifiedname>satox::asset::AssetManager::consecutiveFailures_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="138" column="9" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a397ff705d51276e926c03927b11c44a3" prot="private" static="no" mutable="no">
        <type>std::chrono::system_clock::time_point</type>
        <definition>std::chrono::system_clock::time_point satox::asset::AssetManager::lastHealthCheck_</definition>
        <argsstring></argsstring>
        <name>lastHealthCheck_</name>
        <qualifiedname>satox::asset::AssetManager::lastHealthCheck_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="139" column="43" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2ac1c16294dbd21ffc140521df8b8070" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, <ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata" kindref="compound">AssetMetadata</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, AssetMetadata&gt; satox::asset::AssetManager::assets_</definition>
        <argsstring></argsstring>
        <name>assets_</name>
        <qualifiedname>satox::asset::AssetManager::assets_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="142" column="24" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a60a72cfee07522223e7c5f372c541dc3" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::unordered_map&lt; std::string, uint64_t &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::unordered_map&lt;std::string, uint64_t&gt; &gt; satox::asset::AssetManager::balances_</definition>
        <argsstring></argsstring>
        <name>balances_</name>
        <qualifiedname>satox::asset::AssetManager::balances_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="143" column="24" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a10219b1f9a3fabb490e5648e9fa227ff" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, <ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289e" kindref="member">AssetStatus</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, AssetStatus&gt; satox::asset::AssetManager::assetStatuses_</definition>
        <argsstring></argsstring>
        <name>assetStatuses_</name>
        <qualifiedname>satox::asset::AssetManager::assetStatuses_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="144" column="24" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aadf12799589696dd17f42e7546507e57" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6b993cb26df317e9777ffaaf730c4a9a" kindref="member">AssetCallback</ref> &gt;</type>
        <definition>std::vector&lt;AssetCallback&gt; satox::asset::AssetManager::assetCallbacks_</definition>
        <argsstring></argsstring>
        <name>assetCallbacks_</name>
        <qualifiedname>satox::asset::AssetManager::assetCallbacks_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="147" column="17" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a193a4cd7b6fc702ee859c0cb0feeafce" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d5/d84/namespacesatox_1_1asset_1a12005847b6201d1a7e2d723b0e242abf" kindref="member">OperationCallback</ref> &gt;</type>
        <definition>std::vector&lt;OperationCallback&gt; satox::asset::AssetManager::operationCallbacks_</definition>
        <argsstring></argsstring>
        <name>operationCallbacks_</name>
        <qualifiedname>satox::asset::AssetManager::operationCallbacks_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="148" column="17" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a339a082c0ecaacfdbe0f5d4c09ff426d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d5/d84/namespacesatox_1_1asset_1a270927fb7a302c662b317dcb2eb7467e" kindref="member">ErrorCallback</ref> &gt;</type>
        <definition>std::vector&lt;ErrorCallback&gt; satox::asset::AssetManager::errorCallbacks_</definition>
        <argsstring></argsstring>
        <name>errorCallbacks_</name>
        <qualifiedname>satox::asset::AssetManager::errorCallbacks_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="149" column="17" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a772f49131d3afbcf8fc757c01c7b432b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string satox::asset::AssetManager::network_name_</definition>
        <argsstring></argsstring>
        <name>network_name_</name>
        <qualifiedname>satox::asset::AssetManager::network_name_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="173" column="17" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad0cc01ad7166921cd8307277c98ba85c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string satox::asset::AssetManager::last_error_</definition>
        <argsstring></argsstring>
        <name>last_error_</name>
        <qualifiedname>satox::asset::AssetManager::last_error_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="174" column="17" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a99608c551d6c60bbf8bd5473e5d7114f" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &gt;</type>
        <definition>std::map&lt;std::string, Asset&gt; satox::asset::AssetManager::assets_</definition>
        <argsstring></argsstring>
        <name>assets_</name>
        <qualifiedname>satox::asset::AssetManager::assets_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="175" column="14" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a26891645fe7befa296694e834abd87ca" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::map&lt; std::string, uint64_t &gt; &gt;</type>
        <definition>std::map&lt;std::string, std::map&lt;std::string, uint64_t&gt; &gt; satox::asset::AssetManager::balances_</definition>
        <argsstring></argsstring>
        <name>balances_</name>
        <qualifiedname>satox::asset::AssetManager::balances_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="176" column="14" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1abb06fa5a11ae820bcb04f336d27d554a" prot="private" static="no" mutable="no">
        <type><ref refid="d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig" kindref="compound">PerformanceConfig</ref></type>
        <definition>PerformanceConfig satox::asset::AssetManager::perf_config_</definition>
        <argsstring></argsstring>
        <name>perf_config_</name>
        <qualifiedname>satox::asset::AssetManager::perf_config_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="180" column="23" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9291f095f64cfaf090f0a8dae3ec1681" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::pair&lt; <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref>, std::chrono::system_clock::time_point &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::pair&lt;Asset, std::chrono::system_clock::time_point&gt; &gt; satox::asset::AssetManager::asset_cache_</definition>
        <argsstring></argsstring>
        <name>asset_cache_</name>
        <qualifiedname>satox::asset::AssetManager::asset_cache_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="181" column="24" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0ae9775316e5dc15345afa4bfe004fdd" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::unordered_set&lt; std::string &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt; &gt; satox::asset::AssetManager::owner_cache_</definition>
        <argsstring></argsstring>
        <name>owner_cache_</name>
        <qualifiedname>satox::asset::AssetManager::owner_cache_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="182" column="24" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1af87b737e052edfd0a9ba692aecc36157" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::unordered_map&lt; std::string, std::unordered_set&lt; std::string &gt; &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::unordered_map&lt;std::string, std::unordered_set&lt;std::string&gt; &gt; &gt; satox::asset::AssetManager::metadata_cache_</definition>
        <argsstring></argsstring>
        <name>metadata_cache_</name>
        <qualifiedname>satox::asset::AssetManager::metadata_cache_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="183" column="24" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aa0b684b8e2df5a23c8c7bcea8ce79fc5" prot="private" static="no" mutable="no">
        <type>std::queue&lt; std::vector&lt; <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &gt; &gt;</type>
        <definition>std::queue&lt;std::vector&lt;Asset&gt; &gt; satox::asset::AssetManager::batch_queue_</definition>
        <argsstring></argsstring>
        <name>batch_queue_</name>
        <qualifiedname>satox::asset::AssetManager::batch_queue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="184" column="16" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0c90aaedecafbe6ba54a24f28a2ad5ba" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::thread &gt;</type>
        <definition>std::vector&lt;std::thread&gt; satox::asset::AssetManager::worker_threads_</definition>
        <argsstring></argsstring>
        <name>worker_threads_</name>
        <qualifiedname>satox::asset::AssetManager::worker_threads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="185" column="17" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b8638998c864dc07e0267c285949048" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; satox::asset::AssetManager::should_stop_workers_</definition>
        <argsstring></argsstring>
        <name>should_stop_workers_</name>
        <qualifiedname>satox::asset::AssetManager::should_stop_workers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="186" column="17" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1affc711cf6d719d29a40aa9610c2ac584" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex satox::asset::AssetManager::cache_mutex_</definition>
        <argsstring></argsstring>
        <name>cache_mutex_</name>
        <qualifiedname>satox::asset::AssetManager::cache_mutex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="187" column="16" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a7d5747505e4381326d35b29148d186a7" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex satox::asset::AssetManager::batch_mutex_</definition>
        <argsstring></argsstring>
        <name>batch_mutex_</name>
        <qualifiedname>satox::asset::AssetManager::batch_mutex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="188" column="16" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1af1692b031a3193e4c80889491a33337b" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex satox::asset::AssetManager::worker_mutex_</definition>
        <argsstring></argsstring>
        <name>worker_mutex_</name>
        <qualifiedname>satox::asset::AssetManager::worker_mutex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="189" column="16" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a211f7ae5ee483580349cdb409a592c7d" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d4e/structsatox_1_1asset_1_1AssetManager_1_1ErrorRecoveryConfig" kindref="compound">ErrorRecoveryConfig</ref></type>
        <definition>ErrorRecoveryConfig satox::asset::AssetManager::recovery_config_</definition>
        <argsstring></argsstring>
        <name>recovery_config_</name>
        <qualifiedname>satox::asset::AssetManager::recovery_config_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="192" column="25" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a34343c6d1d6ea136222e48c7eafa0375" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation" kindref="compound">RecoveryOperation</ref> &gt;</type>
        <definition>std::vector&lt;RecoveryOperation&gt; satox::asset::AssetManager::recovery_history_</definition>
        <argsstring></argsstring>
        <name>recovery_history_</name>
        <qualifiedname>satox::asset::AssetManager::recovery_history_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="193" column="17" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8e5e998e6fde41dffc6c291c1eeb669f" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, <ref refid="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation" kindref="compound">RecoveryOperation</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, RecoveryOperation&gt; satox::asset::AssetManager::active_recoveries_</definition>
        <argsstring></argsstring>
        <name>active_recoveries_</name>
        <qualifiedname>satox::asset::AssetManager::active_recoveries_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="194" column="24" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0f8dab338e5e94bd9c2187a8a174bf4e" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex satox::asset::AssetManager::recovery_mutex_</definition>
        <argsstring></argsstring>
        <name>recovery_mutex_</name>
        <qualifiedname>satox::asset::AssetManager::recovery_mutex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="195" column="16" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aa724bc0ae566726a0836d5d78ced69f6" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string satox::asset::AssetManager::last_recovery_error_</definition>
        <argsstring></argsstring>
        <name>last_recovery_error_</name>
        <qualifiedname>satox::asset::AssetManager::last_recovery_error_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="196" column="17" bodyfile="src/core/include/satox/asset/asset_manager.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a16c138da27f1d66ba124a1c44a5b8808" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        <definition>AssetManager &amp; satox::asset::AssetManager::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <qualifiedname>satox::asset::AssetManager::getInstance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="44" column="25" bodyfile="src/asset/src/asset_manager.cpp" bodystart="63" bodyend="66"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="69" endline="71">AssetManager</references>
        <referencedby refid="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" compoundref="d6/de4/asset__manager__pybind_8cpp" startline="63" endline="94">PYBIND11_MODULE</referencedby>
        <referencedby refid="dd/deb/satox__sdk__c_8cpp_1aaa14fd52d8fd5cc0ca88d7decc556fc1" compoundref="dd/deb/satox__sdk__c_8cpp" startline="238" endline="245">satox_asset_manager_create</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a063fc69c28b6a0af95dd8dae76ce64b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        <definition>static AssetManager &amp; satox::asset::AssetManager::getInstance</definition>
        <argsstring>()</argsstring>
        <name>getInstance</name>
        <qualifiedname>satox::asset::AssetManager::getInstance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="62" column="25"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="69" endline="71">AssetManager</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::asset::AssetManager::AssetManager</definition>
        <argsstring>()</argsstring>
        <name>AssetManager</name>
        <qualifiedname>satox::asset::AssetManager::AssetManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="47" column="5" bodyfile="src/asset/src/asset_manager.cpp" bodystart="69" bodyend="71"/>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a2267a7ef636dfaa3109dba09ca79fca0" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="45" endline="47">satox::asset::SimpleLogger::debug</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a11a535f38ad41874a5fedd3dcb91bd12">AssetManager</referencedby>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1acd304baa321d752fe5ac8ab3f9fa874d">AssetManager</referencedby>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a063fc69c28b6a0af95dd8dae76ce64b3">getInstance</referencedby>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a64242908a44612949c8149de5942e55c">operator=</referencedby>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae0d651cc8a719bf399fdd045af0f3ff3">operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad51f1a7f60d3660a8ff4af292021f2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::asset::AssetManager::~AssetManager</definition>
        <argsstring>()</argsstring>
        <name>~AssetManager</name>
        <qualifiedname>satox::asset::AssetManager::~AssetManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="48" column="5" bodyfile="src/asset/src/asset_manager.cpp" bodystart="74" bodyend="77"/>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a2267a7ef636dfaa3109dba09ca79fca0" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="45" endline="47">satox::asset::SimpleLogger::debug</references>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b1eb94ad2739d81529ae13b4141bd12" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="137" endline="168">shutdown</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d9f0cc1e3012bc9aa17a64898f3cb05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::initialize</definition>
        <argsstring>(const AssetConfig &amp;config)</argsstring>
        <name>initialize</name>
        <qualifiedname>satox::asset::AssetManager::initialize</qualifiedname>
        <param>
          <type>const <ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig" kindref="compound">AssetConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="51" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="80" bodyend="135"/>
        <references refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1a9bf52117f5749d2e65a68d6d372c54f3" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="83">satox::asset::AssetConfig::enableLogging</references>
        <references refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaabb1ca97ec761fc37101737ba0aa2e7c5" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="55">satox::asset::ERROR</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="57" endline="59">satox::asset::SimpleLogger::error</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
        <references refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaadee5f03c2c4e73657824e028494b18c0" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="54">satox::asset::INITIALIZED</references>
        <references refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaa86bf8c89d85949f8f45cde2f73fce113" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="53">satox::asset::INITIALIZING</references>
        <references refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1a30b64dfb878772d9a0753fb9004f932e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="84">satox::asset::AssetConfig::logPath</references>
        <references refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1a920509bb616945a30b96fed54c6dc072" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="80">satox::asset::AssetConfig::name</references>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8cf00ad6cdb99e779eb246dcddd47d44" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="793" endline="795">validateConfig</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a037a74de77f35424cad251116277b44a" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="53" endline="55">satox::asset::SimpleLogger::warn</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aa15ef80128f22bbc1c04f9acf103f3de">initialize</referencedby>
        <referencedby refid="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" compoundref="d6/de4/asset__manager__pybind_8cpp" startline="63" endline="94">PYBIND11_MODULE</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b1eb94ad2739d81529ae13b4141bd12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <qualifiedname>satox::asset::AssetManager::shutdown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="52" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="137" bodyend="168"/>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="57" endline="59">satox::asset::SimpleLogger::error</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
        <references refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaab9984206799a7f9fe4bd1b6c18db8112" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="56">satox::asset::SHUTDOWN</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b1eb94ad2739d81529ae13b4141bd12">shutdown</referencedby>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad51f1a7f60d3660a8ff4af292021f2af" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="74" endline="77">~AssetManager</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a54c37c151dfaeeb9eec7f50a24ea11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::createAsset</definition>
        <argsstring>(const AssetCreationRequest &amp;request)</argsstring>
        <name>createAsset</name>
        <qualifiedname>satox::asset::AssetManager::createAsset</qualifiedname>
        <param>
          <type>const <ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest" kindref="compound">AssetCreationRequest</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="55" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="181" bodyend="269"/>
        <references refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea18ff74f43da410c5529f7d6fca84f115" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="70">satox::asset::ACTIVE</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1aee877510af7084dd8fc554f308caf01e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="160">satox::asset::AssetMetadata::additional_data</references>
        <references refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a10f446954a8ae2df7530c81b50d8ae96" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="114">satox::asset::AssetCreationRequest::amount</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1aed7446f9f8ba8a03ab4cc545aa311214" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="157">satox::asset::AssetMetadata::decimals</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a5c95a10593861a617cc70af08eb5db14" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="154">satox::asset::AssetMetadata::description</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="57" endline="59">satox::asset::SimpleLogger::error</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="166">satox::asset::AssetVerificationResult::error_message</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a672955e9d46262370a87c4ad47c2cb94" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="159">satox::asset::AssetMetadata::frozen</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a57983cf05f4a28861fa1e0c83def2631" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="155">satox::asset::AssetMetadata::issuer</references>
        <references refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a372eda169f4f86ded6abf47fc7b7821b" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="118">satox::asset::AssetCreationRequest::metadata</references>
        <references refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a8ca3902f4725bddd3c465787f320b82d" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="112">satox::asset::AssetCreationRequest::name</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a550ac87a7e53fb345097bab92412c455" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="152">satox::asset::AssetMetadata::name</references>
        <references refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1ae2bfccd2f2cbd885a5bd380e367d831b" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="117">satox::asset::AssetCreationRequest::owner_address</references>
        <references refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1a196596cc6afa5ee638dd1fde823bfc73" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="116">satox::asset::AssetCreationRequest::reissuable</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a40dd949b393496e0263a32613ace8f88" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="158">satox::asset::AssetMetadata::reissuable</references>
        <references refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1abf5f1ece4c6d5abe52aaefd1b59f60c8" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="113">satox::asset::AssetCreationRequest::symbol</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1ac44800463ba72924225a38e1d3d72613" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="153">satox::asset::AssetMetadata::symbol</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a59a69248ea36cf7703bbc5c3e50c9e20" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="156">satox::asset::AssetMetadata::total_supply</references>
        <references refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest_1acec1410d0886a0ce4b63725250379ed8" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="115">satox::asset::AssetCreationRequest::units</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae9cfeb673c92e396c07c68f97d6a524c">createAsset</referencedby>
        <referencedby refid="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" compoundref="d6/de4/asset__manager__pybind_8cpp" startline="63" endline="94">PYBIND11_MODULE</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad95c0ec540a1dc9cce084d67a9e46c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::transferAsset</definition>
        <argsstring>(const AssetTransferRequest &amp;request)</argsstring>
        <name>transferAsset</name>
        <qualifiedname>satox::asset::AssetManager::transferAsset</qualifiedname>
        <param>
          <type>const <ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest" kindref="compound">AssetTransferRequest</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="56" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="271" bodyend="338"/>
        <references refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab100278db0cfce07aa41fff671117c48" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="126">satox::asset::AssetTransferRequest::amount</references>
        <references refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="123">satox::asset::AssetTransferRequest::asset_name</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="57" endline="59">satox::asset::SimpleLogger::error</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="166">satox::asset::AssetVerificationResult::error_message</references>
        <references refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a04a38cc7e591871d4caf3bfd59fb8c07" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="124">satox::asset::AssetTransferRequest::from_address</references>
        <references refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea081912e034fd835fdda076251f2cd586" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="71">satox::asset::FROZEN</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
        <references refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a70a0263d529af325d9db1a18faa426ee" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="125">satox::asset::AssetTransferRequest::to_address</references>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af85c5ee5e782983545fb460c0c5fea4d" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="666" endline="702">validateAssetTransfer</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9a02788b41932ac948d39f31a80d850c">transferAsset</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5968767e0f5ad7d568ea8a75a1e3b84b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::reissueAsset</definition>
        <argsstring>(const AssetReissueRequest &amp;request)</argsstring>
        <name>reissueAsset</name>
        <qualifiedname>satox::asset::AssetManager::reissueAsset</qualifiedname>
        <param>
          <type>const <ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest" kindref="compound">AssetReissueRequest</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="57" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="340" bodyend="400"/>
        <references refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ad34327ee57f16622fae08f39c531d08f" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="135">satox::asset::AssetReissueRequest::amount</references>
        <references refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="133">satox::asset::AssetReissueRequest::asset_name</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="57" endline="59">satox::asset::SimpleLogger::error</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="166">satox::asset::AssetVerificationResult::error_message</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
        <references refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ac5b83ca60bdf8429a7718f595650d48c" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="134">satox::asset::AssetReissueRequest::owner_address</references>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a49fff1be6cffa366c1eefba0bcd5d850" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="704" endline="728">validateAssetReissue</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad399ca99d8cc84268b30ac3a1f0b5cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::burnAsset</definition>
        <argsstring>(const AssetBurnRequest &amp;request)</argsstring>
        <name>burnAsset</name>
        <qualifiedname>satox::asset::AssetManager::burnAsset</qualifiedname>
        <param>
          <type>const <ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest" kindref="compound">AssetBurnRequest</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="58" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="402" bodyend="461"/>
        <references refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1ab959f1c07c96e1c100645a0225b391f6" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="145">satox::asset::AssetBurnRequest::amount</references>
        <references refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a07eb9bf6a620100104900c4932f9ba92" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="143">satox::asset::AssetBurnRequest::asset_name</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1ab02a7d53d3c451df6552322123b6ed00" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="57" endline="59">satox::asset::SimpleLogger::error</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="166">satox::asset::AssetVerificationResult::error_message</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
        <references refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a59efdffafe2070289c0e0ff4ee513f8d" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="144">satox::asset::AssetBurnRequest::owner_address</references>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6288741789a79f007d3d0562cee601bd" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="730" endline="754">validateAssetBurn</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a25d908ac9e63955b444c1398a04cd579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::freezeAsset</definition>
        <argsstring>(const std::string &amp;asset_name, const std::string &amp;owner_address)</argsstring>
        <name>freezeAsset</name>
        <qualifiedname>satox::asset::AssetManager::freezeAsset</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>owner_address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="59" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="463" bodyend="483"/>
        <references refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea081912e034fd835fdda076251f2cd586" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="71">satox::asset::FROZEN</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab56602e2506677c26880a61293984219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::unfreezeAsset</definition>
        <argsstring>(const std::string &amp;asset_name, const std::string &amp;owner_address)</argsstring>
        <name>unfreezeAsset</name>
        <qualifiedname>satox::asset::AssetManager::unfreezeAsset</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>owner_address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="60" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="485" bodyend="505"/>
        <references refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea18ff74f43da410c5529f7d6fca84f115" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="70">satox::asset::ACTIVE</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad8cfe84260fe2201e5abbfce17c9e66e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::destroyAsset</definition>
        <argsstring>(const std::string &amp;asset_name, const std::string &amp;owner_address)</argsstring>
        <name>destroyAsset</name>
        <qualifiedname>satox::asset::AssetManager::destroyAsset</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>owner_address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="61" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="507" bodyend="522"/>
        <references refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea5d7e41d3ac0abca5974598807df874ea" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="72">satox::asset::DESTROYED</references>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a4b0c42b88a95f24558a8fbcbddea4c68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::getAssetMetadata</definition>
        <argsstring>(const std::string &amp;asset_name, AssetMetadata &amp;metadata) const</argsstring>
        <name>getAssetMetadata</name>
        <qualifiedname>satox::asset::AssetManager::getAssetMetadata</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <param>
          <type><ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata" kindref="compound">AssetMetadata</ref> &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="64" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="525" bodyend="539"/>
        <referencedby refid="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" compoundref="d6/de4/asset__manager__pybind_8cpp" startline="63" endline="94">PYBIND11_MODULE</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a91706abdc9aaf8e9548f1f892a3812cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::getAssetBalance</definition>
        <argsstring>(const std::string &amp;address, const std::string &amp;asset_name, uint64_t &amp;balance) const</argsstring>
        <name>getAssetBalance</name>
        <qualifiedname>satox::asset::AssetManager::getAssetBalance</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>address</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <param>
          <type>uint64_t &amp;</type>
          <declname>balance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="65" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="541" bodyend="562"/>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3fd55016def3a3bf11001dc37d1422f4">getAssetBalance</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3aab2f79b644399fdda3176c50205cc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::getAssetOwners</definition>
        <argsstring>(const std::string &amp;asset_name, std::vector&lt; std::string &gt; &amp;owners) const</argsstring>
        <name>getAssetOwners</name>
        <qualifiedname>satox::asset::AssetManager::getAssetOwners</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>owners</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="66" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="564" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a19f71573618b6fcd257f0812361f82d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::getAssetStatus</definition>
        <argsstring>(const std::string &amp;asset_name, AssetStatus &amp;status) const</argsstring>
        <name>getAssetStatus</name>
        <qualifiedname>satox::asset::AssetManager::getAssetStatus</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <param>
          <type><ref refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289e" kindref="member">AssetStatus</ref> &amp;</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="67" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="586" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1dc998c0c9bce46d5ec5db6ce9f96cc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::getAssetType</definition>
        <argsstring>(const std::string &amp;asset_name, AssetType &amp;type) const</argsstring>
        <name>getAssetType</name>
        <qualifiedname>satox::asset::AssetManager::getAssetType</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <param>
          <type><ref refid="d5/d84/namespacesatox_1_1asset_1aa4c5068043f9c46eb2120944b33b2a2c" kindref="member">AssetType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="68" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="596" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aea0f0214f59cc8c85ca3fd2d9ac595b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::verifyAsset</definition>
        <argsstring>(const std::string &amp;asset_name, AssetVerificationResult &amp;result) const</argsstring>
        <name>verifyAsset</name>
        <qualifiedname>satox::asset::AssetManager::verifyAsset</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <param>
          <type><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="71" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="613" bodyend="635"/>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a59e5c3be001f7d7c3ff44326285a6165" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="168">satox::asset::AssetVerificationResult::details</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="166">satox::asset::AssetVerificationResult::error_message</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="165">satox::asset::AssetVerificationResult::valid</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="167">satox::asset::AssetVerificationResult::warnings</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a14ace1d11be0b5b6182ef2da5981e611" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateAssetMetadata</definition>
        <argsstring>(const AssetMetadata &amp;metadata, AssetVerificationResult &amp;result) const</argsstring>
        <name>validateAssetMetadata</name>
        <qualifiedname>satox::asset::AssetManager::validateAssetMetadata</qualifiedname>
        <param>
          <type>const <ref refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata" kindref="compound">AssetMetadata</ref> &amp;</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="72" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="637" bodyend="664"/>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1aed7446f9f8ba8a03ab4cc545aa311214" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="157">satox::asset::AssetMetadata::decimals</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="166">satox::asset::AssetVerificationResult::error_message</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a57983cf05f4a28861fa1e0c83def2631" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="155">satox::asset::AssetMetadata::issuer</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a550ac87a7e53fb345097bab92412c455" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="152">satox::asset::AssetMetadata::name</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1ac44800463ba72924225a38e1d3d72613" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="153">satox::asset::AssetMetadata::symbol</references>
        <references refid="dc/d26/structsatox_1_1asset_1_1AssetMetadata_1a59a69248ea36cf7703bbc5c3e50c9e20" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="156">satox::asset::AssetMetadata::total_supply</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="165">satox::asset::AssetVerificationResult::valid</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="167">satox::asset::AssetVerificationResult::warnings</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1af85c5ee5e782983545fb460c0c5fea4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateAssetTransfer</definition>
        <argsstring>(const AssetTransferRequest &amp;request, AssetVerificationResult &amp;result) const</argsstring>
        <name>validateAssetTransfer</name>
        <qualifiedname>satox::asset::AssetManager::validateAssetTransfer</qualifiedname>
        <param>
          <type>const <ref refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest" kindref="compound">AssetTransferRequest</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="73" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="666" bodyend="702"/>
        <references refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab100278db0cfce07aa41fff671117c48" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="126">satox::asset::AssetTransferRequest::amount</references>
        <references refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1ab88e4728c2d5a6b15b5092f69ad153ce" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="123">satox::asset::AssetTransferRequest::asset_name</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="166">satox::asset::AssetVerificationResult::error_message</references>
        <references refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a04a38cc7e591871d4caf3bfd59fb8c07" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="124">satox::asset::AssetTransferRequest::from_address</references>
        <references refid="d1/dc0/structsatox_1_1asset_1_1AssetTransferRequest_1a70a0263d529af325d9db1a18faa426ee" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="125">satox::asset::AssetTransferRequest::to_address</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="165">satox::asset::AssetVerificationResult::valid</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="167">satox::asset::AssetVerificationResult::warnings</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad95c0ec540a1dc9cce084d67a9e46c9b" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="271" endline="338">transferAsset</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a49fff1be6cffa366c1eefba0bcd5d850" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateAssetReissue</definition>
        <argsstring>(const AssetReissueRequest &amp;request, AssetVerificationResult &amp;result) const</argsstring>
        <name>validateAssetReissue</name>
        <qualifiedname>satox::asset::AssetManager::validateAssetReissue</qualifiedname>
        <param>
          <type>const <ref refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest" kindref="compound">AssetReissueRequest</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="74" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="704" bodyend="728"/>
        <references refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ad34327ee57f16622fae08f39c531d08f" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="135">satox::asset::AssetReissueRequest::amount</references>
        <references refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1aed23e252156db5afefada068d1638a11" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="133">satox::asset::AssetReissueRequest::asset_name</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="166">satox::asset::AssetVerificationResult::error_message</references>
        <references refid="db/d01/structsatox_1_1asset_1_1AssetReissueRequest_1ac5b83ca60bdf8429a7718f595650d48c" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="134">satox::asset::AssetReissueRequest::owner_address</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="165">satox::asset::AssetVerificationResult::valid</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="167">satox::asset::AssetVerificationResult::warnings</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5968767e0f5ad7d568ea8a75a1e3b84b" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="340" endline="400">reissueAsset</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6288741789a79f007d3d0562cee601bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateAssetBurn</definition>
        <argsstring>(const AssetBurnRequest &amp;request, AssetVerificationResult &amp;result) const</argsstring>
        <name>validateAssetBurn</name>
        <qualifiedname>satox::asset::AssetManager::validateAssetBurn</qualifiedname>
        <param>
          <type>const <ref refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest" kindref="compound">AssetBurnRequest</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="75" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="730" bodyend="754"/>
        <references refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1ab959f1c07c96e1c100645a0225b391f6" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="145">satox::asset::AssetBurnRequest::amount</references>
        <references refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a07eb9bf6a620100104900c4932f9ba92" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="143">satox::asset::AssetBurnRequest::asset_name</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1a9133d61743b312d9f6b3482cb32aec4e" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="166">satox::asset::AssetVerificationResult::error_message</references>
        <references refid="da/d67/structsatox_1_1asset_1_1AssetBurnRequest_1a59efdffafe2070289c0e0ff4ee513f8d" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="144">satox::asset::AssetBurnRequest::owner_address</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1afbb9dab2b93f2f473830428b5d1a3d68" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="165">satox::asset::AssetVerificationResult::valid</references>
        <references refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult_1aa363ec09f5eda61347b97eac34d3d6f6" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="167">satox::asset::AssetVerificationResult::warnings</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad399ca99d8cc84268b30ac3a1f0b5cde" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="402" endline="461">burnAsset</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1e4402bd0e3b8bdab0da50191b3c8318" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeea" kindref="member">AssetState</ref></type>
        <definition>AssetState satox::asset::AssetManager::getState</definition>
        <argsstring>() const</argsstring>
        <name>getState</name>
        <qualifiedname>satox::asset::AssetManager::getState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="78" column="16" bodyfile="src/asset/src/asset_manager.cpp" bodystart="757" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a67c17d67518e2eb72f4bebaa049e48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::isInitialized</definition>
        <argsstring>() const</argsstring>
        <name>isInitialized</name>
        <qualifiedname>satox::asset::AssetManager::isInitialized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="79" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="170" bodyend="173"/>
        <referencedby refid="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" compoundref="d6/de4/asset__manager__pybind_8cpp" startline="63" endline="94">PYBIND11_MODULE</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1af552b2f014c57c0bfb08f2411ca6d976" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::isHealthy</definition>
        <argsstring>() const</argsstring>
        <name>isHealthy</name>
        <qualifiedname>satox::asset::AssetManager::isHealthy</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="80" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="762" bodyend="765"/>
        <references refid="d5/d84/namespacesatox_1_1asset_1af34bec9dc2938390418760627d80aeeaadee5f03c2c4e73657824e028494b18c0" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="54">satox::asset::INITIALIZED</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d1f379e8bb54b19467a7df947d0746b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig" kindref="compound">AssetConfig</ref></type>
        <definition>AssetConfig satox::asset::AssetManager::getConfig</definition>
        <argsstring>() const</argsstring>
        <name>getConfig</name>
        <qualifiedname>satox::asset::AssetManager::getConfig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="83" column="17" bodyfile="src/asset/src/asset_manager.cpp" bodystart="768" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ac07e42ad7a4aa3d0b95ec22acc5cd678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::updateConfig</definition>
        <argsstring>(const AssetConfig &amp;config)</argsstring>
        <name>updateConfig</name>
        <qualifiedname>satox::asset::AssetManager::updateConfig</qualifiedname>
        <param>
          <type>const <ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig" kindref="compound">AssetConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="84" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="773" bodyend="791"/>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
        <references refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1ae6cc837108026bcc1d3b141df69f0297" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="81">satox::asset::AssetConfig::maxAssets</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8cf00ad6cdb99e779eb246dcddd47d44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateConfig</definition>
        <argsstring>(const AssetConfig &amp;config) const</argsstring>
        <name>validateConfig</name>
        <qualifiedname>satox::asset::AssetManager::validateConfig</qualifiedname>
        <param>
          <type>const <ref refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig" kindref="compound">AssetConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="85" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="793" bodyend="795"/>
        <references refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1ae6cc837108026bcc1d3b141df69f0297" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="81">satox::asset::AssetConfig::maxAssets</references>
        <references refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1a920509bb616945a30b96fed54c6dc072" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="80">satox::asset::AssetConfig::name</references>
        <references refid="d4/d2d/structsatox_1_1asset_1_1AssetConfig_1ad3094f0f9568a368a6e86f28a46530ad" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="82">satox::asset::AssetConfig::timeout</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d9f0cc1e3012bc9aa17a64898f3cb05" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="80" endline="135">initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae033207fcc14daea8227befc55e8ef83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d9/d72/structsatox_1_1asset_1_1AssetStats" kindref="compound">AssetStats</ref></type>
        <definition>AssetStats satox::asset::AssetManager::getStats</definition>
        <argsstring>() const</argsstring>
        <name>getStats</name>
        <qualifiedname>satox::asset::AssetManager::getStats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="88" column="16" bodyfile="src/asset/src/asset_manager.cpp" bodystart="798" bodyend="810"/>
        <references refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea18ff74f43da410c5529f7d6fca84f115" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="70">satox::asset::ACTIVE</references>
        <references refid="d9/d72/structsatox_1_1asset_1_1AssetStats_1a8286f0f27a58b8a47f5e6b5c5f4b438f" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="93">satox::asset::AssetStats::activeAssets</references>
        <references refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea5d7e41d3ac0abca5974598807df874ea" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="72">satox::asset::DESTROYED</references>
        <references refid="d9/d72/structsatox_1_1asset_1_1AssetStats_1ab1221cb0710dd7be6f36cef10c0589c7" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="95">satox::asset::AssetStats::destroyedAssets</references>
        <references refid="d5/d84/namespacesatox_1_1asset_1a16ed6f3af7681a878181b0efed4a289ea081912e034fd835fdda076251f2cd586" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="71">satox::asset::FROZEN</references>
        <references refid="d9/d72/structsatox_1_1asset_1_1AssetStats_1a88625cab88d0b82656c8ce448f6aa9d2" compoundref="d1/d2e/asset_2include_2satox_2asset_2types_8hpp" startline="94">satox::asset::AssetStats::frozenAssets</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a686f9db186338f3393339ef0707d5a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::resetStats</definition>
        <argsstring>()</argsstring>
        <name>resetStats</name>
        <qualifiedname>satox::asset::AssetManager::resetStats</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="89" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="812" bodyend="816"/>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a50c9724b5cfcbffbe9fbfb8d69e4d403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::enableStats</definition>
        <argsstring>(bool enable)</argsstring>
        <name>enableStats</name>
        <qualifiedname>satox::asset::AssetManager::enableStats</qualifiedname>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="90" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="818" bodyend="823"/>
        <references refid="d5/d82/classsatox_1_1asset_1_1SimpleLogger_1a39e82a4439789de04eb9a1ed33219edc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="49" endline="51">satox::asset::SimpleLogger::info</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a374974caee3692db6fcf0a72db3d5733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::registerAssetCallback</definition>
        <argsstring>(AssetCallback callback)</argsstring>
        <name>registerAssetCallback</name>
        <qualifiedname>satox::asset::AssetManager::registerAssetCallback</qualifiedname>
        <param>
          <type><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6b993cb26df317e9777ffaaf730c4a9a" kindref="member">AssetCallback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="93" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="826" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a55385f1778ad632ba78cd738385c311a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::registerOperationCallback</definition>
        <argsstring>(OperationCallback callback)</argsstring>
        <name>registerOperationCallback</name>
        <qualifiedname>satox::asset::AssetManager::registerOperationCallback</qualifiedname>
        <param>
          <type><ref refid="d5/d84/namespacesatox_1_1asset_1a12005847b6201d1a7e2d723b0e242abf" kindref="member">OperationCallback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="94" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="831" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aebe86bfa3816b6205f8fd12e4a612967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::registerErrorCallback</definition>
        <argsstring>(ErrorCallback callback)</argsstring>
        <name>registerErrorCallback</name>
        <qualifiedname>satox::asset::AssetManager::registerErrorCallback</qualifiedname>
        <param>
          <type><ref refid="d5/d84/namespacesatox_1_1asset_1a270927fb7a302c662b317dcb2eb7467e" kindref="member">ErrorCallback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="95" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="836" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a55f28a0547859948c53462b54b2ed024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::unregisterAssetCallback</definition>
        <argsstring>()</argsstring>
        <name>unregisterAssetCallback</name>
        <qualifiedname>satox::asset::AssetManager::unregisterAssetCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="96" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="841" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab13e5df57eda77848370dcc1868bd29f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::unregisterOperationCallback</definition>
        <argsstring>()</argsstring>
        <name>unregisterOperationCallback</name>
        <qualifiedname>satox::asset::AssetManager::unregisterOperationCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="97" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="846" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2509cf8efb83f21afd38f2265af74fed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::unregisterErrorCallback</definition>
        <argsstring>()</argsstring>
        <name>unregisterErrorCallback</name>
        <qualifiedname>satox::asset::AssetManager::unregisterErrorCallback</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="98" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="851" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::asset::AssetManager::getLastError</definition>
        <argsstring>() const</argsstring>
        <name>getLastError</name>
        <qualifiedname>satox::asset::AssetManager::getLastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="101" column="17" bodyfile="src/asset/src/asset_manager.cpp" bodystart="175" bodyend="178"/>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b">getLastError</referencedby>
        <referencedby refid="d6/de4/asset__manager__pybind_8cpp_1a32dcbe3116851f34f83c111a3cb5283f" compoundref="d6/de4/asset__manager__pybind_8cpp" startline="63" endline="94">PYBIND11_MODULE</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ac6953177654bac3715ec37043d5014d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::clearLastError</definition>
        <argsstring>()</argsstring>
        <name>clearLastError</name>
        <qualifiedname>satox::asset::AssetManager::clearLastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="102" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="1052" bodyend="1055"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5c68268c280bfa48480cadb7a0e1bb03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::healthCheck</definition>
        <argsstring>()</argsstring>
        <name>healthCheck</name>
        <qualifiedname>satox::asset::AssetManager::healthCheck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="105" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="857" bodyend="866"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a273fb354e5c1049afb6399405a843f4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>nlohmann::json satox::asset::AssetManager::getHealthStatus</definition>
        <argsstring>()</argsstring>
        <name>getHealthStatus</name>
        <qualifiedname>satox::asset::AssetManager::getHealthStatus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="106" column="20" bodyfile="src/asset/src/asset_manager.cpp" bodystart="868" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1adb396d160596f68905afe68938bbf11f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nlohmann::json</type>
        <definition>nlohmann::json satox::asset::AssetManager::getAssetInfo</definition>
        <argsstring>(const std::string &amp;asset_name)</argsstring>
        <name>getAssetInfo</name>
        <qualifiedname>satox::asset::AssetManager::getAssetInfo</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="109" column="20" bodyfile="src/asset/src/asset_manager.cpp" bodystart="883" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8810d5507bd29e669bc7e317ffed4d71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; nlohmann::json &gt;</type>
        <definition>std::vector&lt; nlohmann::json &gt; satox::asset::AssetManager::listAssets</definition>
        <argsstring>()</argsstring>
        <name>listAssets</name>
        <qualifiedname>satox::asset::AssetManager::listAssets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="110" column="17" bodyfile="src/asset/src/asset_manager.cpp" bodystart="904" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad2d0629f69a65e66f8dcda56c3f249fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; nlohmann::json &gt;</type>
        <definition>std::vector&lt; nlohmann::json &gt; satox::asset::AssetManager::getAssetHistory</definition>
        <argsstring>(const std::string &amp;asset_name)</argsstring>
        <name>getAssetHistory</name>
        <qualifiedname>satox::asset::AssetManager::getAssetHistory</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="111" column="17" bodyfile="src/asset/src/asset_manager.cpp" bodystart="919" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a130cca06ddc0fe0e8cd65e24bc3f44fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; nlohmann::json &gt;</type>
        <definition>std::vector&lt; nlohmann::json &gt; satox::asset::AssetManager::getAssetBalances</definition>
        <argsstring>(const std::string &amp;asset_name)</argsstring>
        <name>getAssetBalances</name>
        <qualifiedname>satox::asset::AssetManager::getAssetBalances</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="112" column="17" bodyfile="src/asset/src/asset_manager.cpp" bodystart="924" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1af9c1ed53d0c1e462af2f61b3a141033b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; nlohmann::json &gt;</type>
        <definition>std::vector&lt; nlohmann::json &gt; satox::asset::AssetManager::getAssetTransactions</definition>
        <argsstring>(const std::string &amp;asset_name)</argsstring>
        <name>getAssetTransactions</name>
        <qualifiedname>satox::asset::AssetManager::getAssetTransactions</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="113" column="17" bodyfile="src/asset/src/asset_manager.cpp" bodystart="941" bodyend="944"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1acd304baa321d752fe5ac8ab3f9fa874d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::asset::AssetManager::AssetManager</definition>
        <argsstring>(const AssetManager &amp;)=delete</argsstring>
        <name>AssetManager</name>
        <qualifiedname>satox::asset::AssetManager::AssetManager</qualifiedname>
        <param>
          <type>const <ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="65" column="5"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="69" endline="71">AssetManager</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae0d651cc8a719bf399fdd045af0f3ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        <definition>AssetManager &amp; satox::asset::AssetManager::operator=</definition>
        <argsstring>(const AssetManager &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>satox::asset::AssetManager::operator=</qualifiedname>
        <param>
          <type>const <ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="66" column="18"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="69" endline="71">AssetManager</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a11a535f38ad41874a5fedd3dcb91bd12" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>satox::asset::AssetManager::AssetManager</definition>
        <argsstring>(AssetManager &amp;&amp;) noexcept=default</argsstring>
        <name>AssetManager</name>
        <qualifiedname>satox::asset::AssetManager::AssetManager</qualifiedname>
        <param>
          <type><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="69" column="5"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="69" endline="71">AssetManager</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a64242908a44612949c8149de5942e55c" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        <definition>AssetManager &amp; satox::asset::AssetManager::operator=</definition>
        <argsstring>(AssetManager &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <qualifiedname>satox::asset::AssetManager::operator=</qualifiedname>
        <param>
          <type><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="70" column="18"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="69" endline="71">AssetManager</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aa15ef80128f22bbc1c04f9acf103f3de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::initialize</definition>
        <argsstring>(const std::string &amp;network)</argsstring>
        <name>initialize</name>
        <qualifiedname>satox::asset::AssetManager::initialize</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>network</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="73" column="10"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d9f0cc1e3012bc9aa17a64898f3cb05" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="80" endline="135">initialize</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b1eb94ad2739d81529ae13b4141bd12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <qualifiedname>satox::asset::AssetManager::shutdown</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="74" column="10"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b1eb94ad2739d81529ae13b4141bd12" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="137" endline="168">shutdown</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::asset::AssetManager::getLastError</definition>
        <argsstring>() const</argsstring>
        <name>getLastError</name>
        <qualifiedname>satox::asset::AssetManager::getLastError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="75" column="17"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="175" endline="178">getLastError</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae9cfeb673c92e396c07c68f97d6a524c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::createAsset</definition>
        <argsstring>(const Asset &amp;asset)</argsstring>
        <name>createAsset</name>
        <qualifiedname>satox::asset::AssetManager::createAsset</qualifiedname>
        <param>
          <type>const <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &amp;</type>
          <declname>asset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="78" column="10"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a54c37c151dfaeeb9eec7f50a24ea11" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="181" endline="269">createAsset</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a20a0bbfd09242b23ebed1df9016a5532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::updateAsset</definition>
        <argsstring>(const std::string &amp;asset_id, const Asset &amp;asset)</argsstring>
        <name>updateAsset</name>
        <qualifiedname>satox::asset::AssetManager::updateAsset</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &amp;</type>
          <declname>asset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="79" column="10"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a20a0bbfd09242b23ebed1df9016a5532">updateAsset</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a20a0bbfd09242b23ebed1df9016a5532">updateAsset</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ada9fd9ecdbfd243eceedc9fc0a3dd198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::deleteAsset</definition>
        <argsstring>(const std::string &amp;asset_id)</argsstring>
        <name>deleteAsset</name>
        <qualifiedname>satox::asset::AssetManager::deleteAsset</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="80" column="10"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ada9fd9ecdbfd243eceedc9fc0a3dd198">deleteAsset</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ada9fd9ecdbfd243eceedc9fc0a3dd198">deleteAsset</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad2f1f04ef6da0783bc8bc5233a2ed82d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &gt;</type>
        <definition>std::optional&lt; Asset &gt; satox::asset::AssetManager::getAsset</definition>
        <argsstring>(const std::string &amp;asset_id) const</argsstring>
        <name>getAsset</name>
        <qualifiedname>satox::asset::AssetManager::getAsset</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="81" column="19"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad2f1f04ef6da0783bc8bc5233a2ed82d">getAsset</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad2f1f04ef6da0783bc8bc5233a2ed82d">getAsset</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab12e5c75714b667e64fbe510c617d676" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &gt;</type>
        <definition>std::vector&lt; Asset &gt; satox::asset::AssetManager::getAssetsByOwner</definition>
        <argsstring>(const std::string &amp;owner) const</argsstring>
        <name>getAssetsByOwner</name>
        <qualifiedname>satox::asset::AssetManager::getAssetsByOwner</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="82" column="17"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab12e5c75714b667e64fbe510c617d676">getAssetsByOwner</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab12e5c75714b667e64fbe510c617d676">getAssetsByOwner</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a58cd87b21bbf9a7546593e6b68261688" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &gt;</type>
        <definition>std::vector&lt; Asset &gt; satox::asset::AssetManager::getAllAssets</definition>
        <argsstring>() const</argsstring>
        <name>getAllAssets</name>
        <qualifiedname>satox::asset::AssetManager::getAllAssets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="83" column="17"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a58cd87b21bbf9a7546593e6b68261688">getAllAssets</references>
        <referencedby refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a58cd87b21bbf9a7546593e6b68261688">getAllAssets</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9a02788b41932ac948d39f31a80d850c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::transferAsset</definition>
        <argsstring>(const std::string &amp;asset_id, const std::string &amp;from, const std::string &amp;to, uint64_t amount)</argsstring>
        <name>transferAsset</name>
        <qualifiedname>satox::asset::AssetManager::transferAsset</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="84" column="10"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad95c0ec540a1dc9cce084d67a9e46c9b" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="271" endline="338">transferAsset</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3fd55016def3a3bf11001dc37d1422f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t satox::asset::AssetManager::getAssetBalance</definition>
        <argsstring>(const std::string &amp;asset_id, const std::string &amp;address) const</argsstring>
        <name>getAssetBalance</name>
        <qualifiedname>satox::asset::AssetManager::getAssetBalance</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="86" column="14"/>
        <references refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a91706abdc9aaf8e9548f1f892a3812cc" compoundref="d0/d1b/asset_2src_2asset__manager_8cpp" startline="541" endline="562">getAssetBalance</references>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1adf0fa46cf4bdeaf233617fa822705784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::setPerformanceConfig</definition>
        <argsstring>(const PerformanceConfig &amp;config)</argsstring>
        <name>setPerformanceConfig</name>
        <qualifiedname>satox::asset::AssetManager::setPerformanceConfig</qualifiedname>
        <param>
          <type>const <ref refid="d2/d01/structsatox_1_1asset_1_1AssetManager_1_1PerformanceConfig" kindref="compound">PerformanceConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="129" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a680a145d41ab76516666845fe6f133e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::clearCache</definition>
        <argsstring>()</argsstring>
        <name>clearCache</name>
        <qualifiedname>satox::asset::AssetManager::clearCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="130" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae48a11b36117829b5c3b23b8f008a440" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t satox::asset::AssetManager::getCacheSize</definition>
        <argsstring>() const</argsstring>
        <name>getCacheSize</name>
        <qualifiedname>satox::asset::AssetManager::getCacheSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="131" column="12"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aba10e272106765825db6711743559ca9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t satox::asset::AssetManager::getConnectionPoolSize</definition>
        <argsstring>() const</argsstring>
        <name>getConnectionPoolSize</name>
        <qualifiedname>satox::asset::AssetManager::getConnectionPoolSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="132" column="12"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae5a86d0ca20601e96e6fa4af153e7889" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t satox::asset::AssetManager::getBatchSize</definition>
        <argsstring>() const</argsstring>
        <name>getBatchSize</name>
        <qualifiedname>satox::asset::AssetManager::getBatchSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="133" column="12"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a998158ecfb145fd29a89438b3e9d8007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::processBatch</definition>
        <argsstring>(const std::vector&lt; Asset &gt; &amp;assets)</argsstring>
        <name>processBatch</name>
        <qualifiedname>satox::asset::AssetManager::processBatch</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &gt; &amp;</type>
          <declname>assets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="134" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9ad2f1094f5e094e58c01e88af99a639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::optimizeMemory</definition>
        <argsstring>()</argsstring>
        <name>optimizeMemory</name>
        <qualifiedname>satox::asset::AssetManager::optimizeMemory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="135" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a986198210e6613f19a99bf98c7faa0ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::setErrorRecoveryConfig</definition>
        <argsstring>(const ErrorRecoveryConfig &amp;config)</argsstring>
        <name>setErrorRecoveryConfig</name>
        <qualifiedname>satox::asset::AssetManager::setErrorRecoveryConfig</qualifiedname>
        <param>
          <type>const <ref refid="d1/d4e/structsatox_1_1asset_1_1AssetManager_1_1ErrorRecoveryConfig" kindref="compound">ErrorRecoveryConfig</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="138" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a83267e6cbca669b9fe3ede2ba8df16f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::recoverFromError</definition>
        <argsstring>(const std::string &amp;operation_id)</argsstring>
        <name>recoverFromError</name>
        <qualifiedname>satox::asset::AssetManager::recoverFromError</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>operation_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="139" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1b7be7166641d02c5da45c23e08936d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation" kindref="compound">RecoveryOperation</ref> &gt;</type>
        <definition>std::vector&lt; RecoveryOperation &gt; satox::asset::AssetManager::getRecoveryHistory</definition>
        <argsstring>() const</argsstring>
        <name>getRecoveryHistory</name>
        <qualifiedname>satox::asset::AssetManager::getRecoveryHistory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="140" column="17"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0e762ddbe5c1d69dd1d1566087e5eb7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::clearRecoveryHistory</definition>
        <argsstring>()</argsstring>
        <name>clearRecoveryHistory</name>
        <qualifiedname>satox::asset::AssetManager::clearRecoveryHistory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="141" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae7f727228d4d7882281ea3bb9b7dfa20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::isRecoveryInProgress</definition>
        <argsstring>() const</argsstring>
        <name>isRecoveryInProgress</name>
        <qualifiedname>satox::asset::AssetManager::isRecoveryInProgress</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="142" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a4fc2937646cee5c8c56aa6663ac6e604" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::asset::AssetManager::getLastRecoveryError</definition>
        <argsstring>() const</argsstring>
        <name>getLastRecoveryError</name>
        <qualifiedname>satox::asset::AssetManager::getLastRecoveryError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="143" column="17"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3db9644d79983e229800917f0d520843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::searchAssets</definition>
        <argsstring>(const std::string &amp;query, std::vector&lt; Asset &gt; &amp;results)</argsstring>
        <name>searchAssets</name>
        <qualifiedname>satox::asset::AssetManager::searchAssets</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &gt; &amp;</type>
          <declname>results</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="146" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1edf9fe804c7518ba78019e1b7e62939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::searchByMetadata</definition>
        <argsstring>(const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata_filters, std::vector&lt; Asset &gt; &amp;results)</argsstring>
        <name>searchByMetadata</name>
        <qualifiedname>satox::asset::AssetManager::searchByMetadata</qualifiedname>
        <param>
          <type>const std::unordered_map&lt; std::string, std::string &gt; &amp;</type>
          <declname>metadata_filters</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &gt; &amp;</type>
          <declname>results</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="147" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a7a2c0cfeac8364a650a9dc55b67c6221" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateAsset</definition>
        <argsstring>(const Asset &amp;asset) const</argsstring>
        <name>validateAsset</name>
        <qualifiedname>satox::asset::AssetManager::validateAsset</qualifiedname>
        <param>
          <type>const <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &amp;</type>
          <declname>asset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="150" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3e6f49aa95281fd2ec45c6007294956a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateAssetName</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>validateAssetName</name>
        <qualifiedname>satox::asset::AssetManager::validateAssetName</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="151" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a7532a49061362384cfa4b845c077b755" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateMetadata</definition>
        <argsstring>(const std::unordered_map&lt; std::string, std::string &gt; &amp;metadata) const</argsstring>
        <name>validateMetadata</name>
        <qualifiedname>satox::asset::AssetManager::validateMetadata</qualifiedname>
        <param>
          <type>const std::unordered_map&lt; std::string, std::string &gt; &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="152" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab6b984cb05a31b783b6532d10e85cd29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::setAssetPermissions</definition>
        <argsstring>(const std::string &amp;asset_id, const std::unordered_map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;permissions)</argsstring>
        <name>setAssetPermissions</name>
        <qualifiedname>satox::asset::AssetManager::setAssetPermissions</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;</type>
          <declname>permissions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="155" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b64936f979d12e66601b9379a9ed41a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::getAssetPermissions</definition>
        <argsstring>(const std::string &amp;asset_id, std::unordered_map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;permissions) const</argsstring>
        <name>getAssetPermissions</name>
        <qualifiedname>satox::asset::AssetManager::getAssetPermissions</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;</type>
          <declname>permissions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="156" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a268303211208f1ee716d2d11ac43ea32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::checkAssetPermission</definition>
        <argsstring>(const std::string &amp;asset_id, const std::string &amp;address, const std::string &amp;permission) const</argsstring>
        <name>checkAssetPermission</name>
        <qualifiedname>satox::asset::AssetManager::checkAssetPermission</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>address</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>permission</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="157" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1991b50d0b81ea3494e4daf60f941b4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::getAssetHistory</definition>
        <argsstring>(const std::string &amp;asset_id, std::vector&lt; nlohmann::json &gt; &amp;history) const</argsstring>
        <name>getAssetHistory</name>
        <qualifiedname>satox::asset::AssetManager::getAssetHistory</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>std::vector&lt; nlohmann::json &gt; &amp;</type>
          <declname>history</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="160" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a00f1db7edbbd9a3653e8c86904bb07ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::addAssetHistory</definition>
        <argsstring>(const std::string &amp;asset_id, const nlohmann::json &amp;event)</argsstring>
        <name>addAssetHistory</name>
        <qualifiedname>satox::asset::AssetManager::addAssetHistory</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="161" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a374974caee3692db6fcf0a72db3d5733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::registerAssetCallback</definition>
        <argsstring>(AssetCallback callback)</argsstring>
        <name>registerAssetCallback</name>
        <qualifiedname>satox::asset::AssetManager::registerAssetCallback</qualifiedname>
        <param>
          <type><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6b993cb26df317e9777ffaaf730c4a9a" kindref="member">AssetCallback</ref></type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="165" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1acd304baa321d752fe5ac8ab3f9fa874d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::asset::AssetManager::AssetManager</definition>
        <argsstring>(const AssetManager &amp;)=delete</argsstring>
        <name>AssetManager</name>
        <qualifiedname>satox::asset::AssetManager::AssetManager</qualifiedname>
        <param>
          <type>const <ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="117" column="5"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae0d651cc8a719bf399fdd045af0f3ff3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        <definition>AssetManager &amp; satox::asset::AssetManager::operator=</definition>
        <argsstring>(const AssetManager &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>satox::asset::AssetManager::operator=</qualifiedname>
        <param>
          <type>const <ref refid="d8/d13/classsatox_1_1asset_1_1AssetManager" kindref="compound">AssetManager</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="118" column="18"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae72b09ed203113072a5d35180653bd90" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::setLastError</definition>
        <argsstring>(const std::string &amp;error)</argsstring>
        <name>setLastError</name>
        <qualifiedname>satox::asset::AssetManager::setLastError</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="121" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="985" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad9cbf5aff92d19ef4a11575dc148a3c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::notifyAssetEvent</definition>
        <argsstring>(const std::string &amp;event, bool success)</argsstring>
        <name>notifyAssetEvent</name>
        <qualifiedname>satox::asset::AssetManager::notifyAssetEvent</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>success</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="122" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="990" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d43b515bd683c27c8bc9cc50e8a8d88" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::notifyOperationEvent</definition>
        <argsstring>(const AssetResult &amp;result)</argsstring>
        <name>notifyOperationEvent</name>
        <qualifiedname>satox::asset::AssetManager::notifyOperationEvent</qualifiedname>
        <param>
          <type>const <ref refid="d1/dcb/structsatox_1_1asset_1_1AssetResult" kindref="compound">AssetResult</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="123" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="1000" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a966f7b5d3a0a1e2820b8e81bad67e09f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::notifyErrorEvent</definition>
        <argsstring>(const std::string &amp;operation, const std::string &amp;error)</argsstring>
        <name>notifyErrorEvent</name>
        <qualifiedname>satox::asset::AssetManager::notifyErrorEvent</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="124" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="1010" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a507f58cbbd774b5fc3dd0e91077eb88e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::updateStats</definition>
        <argsstring>(bool success, double operationTime)</argsstring>
        <name>updateStats</name>
        <qualifiedname>satox::asset::AssetManager::updateStats</qualifiedname>
        <param>
          <type>bool</type>
          <declname>success</declname>
        </param>
        <param>
          <type>double</type>
          <declname>operationTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="125" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="1020" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3bb66a14b048e0f298b1c7d07eeb26a7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateState</definition>
        <argsstring>() const</argsstring>
        <name>validateState</name>
        <qualifiedname>satox::asset::AssetManager::validateState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="126" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="1042" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8c598abbd09fcec605db3e49a419c212" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::logOperation</definition>
        <argsstring>(const std::string &amp;operation, bool success, double duration)</argsstring>
        <name>logOperation</name>
        <qualifiedname>satox::asset::AssetManager::logOperation</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>success</declname>
        </param>
        <param>
          <type>double</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="127" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="1046" bodyend="1050"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad69561ec350941beb31fc79d8caabe85" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateAssetCreationRequest</definition>
        <argsstring>(const AssetCreationRequest &amp;request, AssetVerificationResult &amp;result) const</argsstring>
        <name>validateAssetCreationRequest</name>
        <qualifiedname>satox::asset::AssetManager::validateAssetCreationRequest</qualifiedname>
        <param>
          <type>const <ref refid="d6/d19/structsatox_1_1asset_1_1AssetCreationRequest" kindref="compound">AssetCreationRequest</ref> &amp;</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="dc/d8b/structsatox_1_1asset_1_1AssetVerificationResult" kindref="compound">AssetVerificationResult</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/asset/include/satox/asset/asset_manager.hpp" line="128" column="10" bodyfile="src/asset/src/asset_manager.cpp" bodystart="947" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::asset::AssetManager::AssetManager</definition>
        <argsstring>()</argsstring>
        <name>AssetManager</name>
        <qualifiedname>satox::asset::AssetManager::AssetManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="168" column="5"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad51f1a7f60d3660a8ff4af292021f2af" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>satox::asset::AssetManager::~AssetManager</definition>
        <argsstring>()</argsstring>
        <name>~AssetManager</name>
        <qualifiedname>satox::asset::AssetManager::~AssetManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="169" column="5"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aa70deaf0b052dddf41acf8d7edc40079" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::cleanup</definition>
        <argsstring>()</argsstring>
        <name>cleanup</name>
        <qualifiedname>satox::asset::AssetManager::cleanup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="199" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad5ebf8153ea22c754a8e0ba2892e5ac1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::asset::AssetManager::generateAssetId</definition>
        <argsstring>(const Asset &amp;asset)</argsstring>
        <name>generateAssetId</name>
        <qualifiedname>satox::asset::AssetManager::generateAssetId</qualifiedname>
        <param>
          <type>const <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &amp;</type>
          <declname>asset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="200" column="17"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab4408215566f0fc8f9920063645dbde0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateAsset</definition>
        <argsstring>(const Asset &amp;asset)</argsstring>
        <name>validateAsset</name>
        <qualifiedname>satox::asset::AssetManager::validateAsset</qualifiedname>
        <param>
          <type>const <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &amp;</type>
          <declname>asset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="201" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1abf9bc97d3e47bd3296c4c69a1e9aa9d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::startWorkers</definition>
        <argsstring>()</argsstring>
        <name>startWorkers</name>
        <qualifiedname>satox::asset::AssetManager::startWorkers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="204" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5b0a9281c380551a5d0ff5eec2c27548" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::stopWorkers</definition>
        <argsstring>()</argsstring>
        <name>stopWorkers</name>
        <qualifiedname>satox::asset::AssetManager::stopWorkers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="205" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0d9d113c40a25c2daf4eb469706adfe7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::workerFunction</definition>
        <argsstring>()</argsstring>
        <name>workerFunction</name>
        <qualifiedname>satox::asset::AssetManager::workerFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="206" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9c6eed5bfad11285326c059a51432e04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::addTask</definition>
        <argsstring>(const std::function&lt; void()&gt; &amp;task)</argsstring>
        <name>addTask</name>
        <qualifiedname>satox::asset::AssetManager::addTask</qualifiedname>
        <param>
          <type>const std::function&lt; void()&gt; &amp;</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="207" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1e9e87ea108e21579432da59d1174824" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::processTaskQueue</definition>
        <argsstring>()</argsstring>
        <name>processTaskQueue</name>
        <qualifiedname>satox::asset::AssetManager::processTaskQueue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="208" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0e389e8ac2fd3fea26dc0fec20579abf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::updateCache</definition>
        <argsstring>(const std::string &amp;asset_id, const Asset &amp;asset)</argsstring>
        <name>updateCache</name>
        <qualifiedname>satox::asset::AssetManager::updateCache</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>asset_id</declname>
        </param>
        <param>
          <type>const <ref refid="d2/d72/structsatox_1_1asset_1_1Asset" kindref="compound">Asset</ref> &amp;</type>
          <declname>asset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="209" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a21345fe4e683f343e8e0c9139edfd879" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::cleanupCache</definition>
        <argsstring>()</argsstring>
        <name>cleanupCache</name>
        <qualifiedname>satox::asset::AssetManager::cleanupCache</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="210" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3cdcd64ecd6b2bee263c9068ce06c367" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::cleanupConnections</definition>
        <argsstring>()</argsstring>
        <name>cleanupConnections</name>
        <qualifiedname>satox::asset::AssetManager::cleanupConnections</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="211" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1aad2501e7fdf4e2feb60587cf0d8b4d66" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::processBatchQueue</definition>
        <argsstring>()</argsstring>
        <name>processBatchQueue</name>
        <qualifiedname>satox::asset::AssetManager::processBatchQueue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="212" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a34afc852f365ac71f7edae167f2d89ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::optimizeMemoryUsage</definition>
        <argsstring>()</argsstring>
        <name>optimizeMemoryUsage</name>
        <qualifiedname>satox::asset::AssetManager::optimizeMemoryUsage</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="213" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a869bd66eb70b2736748320593ade0076" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::attemptRecovery</definition>
        <argsstring>(const RecoveryOperation &amp;operation)</argsstring>
        <name>attemptRecovery</name>
        <qualifiedname>satox::asset::AssetManager::attemptRecovery</qualifiedname>
        <param>
          <type>const <ref refid="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation" kindref="compound">RecoveryOperation</ref> &amp;</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="216" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a7d27b8aa90b5aebd5cab69872fb76528" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::logRecoveryAttempt</definition>
        <argsstring>(const RecoveryOperation &amp;operation, bool success)</argsstring>
        <name>logRecoveryAttempt</name>
        <qualifiedname>satox::asset::AssetManager::logRecoveryAttempt</qualifiedname>
        <param>
          <type>const <ref refid="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation" kindref="compound">RecoveryOperation</ref> &amp;</type>
          <declname>operation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>success</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="217" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a60b48601739044bef3aaf411891a72ff" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::validateRecoveryContext</definition>
        <argsstring>(const RecoveryOperation &amp;operation)</argsstring>
        <name>validateRecoveryContext</name>
        <qualifiedname>satox::asset::AssetManager::validateRecoveryContext</qualifiedname>
        <param>
          <type>const <ref refid="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation" kindref="compound">RecoveryOperation</ref> &amp;</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="218" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a50f61ac1be2da6da8bbb4d3b432a894f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void satox::asset::AssetManager::cleanupRecoveryOperation</definition>
        <argsstring>(const std::string &amp;operation_id)</argsstring>
        <name>cleanupRecoveryOperation</name>
        <qualifiedname>satox::asset::AssetManager::cleanupRecoveryOperation</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>operation_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="219" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8b4b6c802a9acf41f40964210cbcfda5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::asset::AssetManager::isRecoveryAllowed</definition>
        <argsstring>(const RecoveryOperation &amp;operation)</argsstring>
        <name>isRecoveryAllowed</name>
        <qualifiedname>satox::asset::AssetManager::isRecoveryAllowed</qualifiedname>
        <param>
          <type>const <ref refid="df/d40/structsatox_1_1asset_1_1AssetManager_1_1RecoveryOperation" kindref="compound">RecoveryOperation</ref> &amp;</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="220" column="10"/>
      </memberdef>
      <memberdef kind="function" id="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6f64c9bc9a0f3d8a0b1376c3e6ec777a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::asset::AssetManager::generateRecoveryId</definition>
        <argsstring>()</argsstring>
        <name>generateRecoveryId</name>
        <qualifiedname>satox::asset::AssetManager::generateRecoveryId</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/asset/asset_manager.hpp" line="221" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/asset/include/satox/asset/asset_manager.hpp" line="41" column="1" bodyfile="src/asset/include/satox/asset/asset_manager.hpp" bodystart="41" bodyend="150"/>
    <listofallmembers>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8e5e998e6fde41dffc6c291c1eeb669f" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>active_recoveries_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a00f1db7edbbd9a3653e8c86904bb07ed" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>addAssetHistory</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9c6eed5bfad11285326c059a51432e04" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>addTask</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9291f095f64cfaf090f0a8dae3ec1681" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>asset_cache_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6b993cb26df317e9777ffaaf730c4a9a" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>AssetCallback</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aadf12799589696dd17f42e7546507e57" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>assetCallbacks_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>AssetManager</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1acd304baa321d752fe5ac8ab3f9fa874d" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>AssetManager</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1acd304baa321d752fe5ac8ab3f9fa874d" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>AssetManager</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a11a535f38ad41874a5fedd3dcb91bd12" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>AssetManager</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a65eb2d46efa850b60e9f24254cd36923" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>AssetManager</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2ac1c16294dbd21ffc140521df8b8070" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>assets_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a99608c551d6c60bbf8bd5473e5d7114f" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>assets_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a10219b1f9a3fabb490e5648e9fa227ff" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>assetStatuses_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a869bd66eb70b2736748320593ade0076" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>attemptRecovery</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a60a72cfee07522223e7c5f372c541dc3" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>balances_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a26891645fe7befa296694e834abd87ca" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>balances_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a7d5747505e4381326d35b29148d186a7" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>batch_mutex_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aa0b684b8e2df5a23c8c7bcea8ce79fc5" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>batch_queue_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad399ca99d8cc84268b30ac3a1f0b5cde" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>burnAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1affc711cf6d719d29a40aa9610c2ac584" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>cache_mutex_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a268303211208f1ee716d2d11ac43ea32" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>checkAssetPermission</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aa70deaf0b052dddf41acf8d7edc40079" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>cleanup</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a21345fe4e683f343e8e0c9139edfd879" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>cleanupCache</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3cdcd64ecd6b2bee263c9068ce06c367" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>cleanupConnections</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a50f61ac1be2da6da8bbb4d3b432a894f" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>cleanupRecoveryOperation</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a680a145d41ab76516666845fe6f133e9" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>clearCache</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ac6953177654bac3715ec37043d5014d6" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>clearLastError</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0e762ddbe5c1d69dd1d1566087e5eb7f" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>clearRecoveryHistory</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a72256327d74b56682b1fb6368bdfa911" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>config_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aacdd81925e52fc3b15656778350bddde" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>consecutiveFailures_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a54c37c151dfaeeb9eec7f50a24ea11" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>createAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae9cfeb673c92e396c07c68f97d6a524c" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>createAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ada9fd9ecdbfd243eceedc9fc0a3dd198" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>deleteAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad8cfe84260fe2201e5abbfce17c9e66e" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>destroyAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a50c9724b5cfcbffbe9fbfb8d69e4d403" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>enableStats</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a339a082c0ecaacfdbe0f5d4c09ff426d" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>errorCallbacks_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a25d908ac9e63955b444c1398a04cd579" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>freezeAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad5ebf8153ea22c754a8e0ba2892e5ac1" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>generateAssetId</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6f64c9bc9a0f3d8a0b1376c3e6ec777a" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>generateRecoveryId</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a58cd87b21bbf9a7546593e6b68261688" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAllAssets</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad2f1f04ef6da0783bc8bc5233a2ed82d" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a91706abdc9aaf8e9548f1f892a3812cc" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetBalance</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3fd55016def3a3bf11001dc37d1422f4" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetBalance</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a130cca06ddc0fe0e8cd65e24bc3f44fc" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetBalances</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad2d0629f69a65e66f8dcda56c3f249fd" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetHistory</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1991b50d0b81ea3494e4daf60f941b4c" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetHistory</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1adb396d160596f68905afe68938bbf11f" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetInfo</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a4b0c42b88a95f24558a8fbcbddea4c68" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetMetadata</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3aab2f79b644399fdda3176c50205cc7" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetOwners</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b64936f979d12e66601b9379a9ed41a" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetPermissions</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab12e5c75714b667e64fbe510c617d676" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetsByOwner</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a19f71573618b6fcd257f0812361f82d2" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetStatus</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af9c1ed53d0c1e462af2f61b3a141033b" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetTransactions</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1dc998c0c9bce46d5ec5db6ce9f96cc5" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getAssetType</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae5a86d0ca20601e96e6fa4af153e7889" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getBatchSize</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae48a11b36117829b5c3b23b8f008a440" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getCacheSize</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d1f379e8bb54b19467a7df947d0746b" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getConfig</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aba10e272106765825db6711743559ca9" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getConnectionPoolSize</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a273fb354e5c1049afb6399405a843f4f" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getHealthStatus</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a16c138da27f1d66ba124a1c44a5b8808" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getInstance</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a063fc69c28b6a0af95dd8dae76ce64b3" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getInstance</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getLastError</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a06f4d96ab122326ae3538b2ba5db863b" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getLastError</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a4fc2937646cee5c8c56aa6663ac6e604" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getLastRecoveryError</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1b7be7166641d02c5da45c23e08936d0" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getRecoveryHistory</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1e4402bd0e3b8bdab0da50191b3c8318" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getState</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae033207fcc14daea8227befc55e8ef83" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>getStats</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5c68268c280bfa48480cadb7a0e1bb03" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>healthCheck</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d9f0cc1e3012bc9aa17a64898f3cb05" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>initialize</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aa15ef80128f22bbc1c04f9acf103f3de" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>initialize</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5429edaec5d9bb25fe2768ee91865a9e" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>initialized_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af552b2f014c57c0bfb08f2411ca6d976" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>isHealthy</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2a67c17d67518e2eb72f4bebaa049e48" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>isInitialized</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8b4b6c802a9acf41f40964210cbcfda5" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>isRecoveryAllowed</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae7f727228d4d7882281ea3bb9b7dfa20" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>isRecoveryInProgress</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad0cc01ad7166921cd8307277c98ba85c" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>last_error_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aa724bc0ae566726a0836d5d78ced69f6" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>last_recovery_error_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2e3a964e526658569494f649e047e562" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>lastError_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a397ff705d51276e926c03927b11c44a3" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>lastHealthCheck_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8810d5507bd29e669bc7e317ffed4d71" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>listAssets</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8c598abbd09fcec605db3e49a419c212" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>logOperation</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a7d27b8aa90b5aebd5cab69872fb76528" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>logRecoveryAttempt</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af87b737e052edfd0a9ba692aecc36157" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>metadata_cache_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a7ff3ded15cd19e5231123793ff16717c" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>mutex_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a772f49131d3afbcf8fc757c01c7b432b" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>network_name_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad9cbf5aff92d19ef4a11575dc148a3c8" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>notifyAssetEvent</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a966f7b5d3a0a1e2820b8e81bad67e09f" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>notifyErrorEvent</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8d43b515bd683c27c8bc9cc50e8a8d88" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>notifyOperationEvent</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a193a4cd7b6fc702ee859c0cb0feeafce" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>operationCallbacks_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae0d651cc8a719bf399fdd045af0f3ff3" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>operator=</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae0d651cc8a719bf399fdd045af0f3ff3" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>operator=</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a64242908a44612949c8149de5942e55c" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>operator=</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9ad2f1094f5e094e58c01e88af99a639" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>optimizeMemory</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a34afc852f365ac71f7edae167f2d89ef" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>optimizeMemoryUsage</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0ae9775316e5dc15345afa4bfe004fdd" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>owner_cache_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1abb06fa5a11ae820bcb04f336d27d554a" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>perf_config_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a998158ecfb145fd29a89438b3e9d8007" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>processBatch</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aad2501e7fdf4e2feb60587cf0d8b4d66" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>processBatchQueue</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1e9e87ea108e21579432da59d1174824" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>processTaskQueue</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a83267e6cbca669b9fe3ede2ba8df16f9" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>recoverFromError</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a211f7ae5ee483580349cdb409a592c7d" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>recovery_config_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a34343c6d1d6ea136222e48c7eafa0375" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>recovery_history_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0f8dab338e5e94bd9c2187a8a174bf4e" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>recovery_mutex_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a374974caee3692db6fcf0a72db3d5733" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>registerAssetCallback</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a374974caee3692db6fcf0a72db3d5733" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>registerAssetCallback</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aebe86bfa3816b6205f8fd12e4a612967" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>registerErrorCallback</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a55385f1778ad632ba78cd738385c311a" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>registerOperationCallback</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5968767e0f5ad7d568ea8a75a1e3b84b" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>reissueAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a686f9db186338f3393339ef0707d5a92" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>resetStats</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3db9644d79983e229800917f0d520843" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>searchAssets</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a1edf9fe804c7518ba78019e1b7e62939" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>searchByMetadata</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab6b984cb05a31b783b6532d10e85cd29" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>setAssetPermissions</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a986198210e6613f19a99bf98c7faa0ad" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>setErrorRecoveryConfig</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ae72b09ed203113072a5d35180653bd90" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>setLastError</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1adf0fa46cf4bdeaf233617fa822705784" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>setPerformanceConfig</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b8638998c864dc07e0267c285949048" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>should_stop_workers_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b1eb94ad2739d81529ae13b4141bd12" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>shutdown</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9b1eb94ad2739d81529ae13b4141bd12" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>shutdown</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1abf9bc97d3e47bd3296c4c69a1e9aa9d5" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>startWorkers</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aeb0027dd6417a36738cace939fef5bfe" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>state_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a448562acc30eadbeb4803a35cbc092d6" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>stats_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a477fa8223e920639de3db226b788582f" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>statsEnabled_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a5b0a9281c380551a5d0ff5eec2c27548" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>stopWorkers</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad95c0ec540a1dc9cce084d67a9e46c9b" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>transferAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a9a02788b41932ac948d39f31a80d850c" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>transferAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab56602e2506677c26880a61293984219" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>unfreezeAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a55f28a0547859948c53462b54b2ed024" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>unregisterAssetCallback</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a2509cf8efb83f21afd38f2265af74fed" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>unregisterErrorCallback</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab13e5df57eda77848370dcc1868bd29f" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>unregisterOperationCallback</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a20a0bbfd09242b23ebed1df9016a5532" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>updateAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0e389e8ac2fd3fea26dc0fec20579abf" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>updateCache</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ac07e42ad7a4aa3d0b95ec22acc5cd678" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>updateConfig</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a507f58cbbd774b5fc3dd0e91077eb88e" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>updateStats</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a7a2c0cfeac8364a650a9dc55b67c6221" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ab4408215566f0fc8f9920063645dbde0" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a6288741789a79f007d3d0562cee601bd" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateAssetBurn</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad69561ec350941beb31fc79d8caabe85" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateAssetCreationRequest</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a14ace1d11be0b5b6182ef2da5981e611" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateAssetMetadata</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3e6f49aa95281fd2ec45c6007294956a" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateAssetName</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a49fff1be6cffa366c1eefba0bcd5d850" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateAssetReissue</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af85c5ee5e782983545fb460c0c5fea4d" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateAssetTransfer</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a8cf00ad6cdb99e779eb246dcddd47d44" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateConfig</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a7532a49061362384cfa4b845c077b755" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateMetadata</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a60b48601739044bef3aaf411891a72ff" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateRecoveryContext</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a3bb66a14b048e0f298b1c7d07eeb26a7" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>validateState</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1aea0f0214f59cc8c85ca3fd2d9ac595b9" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>verifyAsset</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1af1692b031a3193e4c80889491a33337b" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>worker_mutex_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0c90aaedecafbe6ba54a24f28a2ad5ba" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>worker_threads_</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1a0d9d113c40a25c2daf4eb469706adfe7" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>workerFunction</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad51f1a7f60d3660a8ff4af292021f2af" prot="public" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>~AssetManager</name></member>
      <member refid="d8/d13/classsatox_1_1asset_1_1AssetManager_1ad51f1a7f60d3660a8ff4af292021f2af" prot="private" virt="non-virtual"><scope>satox::asset::AssetManager</scope><name>~AssetManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
