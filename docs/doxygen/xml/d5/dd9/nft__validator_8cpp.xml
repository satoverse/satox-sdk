<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d5/dd9/nft__validator_8cpp" kind="file" language="C++">
    <compoundname>nft_validator.cpp</compoundname>
    <includes refid="d6/dc5/nft__validator_8hpp" local="yes">satox/nft/nft_validator.hpp</includes>
    <includes local="no">regex</includes>
    <includes local="no">chrono</includes>
    <includes local="no">algorithm</includes>
    <incdepgraph>
      <node id="3">
        <label>satox/nft/nft_manager.hpp</label>
        <link refid="de/d30/nft_2include_2satox_2nft_2nft__manager_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>satox/nft/nft_validator.hpp</label>
        <link refid="d6/dc5/nft__validator_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/nft/src/nft_validator.cpp</label>
        <link refid="d5/dd9/nft__validator_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>algorithm</label>
      </node>
      <node id="14">
        <label>atomic</label>
      </node>
      <node id="12">
        <label>chrono</label>
      </node>
      <node id="16">
        <label>condition_variable</label>
      </node>
      <node id="11">
        <label>functional</label>
      </node>
      <node id="8">
        <label>map</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="7">
        <label>mutex</label>
      </node>
      <node id="10">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="17">
        <label>regex</label>
      </node>
      <node id="13">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="15">
        <label>thread</label>
      </node>
      <node id="9">
        <label>unordered_map</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="df/daa/namespacesatox">satox</innernamespace>
    <innernamespace refid="dc/dd7/namespacesatox_1_1nft">satox::nft</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/dc5/nft__validator_8hpp" kindref="compound">satox/nft/nft_validator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;regex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="df/daa/namespacesatox" kindref="compound">satox</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a018c9d4f00f271fac79d5998c62872fd" refkind="member"><highlight class="normal"><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a47b233c582720a9b071bb25b773c7c4e" kindref="member">NFTValidator</ref>&amp;<sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a018c9d4f00f271fac79d5998c62872fd" kindref="member">NFTValidator::getInstance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a47b233c582720a9b071bb25b773c7c4e" kindref="member">NFTValidator</ref><sp/>instance;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a899fe2fa840b45ad7b1419aa46e25c65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a899fe2fa840b45ad7b1419aa46e25c65" kindref="member">NFTValidator::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initialized_)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>default<sp/>validation<sp/>rules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>validationRules_[</highlight><highlight class="stringliteral">&quot;required_fields&quot;</highlight><highlight class="normal">]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT" kindref="compound">NFTManager::NFT</ref>&amp;<sp/><ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>validateRequiredFields(<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>validationRules_[</highlight><highlight class="stringliteral">&quot;metadata_fields&quot;</highlight><highlight class="normal">]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT" kindref="compound">NFTManager::NFT</ref>&amp;<sp/><ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>validateMetadataFields(<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>.metadata);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>validationRules_[</highlight><highlight class="stringliteral">&quot;contract_address&quot;</highlight><highlight class="normal">]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT" kindref="compound">NFTManager::NFT</ref>&amp;<sp/><ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>validateContractAddress(<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>.contractAddress);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>validationRules_[</highlight><highlight class="stringliteral">&quot;token_uri&quot;</highlight><highlight class="normal">]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT" kindref="compound">NFTManager::NFT</ref>&amp;<sp/><ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>validateTokenURI(<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>.tokenURI);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>validationRules_[</highlight><highlight class="stringliteral">&quot;timestamp&quot;</highlight><highlight class="normal">]<sp/>=<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT" kindref="compound">NFTManager::NFT</ref>&amp;<sp/><ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>validateTimestamp(<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>.createdAt);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>initialized_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1abc1ccfe13fe80494728f2f6b33e6b8f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1abc1ccfe13fe80494728f2f6b33e6b8f6" kindref="member">NFTValidator::shutdown</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>validationRules_.clear();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>initialized_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a6ee0a5f8b8a39717aafdd2e8c16cba72" refkind="member"><highlight class="normal"><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">NFTValidator::ValidationResult</ref><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a6ee0a5f8b8a39717aafdd2e8c16cba72" kindref="member">NFTValidator::validateNFT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT" kindref="compound">NFTManager::NFT</ref>&amp;<sp/><ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">ValidationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NFT<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>all<sp/>validation<sp/>rules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[ruleName,<sp/>rule]<sp/>:<sp/>validationRules_)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rule(<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>))<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Validation<sp/>rule<sp/>&apos;&quot;</highlight><highlight class="normal"><sp/>+<sp/>ruleName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NFT<sp/>validation<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a4617ed707b666e925a5be22d5367482c" refkind="member"><highlight class="normal"><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">NFTValidator::ValidationResult</ref><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a4617ed707b666e925a5be22d5367482c" kindref="member">NFTValidator::validateNFTMetadata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/d3f/structsatox_1_1nft_1_1NFTManager_1_1NFTMetadata" kindref="compound">NFTManager::NFTMetadata</ref>&amp;<sp/>metadata)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">ValidationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Metadata<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validateMetadataFields(metadata))<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Metadata<sp/>validation<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>metadata<sp/>fields&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1adb1c1cc56fc361acd89538ab9a919068" refkind="member"><highlight class="normal"><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">NFTValidator::ValidationResult</ref><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1adb1c1cc56fc361acd89538ab9a919068" kindref="member">NFTValidator::validateNFTTransfer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nftId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">ValidationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Transfer<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validateOwnership(nftId,<sp/>from))<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>ownership&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validateTransferability(nftId))<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.push_back(</highlight><highlight class="stringliteral">&quot;NFT<sp/>is<sp/>not<sp/>transferable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Transfer<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Transfer<sp/>validation<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a4a9f82157ffb421a9eb9457f2b419d0d" refkind="member"><highlight class="normal"><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">NFTValidator::ValidationResult</ref><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a4a9f82157ffb421a9eb9457f2b419d0d" kindref="member">NFTValidator::validateNFTBurn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nftId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>owner)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">ValidationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Burn<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validateOwnership(nftId,<sp/>owner))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>ownership&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validateBurnability(nftId))<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.push_back(</highlight><highlight class="stringliteral">&quot;NFT<sp/>is<sp/>not<sp/>burnable&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Burn<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Burn<sp/>validation<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a861f78b02136c839181af76ebba4ff4e" refkind="member"><highlight class="normal"><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">NFTValidator::ValidationResult</ref><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a861f78b02136c839181af76ebba4ff4e" kindref="member">NFTValidator::validateNFTRoyalty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nftId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>recipient,<sp/>uint32_t<sp/>basisPoints)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">ValidationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Royalty<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validateContractAddress(recipient))<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>royalty<sp/>recipient<sp/>address&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validateRoyaltyBasisPoints(basisPoints))<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>royalty<sp/>basis<sp/>points&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Royalty<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Royalty<sp/>validation<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1abcfe7f9187a9663f15f315e223c58a9b" refkind="member"><highlight class="normal"><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">NFTValidator::ValidationResult</ref><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1abcfe7f9187a9663f15f315e223c58a9b" kindref="member">NFTValidator::validateBatchNFTs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;NFTManager::NFT&gt;&amp;<sp/>nfts)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">ValidationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Batch<sp/>NFT<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref><sp/>:<sp/>nfts)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nftResult<sp/>=<sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a6ee0a5f8b8a39717aafdd2e8c16cba72" kindref="member">validateNFT</ref>(<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!nftResult.isValid)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.insert(result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.end(),<sp/>nftResult.errors.begin(),<sp/>nftResult.errors.end());</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Batch<sp/>NFT<sp/>validation<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a8eabb3871c52a6b85bc9a78166ac9847" refkind="member"><highlight class="normal"><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">NFTValidator::ValidationResult</ref><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a8eabb3871c52a6b85bc9a78166ac9847" kindref="member">NFTValidator::validateBatchTransfers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>nftIds,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">ValidationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Batch<sp/>transfer<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nftId<sp/>:<sp/>nftIds)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>transferResult<sp/>=<sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1adb1c1cc56fc361acd89538ab9a919068" kindref="member">validateNFTTransfer</ref>(nftId,<sp/>from,<sp/>to);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!transferResult.isValid)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.insert(result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.end(),<sp/>transferResult.errors.begin(),<sp/>transferResult.errors.end());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Batch<sp/>transfer<sp/>validation<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a208b11673c980bf8e7c74e4522c82104" refkind="member"><highlight class="normal"><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">NFTValidator::ValidationResult</ref><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a208b11673c980bf8e7c74e4522c82104" kindref="member">NFTValidator::validateBatchBurns</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>nftIds,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>owner)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult" kindref="compound">ValidationResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Batch<sp/>burn<sp/>validation<sp/>successful&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>nftId<sp/>:<sp/>nftIds)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>burnResult<sp/>=<sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a4a9f82157ffb421a9eb9457f2b419d0d" kindref="member">validateNFTBurn</ref>(nftId,<sp/>owner);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!burnResult.isValid)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.insert(result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a23b82a2968bc869517e727d775093991" kindref="member">errors</ref>.end(),<sp/>burnResult.errors.begin(),<sp/>burnResult.errors.end());</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1acdf32edc9899aac09730f6e167441f61" kindref="member">isValid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="db/d6d/structsatox_1_1nft_1_1NFTValidator_1_1ValidationResult_1a2f5307f166c19d37223bac96c99a68ac" kindref="member">message</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Batch<sp/>burn<sp/>validation<sp/>failed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1aae1688c5f7c5e3f5b6a5c3c7b58973bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1aae1688c5f7c5e3f5b6a5c3c7b58973bc" kindref="member">NFTValidator::validateSchema</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nlohmann::json&amp;<sp/>schema,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nlohmann::json&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>schema<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!schema.is_object()<sp/>||<sp/>!data.is_object())<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>required<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schema.contains(</highlight><highlight class="stringliteral">&quot;required&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>field<sp/>:<sp/>schema[</highlight><highlight class="stringliteral">&quot;required&quot;</highlight><highlight class="normal">])<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data.contains(field))<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>field<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(schema.contains(</highlight><highlight class="stringliteral">&quot;properties&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[field,<sp/>fieldSchema]<sp/>:<sp/>schema[</highlight><highlight class="stringliteral">&quot;properties&quot;</highlight><highlight class="normal">].items())<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.contains(field))<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldSchema.contains(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type<sp/>=<sp/>fieldSchema[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!data[field].is_string())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;number&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!data[field].is_number())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;boolean&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!data[field].is_boolean())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;array&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!data[field].is_array())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!data[field].is_object())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/>{1,<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Schema<sp/>validation<sp/>error:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>e.what()};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a81b8a34eeb1ae7ac38ebcb99aad8ba3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a81b8a34eeb1ae7ac38ebcb99aad8ba3f" kindref="member">NFTValidator::validateMetadataSchema</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>nlohmann::json&amp;<sp/>metadata)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>required<sp/>metadata<sp/>schema</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>nlohmann::json<sp/>schema<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;object&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;required&quot;</highlight><highlight class="normal">,<sp/>{</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;image&quot;</highlight><highlight class="normal">}},</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;properties&quot;</highlight><highlight class="normal">,<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>{</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">}},</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;description&quot;</highlight><highlight class="normal">,<sp/>{</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">}},</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;image&quot;</highlight><highlight class="normal">,<sp/>{</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">}},</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;attributes&quot;</highlight><highlight class="normal">,<sp/>{</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;array&quot;</highlight><highlight class="normal">}}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1aae1688c5f7c5e3f5b6a5c3c7b58973bc" kindref="member">validateSchema</ref>(schema,<sp/>metadata);</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a34d99333e7bee62ac2a316e2ac0e6d30" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a34d99333e7bee62ac2a316e2ac0e6d30" kindref="member">NFTValidator::addValidationRule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>ruleName,<sp/>std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT" kindref="compound">NFTManager::NFT</ref>&amp;)&gt;<sp/>rule)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>validationRules_[ruleName]<sp/>=<sp/>rule;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a2dd7d6f8aa27ff099549a8ca6cd4dee3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a2dd7d6f8aa27ff099549a8ca6cd4dee3" kindref="member">NFTValidator::removeValidationRule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>ruleName)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>validationRules_.erase(ruleName);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1ac9de7e9f3e9dfa4f408c34c17f815eb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1ac9de7e9f3e9dfa4f408c34c17f815eb0" kindref="member">NFTValidator::hasValidationRule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>ruleName)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>lock(mutex_);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>validationRules_.find(ruleName)<sp/>!=<sp/>validationRules_.end();</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a2a6a1bac85b504e71a1bddf276a3c35a" refkind="member"><highlight class="normal"><ref refid="de/d1b/structsatox_1_1nft_1_1NFTValidator_1_1Error" kindref="compound">NFTValidator::Error</ref><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a2a6a1bac85b504e71a1bddf276a3c35a" kindref="member">NFTValidator::getLastError</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastError_;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a167a0e7e8a52f8353985eb7db4d10bef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d66/classsatox_1_1nft_1_1NFTValidator_1a167a0e7e8a52f8353985eb7db4d10bef" kindref="member">NFTValidator::clearLastError</ref>()<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>lastError_<sp/>=<sp/>{0,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>helper<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NFTValidator::validateRequiredFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d8/dde/structsatox_1_1nft_1_1NFTManager_1_1NFT" kindref="compound">NFTManager::NFT</ref>&amp;<sp/><ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>.id.empty()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>.contractAddress.empty()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>.owner.empty()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>.creator.empty()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>.tokenURI.empty()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/dd7/namespacesatox_1_1nft" kindref="compound">nft</ref>.createdAt<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NFTValidator::validateMetadataFields(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NFTManager::NFTMetadata&amp;<sp/>metadata)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!metadata.name.empty()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!metadata.description.empty()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!metadata.image.empty();</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NFTValidator::validateOwnership(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nftId,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>owner)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>would<sp/>typically<sp/>check<sp/>against<sp/>the<sp/>blockchain<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>we&apos;ll<sp/>just<sp/>validate<sp/>the<sp/>address<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>validateContractAddress(owner);</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NFTValidator::validateTransferability(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nftId)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>would<sp/>typically<sp/>check<sp/>against<sp/>the<sp/>NFT&apos;s<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>we&apos;ll<sp/>assume<sp/>all<sp/>NFTs<sp/>are<sp/>transferable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NFTValidator::validateBurnability(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>nftId)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>would<sp/>typically<sp/>check<sp/>against<sp/>the<sp/>NFT&apos;s<sp/>properties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>now,<sp/>we&apos;ll<sp/>assume<sp/>all<sp/>NFTs<sp/>are<sp/>burnable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NFTValidator::validateRoyaltyBasisPoints(uint32_t<sp/>basisPoints)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basisPoints<sp/>&lt;=<sp/>10000;<sp/></highlight><highlight class="comment">//<sp/>Maximum<sp/>100%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NFTValidator::validateContractAddress(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>address)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>Ethereum<sp/>address<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>std::regex<sp/>pattern(</highlight><highlight class="stringliteral">&quot;^0x[0-9a-fA-F]{40}$&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::regex_match(address,<sp/>pattern);</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NFTValidator::validateTokenURI(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>uri)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>URI<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!uri.empty()<sp/>&amp;&amp;<sp/>(uri.starts_with(</highlight><highlight class="stringliteral">&quot;http://&quot;</highlight><highlight class="normal">)<sp/>||<sp/>uri.starts_with(</highlight><highlight class="stringliteral">&quot;https://&quot;</highlight><highlight class="normal">)<sp/>||<sp/>uri.starts_with(</highlight><highlight class="stringliteral">&quot;ipfs://&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NFTValidator::validateTimestamp(uint64_t<sp/>timestamp)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now<sp/>=<sp/>std::chrono::system_clock::now();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>now_seconds<sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::seconds&gt;(now.time_since_epoch()).count();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timestamp<sp/>&lt;=<sp/>now_seconds;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>satox<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/nft/src/nft_validator.cpp"/>
  </compounddef>
</doxygen>
