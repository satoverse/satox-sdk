<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase" kind="class" language="C++" prot="public">
    <compoundname>satox::core::FirebaseManager::RealtimeDatabase</compoundname>
    <includes refid="d8/d06/firebase__manager_8hpp" local="no">firebase_manager.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1aa9ca571b1ae85b808cd15c1a9e7dd0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::FirebaseManager::RealtimeDatabase::getData</definition>
        <argsstring>(const std::string &amp;connection_id, const std::string &amp;path, nlohmann::json &amp;result)</argsstring>
        <name>getData</name>
        <qualifiedname>satox::core::FirebaseManager::RealtimeDatabase::getData</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Get data from a path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Database path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Data at path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/firebase_manager.hpp" line="143" column="14" bodyfile="src/core/src/cloud/firebase_manager.cpp" bodystart="326" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1afc6fcae71f79ca5280cd2c551cbe31c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::FirebaseManager::RealtimeDatabase::setData</definition>
        <argsstring>(const std::string &amp;connection_id, const std::string &amp;path, const nlohmann::json &amp;data, nlohmann::json &amp;result)</argsstring>
        <name>setData</name>
        <qualifiedname>satox::core::FirebaseManager::RealtimeDatabase::setData</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Set data at a path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Database path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/firebase_manager.hpp" line="155" column="14" bodyfile="src/core/src/cloud/firebase_manager.cpp" bodystart="332" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1a5dfb1c5c788161e67d9e5543b57d70f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::FirebaseManager::RealtimeDatabase::updateData</definition>
        <argsstring>(const std::string &amp;connection_id, const std::string &amp;path, const nlohmann::json &amp;data, nlohmann::json &amp;result)</argsstring>
        <name>updateData</name>
        <qualifiedname>satox::core::FirebaseManager::RealtimeDatabase::updateData</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const nlohmann::json &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Update data at a path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Database path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/firebase_manager.hpp" line="168" column="14" bodyfile="src/core/src/cloud/firebase_manager.cpp" bodystart="338" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1a1f6166501a6eac8383e0ccc58e9a8131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::FirebaseManager::RealtimeDatabase::deleteData</definition>
        <argsstring>(const std::string &amp;connection_id, const std::string &amp;path, nlohmann::json &amp;result)</argsstring>
        <name>deleteData</name>
        <qualifiedname>satox::core::FirebaseManager::RealtimeDatabase::deleteData</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>nlohmann::json &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Delete data at a path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Database path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Operation result </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/firebase_manager.hpp" line="180" column="14" bodyfile="src/core/src/cloud/firebase_manager.cpp" bodystart="344" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1ad7eb0abc75111894532204351c52b7f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string satox::core::FirebaseManager::RealtimeDatabase::listen</definition>
        <argsstring>(const std::string &amp;connection_id, const std::string &amp;path, std::function&lt; void(const nlohmann::json &amp;)&gt; callback)</argsstring>
        <name>listen</name>
        <qualifiedname>satox::core::FirebaseManager::RealtimeDatabase::listen</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>std::function&lt; void(const nlohmann::json &amp;)&gt;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Listen to real-time changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Database path </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function for real-time updates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Listener ID if successful, empty string otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/firebase_manager.hpp" line="191" column="21" bodyfile="src/core/src/cloud/firebase_manager.cpp" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1afba7f62d95e073fc9307941229766bb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool satox::core::FirebaseManager::RealtimeDatabase::stopListening</definition>
        <argsstring>(const std::string &amp;connection_id, const std::string &amp;listener_id)</argsstring>
        <name>stopListening</name>
        <qualifiedname>satox::core::FirebaseManager::RealtimeDatabase::stopListening</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>connection_id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>listener_id</declname>
        </param>
        <briefdescription>
<para>Stop listening to real-time changes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>connection_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Connection ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Listener ID to stop </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if successful, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/core/include/satox/core/cloud/firebase_manager.hpp" line="201" column="14" bodyfile="src/core/src/cloud/firebase_manager.cpp" bodystart="355" bodyend="358"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Realtime Database operations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/core/include/satox/core/cloud/firebase_manager.hpp" line="134" column="5" bodyfile="src/core/include/satox/core/cloud/firebase_manager.hpp" bodystart="134" bodyend="202"/>
    <listofallmembers>
      <member refid="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1a1f6166501a6eac8383e0ccc58e9a8131" prot="public" virt="non-virtual"><scope>satox::core::FirebaseManager::RealtimeDatabase</scope><name>deleteData</name></member>
      <member refid="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1aa9ca571b1ae85b808cd15c1a9e7dd0f6" prot="public" virt="non-virtual"><scope>satox::core::FirebaseManager::RealtimeDatabase</scope><name>getData</name></member>
      <member refid="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1ad7eb0abc75111894532204351c52b7f6" prot="public" virt="non-virtual"><scope>satox::core::FirebaseManager::RealtimeDatabase</scope><name>listen</name></member>
      <member refid="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1afc6fcae71f79ca5280cd2c551cbe31c9" prot="public" virt="non-virtual"><scope>satox::core::FirebaseManager::RealtimeDatabase</scope><name>setData</name></member>
      <member refid="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1afba7f62d95e073fc9307941229766bb1" prot="public" virt="non-virtual"><scope>satox::core::FirebaseManager::RealtimeDatabase</scope><name>stopListening</name></member>
      <member refid="d5/dab/classsatox_1_1core_1_1FirebaseManager_1_1RealtimeDatabase_1a5dfb1c5c788161e67d9e5543b57d70f5" prot="public" virt="non-virtual"><scope>satox::core::FirebaseManager::RealtimeDatabase</scope><name>updateData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
